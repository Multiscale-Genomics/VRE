//
// JavaScript Functions to select/unselect Nucleotide Sequence Pieces,
// and/or hide/unhide pieces information.
//

// Sequence Selected Nucleotide/BasePairStep/Tetramer.
var nucSelected = "";
var bpsSelected = "";
var tetSelected = "";
var stepSelected = "";

// J-coupling/NOE Selected
var Jcoupling = "";

// CURVES functions

function unhideSections(selID,divID) {

    hideAll("HelicalParamsSections");
    hideAll("HelicalParamsSectionsTime");
    hideAll("HelicalParamsPlots");
    unselectAll("CurvesParams");
    	hideAll("HelicalParamsPlotsTime");
    	hideAll("CurvesPlots");

	var div = document.getElementById("AlphaSelPlot");
	if (div) {
		//div.innerHTML = '';
		div.className='hidden';
    	}

    if (selID == "AVGSel") {
	document.getElementById("TIMESel").className = 'unselected';
    	hideAll("CurvesHelicalParamsSections");
    	hideAll("CurvesParams");
    	hideAll("CurvesPlots");
	unselectAllNucs();
	//nucSelected="";
    }

    if (selID == "TIMESel") {
	document.getElementById("AVGSel").className = 'unselected';
    	hideAll("CurvesParams");
    	hideAll("CurvesHelicalParamsSections");
    	hideAll("CurvesPlots");
	unselectAllNucs();
    }

    var item = document.getElementById(divID);
    if (item) {
        item.className=(item.className=='hidden')?'unhidden':'hidden';
    }
    var sel = document.getElementById(selID);
    if (sel) {
       sel.className=(sel.className=='selected')?'unselected':'selected';
    }


    if(divID == "backboneTorsions") {
	unselectAllNucs();
	selectBackbone();
    }

    if(divID == "BP_HelicalParms") {
	unselectAllNucs();
	selectBasePairs();
    }

    if(divID == "BPS_HelicalParms") {
	unselectAllNucs();
	selectBasePairSteps();
    }

    if(divID == "Grooves") {
	unselectAllNucs();
	selectBasePairSteps(); // Grooves involve also base pair steps.
    }
}

function unhideSelPlots(selID,divID) {

    hideAll("HelicalParamsPlotsTime");
    unselectAll("HelicalParamsSectionsTime");

    var back = document.getElementById("bckTorsionsTimeSel");
    var bp = document.getElementById("BP_HelicalParmsTimeSel");
    var bps = document.getElementById("BPS_HelicalParmsTimeSel");
    var grooves = document.getElementById("GroovesTimeSel");

    if(nucSelected == "" && back.className=="selected") {
	alert("You must select a Nucleotide first.\n");
    }
    else if (bpsSelected == "" && bp.className=="selected") {
	alert("You must select a Nucleotide Base Pair ( | ) first.\n");
    }
    else if (tetSelected == "" && ((bps.className=="selected") || (grooves.className=="selected")) ) {
	alert("You must select a Nucleotide Tetramer ( X ) first.\n");
    }
    else {
	var item = document.getElementById(divID);
	if (item) {
	        item.className=(item.className=='hidden')?'unhidden':'hidden';
	}
	var sel = document.getElementById(selID);
	if (sel) {
	       sel.className=(sel.className=='selected')?'unselected':'selected';
	}
    }
}

function unhidePlots(selID,divID) {

    hideAll("HelicalParamsPlots");
    hideAll("BI-BII-graphic-div");
    hideAll("Alpha-Gamma-graphic-div");
    hideAll("Puckering-graphic-div");
    unselectAll("HelicalParamsSections");

    if(selID == "BISel")
	document.getElementById("BI-BII-graphic").className = "unhidden";
    if(selID == "AGSel")
	document.getElementById("Alpha-Gamma-graphic").className = "unhidden";
    if(selID == "PuckSel")
	document.getElementById("Puckering-graphic").className = "unhidden";

    var item = document.getElementById(divID);
    if (item) {
        item.className=(item.className=='hidden')?'unhidden':'hidden';
    }
    var sel = document.getElementById(selID);
    if (sel) {
       sel.className=(sel.className=='selected')?'unselected':'selected';
    }
}

function unselectAll(divID) {
    var d = document.getElementById(divID);
    if (d)
    {
	    var fc = d.getElementsByTagName("a");
                for(var i = 0; i < fc.length; i++)
                {
                        var h = fc[i];
                        if(h) {
                                if(h.className=='selected')
                                        h.className='unselected';
                        }
                }
    }
}

function selectAll(divID) {

    var d = document.getElementById(divID);
    if (d)
    {
            var fc = d.getElementsByTagName("a");
                for(var i = 0; i < fc.length; i++)
                {
                        var h = fc[i];
                        if(h) {
                                if(h.className=='unselected')
                                        h.className='selected';
                        }
                }
    }
}

function selectBasePairSteps(){

    var d = document.getElementById("divSeq2");

    if (d)
    {
            var fc = d.getElementsByTagName("a");
                for(var i = 0; i < fc.length; i++)
                {
                        var h = fc[i];
                        if(h) {
                                var bck_id = h.id;
                                var matches = bck_id.match(/-[A-Z][A-Z][A-Z][A-Z]$/g);
                                for (m in matches){
                                        if(h.className=='unselected')
                                              h.className='selected';
                                }
                        }
                }
    }
}

function selectBasePairs(){

    var d = document.getElementById("divSeq2");

    if (d)
    {
            var fc = d.getElementsByTagName("a");
                for(var i = 0; i < fc.length; i++)
                {
                        var h = fc[i];
                        if(h) {
                                var bck_id = h.id;
                        	var matches = bck_id.match(/-[A-Z][A-Z]$/g);
				for (m in matches){
                	                if(h.className=='unselected')
                        	              h.className='selected';
				}
                        }
                }
    }
}

function selectBackbone(){

    var d = document.getElementById("divSeq2");

    if (d)
    {
            var fc = d.getElementsByTagName("a");
                for(var i = 0; i < fc.length; i++)
                {
                        var h = fc[i];			
                        if(h) {
				var bck_id = h.id;
				var backbone = bck_id.substr(-1);
				if(backbone == "-"){
                                	if(h.className=='unselected')
                                  	      h.className='selected';
				}
                        }
                }
    }
}

function hideDiv(divID) {
    var d = document.getElementById(divID);
    if (d)
    {
	d.className='hidden';
    }
}

function unselectDiv(divID) {
    var d = document.getElementById(divID);
    if (d)
    {
        d.className='unselected';
    }
}

function hideAll(divID) {
    var d = document.getElementById(divID);
    if (d)
    {
            //var fc = d.childNodes;
	    var fc = d.getElementsByTagName('*');
                for(var i = 0; i < fc.length; i++)
                {
                        var h = fc[i];
                        if(h) {
                                if(h.className=='unhidden')
                                        h.className='hidden';
                        }
                }
    }
}

function unselectAllNucs() {

    var d = document.getElementById("divSeq2");
    if (d)
    {
    	    var fc = d.getElementsByTagName("a");
		for(var i = 0; i < fc.length; i++)
	        {
			var h = fc[i];
			if(h) {
				if(h.className=='selected')
					h.className='unselected';
			}
		}
    }
    bpsSelected = '';
    nucSelected = '';
    stepSelected = '';
    tetSelected = '';
}

function selectAllNucs() {

    var d = document.getElementById("divSeq2");
    if (d)
    {
    	    var fc = d.getElementsByTagName("a");
		for(var i = 0; i < fc.length; i++)
	        {
			var h = fc[i];
			if(h) {
				if(h.className=='unselected')
					h.className='selected';
			}
		}
    }
}

function selectTetramer(nuc,length) {

    if(nuc) {
	var arr = nuc.split("-");
	var num1 = arr[0];
	var num2 = num1*1 + 1;
	var tetArr = arr[1].split("");
	var letter1 = tetArr[0];
	var letter2 = tetArr[1];
	var letter3 = tetArr[2];
	var letter4 = tetArr[3];

	var code1 = num1+"-"+letter1;
	var code2 = num2+"-"+letter2;
	var num3 = length*2 - num1*1;
	var num4 = num3*1 + 1;
	var code3 = num3+"-"+letter3;
	var code4 = num4+"-"+letter4;

	var codeBPS1 = num1+"-"+letter1+letter4;
	var codeBPS2 = num2+"-"+letter2+letter3;

	var codeBP1 = num1+"-";
	var codeBP2 = num4+"-";

	selectId(code1);
	selectId(code2);
	selectId(code3);
	selectId(code4);
	selectId(codeBP1);
	selectId(codeBP2);
	selectId(codeBPS1);
	selectId(codeBPS2);
    }
}

function selectBaseStep(nuc) {

    if(nuc) {
	// 16-G:17-T
	var arr = nuc.split(":");
	var code1 = arr[0];
	var code2 = arr[1];
	
	selectId(code1);
	selectId(code2);
	selectId(nuc);
    }
}

function selectBasePairStep(nuc,length) {

    if(nuc) {
	var arr = nuc.split("-");
	var num = arr[0];
	var pairArr = arr[1].split("");
	var letter1 = pairArr[0];
	var letter2 = pairArr[1];

	var code1 = num+"-"+letter1;

	var num2 = length*2 - num + 1;
	var code2 = num2+"-"+letter2;

	selectId(code1);
	selectId(code2);
    }
}

function selectId (divID) {

    var nuc = document.getElementById(divID);
    if(nuc)
	nuc.className = 'selected';
}

function selectNucleotide(nucID,path) {

    var nuc = document.getElementById(nucID);
    if (nuc) {
        unselectAllNucs();

        if(nuc.className=='unselected'){
		nuc.className='selected';
		if(nuc.name != 'undefined') {
	        	if(nuc.name=='BPS'){
				bpsSelected = nuc.id;
			//	selectBasePairStep(nucID);
			}
	        	else if(nuc.name=='TET'){
				tetSelected = nuc.id;
			}
			else {
				nucSelected = nuc.id;
			}
		}
	}

	var d = document.getElementById("HelicalParamsPlotsTime");
	if (d)
	{
                var fc = d.childNodes;
                for(var i = 0; i < fc.length; i++)
                {
                        var h = fc[i];
                        if(h) {
				var divID = h.id;
				if(divID) {
        	                        var matches = divID.match(/Time_\w+/g);
					if (matches != undefined) {
						//alert("Matches: "+matches);
						var section = matches.toString().replace("Time_","");

				                var fc2 = h.childNodes;
				                for(var j = 0; j < fc2.length; j++)
				                {
				                        var h2 = fc2[j];
				                        if(h2) {
				                                var divID2 = h2.id;
				                                if(divID2) {
				        	                        var matches = divID2.match(/\w+TimeSelPlot/g);
									//alert("Matches2: "+matches);
									if (matches != undefined) {
										var m = matches.toString().replace("TimeSelPlot","");
										//alert("Matches M: "+m);
	// R Plot
	var txt = "<img border='0' width='900' src='"+path+"/"+section+"/"+nuc.id+"/"+m+".dat.png'>";

	// Download Buttons
	txt += '<table align="center" border="0"><tr><td>';
	txt += '<p align="right" class="curvesDatText" onClick="window.open(\''+path+'/'+section+'/'+nuc.id+'/'+m+'.dat.png\',\'\', \'_blank,resize=1,width=800,height=400\');">Open in New Window</p><br/>';
	txt += '</td><td>';
	txt += '<a href="getFile.php?fileloc='+path+'/'+section+'/'+nuc.id+'/'+m+'.dat&type=curves"> <p align="right" class="curvesDatText">Download Raw Data</p></a>';
	txt += '</td></tr></table>';
	h2.innerHTML = txt;
									}
								}
							}
						}
					}
				}
                        }
                }
	}
    }
}

function unhide(divID) {
    var item = document.getElementById(divID);
    if (item) {
        item.className=(item.className=='hidden')?'unhidden':'hidden';
    }
}

// STIFFNESS functions

function selectNucleotideStiffness(nucID,path) {

    hideAll("BPParamsPlots");

    var nuc = document.getElementById(nucID);
    if (nuc) {
        unselectAllNucs();

        if(nuc.className=='unselected'){
		nuc.className='selected';
		if(nuc.name != 'undefined') {
	        	if(nuc.name=='BPS'){
				bpsSelected = nuc.id;
			//	selectBasePairStep(nucID);
			}
	        	else if(nuc.name=='TET'){
				tetSelected = nuc.id;
			}
			else {
				nucSelected = nuc.id;
			}
		}
	}

	var table = "stiffness."+nuc.id;
	var d = document.getElementById(table);
	if (d)
	{
		//d.className=(d.className=='hidden')?'unhidden':'hidden';
		d.className = 'unhidden';
	}

	var d = document.getElementById("HelicalParamsPlotsTime");
	if (d)
	{
                var fc = d.childNodes;
                for(var i = 0; i < fc.length; i++)
                {
                        var h = fc[i];
                        if(h) {
				var divID = h.id;
				if(divID) {
        	                        var matches = divID.match(/Time_\w+/g);
					if (matches != undefined) {
						//alert("Matches: "+matches);
						var section = matches.toString().replace("Time_","");

				                var fc2 = h.childNodes;
				                for(var j = 0; j < fc2.length; j++)
				                {
				                        var h2 = fc2[j];
				                        if(h2) {
				                                var divID2 = h2.id;
				                                if(divID2) {
				        	                        var matches = divID2.match(/\w+TimeSelPlot/g);
									//alert("Matches2: "+matches);
									if (matches != undefined) {
										var m = matches.toString().replace("TimeSelPlot","");
										//alert("Matches M: "+m);
	// R Plot
	var txt = "<img border='0' width='900' src='"+path+"/FORCE_CTES/"+nuc.id+"/"+m+".dat.png'>";

	// Download Buttons
	txt += '<table align="center" border="0"><tr><td>';
	txt += '<p align="right" class="curvesDatText" onClick="window.open(\''+path+'/FORCE_CTES/'+nuc.id+'/'+m+'.dat.png\',\'\', \'_blank,resize=1,width=800,height=400\');">Open in New Window</p><br/>';
	txt += '</td><td>';
	txt += '<a href="getFile.php?fileloc='+path+'/FORCE_CTES/'+nuc.id+'/'+m+'.dat&type=curves"> <p align="right" class="curvesDatText">Download Raw Data</p></a>';
	txt += '</td></tr></table>';
	h2.innerHTML = txt;
									}
								}
							}
						}
					}
				}
                        }
                }
	}
    }
}


function unhideStiffnessAvgPlots(selID,divID) {

    hideAll("StiffnessParams");
    hideAll("BPS_Stiffness");
    unselectAll("HelicalParams");
    unselectAllNucs();

    var sel = document.getElementById("TIMESel");
    if (sel) 
           sel.className='unselected';

        var item = document.getElementById(divID);
        if (item) {
                item.className=(item.className=='hidden')?'unhidden':'hidden';
        }
        var sel = document.getElementById(selID);
        if (sel) {
               sel.className=(sel.className=='selected')?'unselected':'selected';
        }
}

function unhideStiffnessTimePlots(selID,divID) {

    hideAll("StiffnessParams");
    hideDiv("HelicalParams");
    hideDiv("BPS_HelicalParms");
    unselectAll("BPS_HelicalParmsTime");
    unselectAllNucs();

    var sel = document.getElementById("AVGSel");
    if (sel) 
           sel.className='unselected';

        var item = document.getElementById(divID);
        if (item) {
                item.className=(item.className=='hidden')?'unhidden':'hidden';
        }
        var sel = document.getElementById(selID);
        if (sel) {
               sel.className=(sel.className=='selected')?'unselected':'selected';
        }
}

function unhideStiffnessBPPlots(selID,divID) {

    hideAll("BPS_Stiffness"); 
    hideAll("HelicalParamsPlots");
    hideAll("HelicalParamsPlotsTime");

    var sel = document.getElementById("BPS_HelicalParmsSel");
    if (sel) {
           sel.className='unselected';
    }

    if (tetSelected == "") {
	alert("You must select a Nucleotide Tetramer ( X ) first.\n");
    }
    else {
	var item = document.getElementById(divID);
	if (item) 
	        item.className=(item.className=='hidden')?'unhidden':'hidden';
	
	var sel = document.getElementById(selID);
	if (sel) { 
		sel.className=(sel.className=='selected')?'unselected':'selected';
		if(sel.className == 'unselected')
			unselectAllNucs();
	}
    }
}

function unhideStiffnessHPPlots(selID,divID) {

    unselectAll("BPS_HelicalParms");
    unselectDiv("StiffnessBPSel");
    hideAll("StiffnessParams");
    unselectAllNucs();

	var item = document.getElementById(divID);
	if (item) 
	        item.className=(item.className=='hidden')?'unhidden':'hidden';
	
	var sel = document.getElementById(selID);
	if (sel) { 
		sel.className=(sel.className=='selected')?'unselected':'selected';
		if(sel.className == 'unselected')
			unselectAllNucs();
	}
}

function unhideSelStiffnessPlots(selID,divID) {

    hideAll("HelicalParamsPlotsTime");
    unselectAll("BPS_HelicalParmsTime");

    if (tetSelected == "") {
        alert("You must select a Nucleotide Tetramer ( X ) first.\n");
    }
    else {
        var item = document.getElementById(divID);
        if (item) {
                item.className=(item.className=='hidden')?'unhidden':'hidden';
        }
        var sel = document.getElementById(selID);
        if (sel) {
               sel.className=(sel.className=='selected')?'unselected':'selected';
        }
    }
}

function selectStiffnessTetramer(nuc,length) {

	//hideAll("StiffnessTimeSel");
	//hideAll("BPS_Stiffness");
        //hideAll("HelicalParamsPlotsTime");
        hideAll("StiffnessParams");
	selectTetramer(nuc,length);
	var sel = document.getElementById("AVGSel");
	if (sel) 
		sel.className='selected';
	var sel = document.getElementById("StiffnessHPSel");
	if (sel) 
		sel.className='selected';
	var sel = document.getElementById("TIMESel");
	if (sel) 
		sel.className='unselected';
	var sel = document.getElementById("BPS_HelicalParmsSel");
	if (sel) 
		sel.className='unselected';

	var arr = nuc.split("-");
	var num1 = arr[0];
	var div = document.getElementById("stiffness."+num1);
	if(div)
		div.className='unhidden';
	var div = document.getElementById("BPParamsPlots");
	if(div)
		div.className='unhidden';
}

// NMR functions

function selectNucleotideNew(analysis,nucID,path) {

    var donttouchimage = 0;
    var nuc = document.getElementById(nucID);
    if (nuc) {
        unselectAllNucs();

        if(nuc.className=='unselected'){
		nuc.className='selected';
		if(nuc.name != 'undefined') {
	        	if(nuc.name=='BPS'){
				bpsSelected = nuc.id;
			//	selectBasePairStep(nucID);
			}
	        	else if(nuc.name=='TET'){
				tetSelected = nuc.id;
			}
	        	else if(nuc.name=='BS'){
				stepSelected = nuc.id;
			}
			else {
				nucSelected = nuc.id;
			}
		}
	}

	var nucid = nuc.id;
	var arr = nucid.split("-");
	var num = arr[0];
	var nucOneLetter = arr[1];

	// If coming from Base Step (17-C:18-G)
	var bpLetter = nucid.match(/:/);
	if (bpLetter != undefined){
		var arrNOL = nucid.split(":");
		var arrNOL2 = arrNOL[1].split("-");
		nucOneLetter = arrNOL2[1];
	}

	if(analysis == 'nmrNOE'){
		if(nucOneLetter == 'C' || nucOneLetter == 'U'){
			var d = document.getElementById("H5-H6");
			if(d)
				d.className="curvesText_hidden unhidden_curves";
		}
		else{
			var d = document.getElementById("H5-H6");
			if(d)
				d.className="curvesText_hidden hidden";

			if(Jcoupling == 'Nuc_H5-Nuc_H6' ){

				// Changing Ribose Image 
				hideAll("Rib_images");
				hideAll("HelicalParamsPlotsTime");

				var d = document.getElementById("Rib");
				if(d)
					d.className="unhidden";
				return;
			}
		}

		var mat = Jcoupling.match(/Step/);
		// If previous plot was for Base Step and the current one is for single nucleotide (or the other way around), reset visualization.
		if (((bpLetter == undefined) && (mat != undefined)) || ((bpLetter != undefined) && (mat == undefined)) ) {
			// Changing Ribose Image 
				hideAll("Rib_images");
				hideAll("HelicalParamsPlotsTime");

				var d = document.getElementById("Rib");
				if(d)
					d.className="unhidden";

				unselectAll("Proton_Pairs_Params");
				//return;
				donttouchimage = 1;
		}
	}

	if(analysis == 'nmrJ')
	    hideAll("StatsTable");

	if(analysis == 'stiffness'){
	    hideAll("BPParamsPlots");

		var table = "stiffness."+nuc.id;
		var d = document.getElementById(table);
		if (d)
			d.className = 'unhidden';
	}

	var path2 = nucid;
	var d = document.getElementById("HelicalParamsPlotsTime");
	if (d)
	{
                var fc = d.childNodes;
                for(var i = 0; i < fc.length; i++)
                {
                        var h = fc[i];
                        if(h) {
				var divID = h.id;
				if(divID) {
					var matches = divID.match(/Time_\w+/g);
					if (matches != undefined) {
						//alert("Matches: "+matches);
						var section = matches.toString().replace("Time_","");
						if(analysis=='stiffness'){
							section = "FORCE_CTES";
							path2 = "FORCE_CTES/"+nuc.id;
						}
						if(analysis=='nmrJ' || analysis=='nmrNOE'){
							section = '';
							path2 = num;
						}

		                var fc2 = h.childNodes;
		                for(var j = 0; j < fc2.length; j++)
		                {
	                        var h2 = fc2[j];
	                        if(h2) {
                                var divID2 = h2.id;
                                if(divID2) {
        	                        var matches = divID2.match(/[\w-]+TimeSelPlot/g);
					if (matches != undefined) {
					var m = matches.toString().replace("TimeSelPlot","");
        	                        var matches = m.match(/Nuc_/g);
					if (matches != undefined) {
						m = m.toString().replace(/Nuc/,path2);
						matches = divID2.match(/Step/g);
						if(matches != undefined){
							m = m.replace("-Step","");
							num2 = parseInt(path2) + 1;
							m = m.replace(/Nuc/,num2);
						}
						else{
							m = m.replace(/Nuc/,path2);
						}
						//alert("Matches M: "+m);
						if(nucOneLetter == 'G' || nucOneLetter == 'A' ){
							m = m.toString().replace("H6","H8");
						}
					}
	// R Plot
	var txt = "<img border='0' width='900' src='"+path+"/"+section+"/"+path2+"/"+m+".dat.png'>";

	// Download Buttons
	txt += '<table align="center" border="0"><tr><td>';
	txt += '<p align="right" class="curvesDatText" onClick="window.open(\''+path+'/'+section+'/'+path2+'/'+m+'.dat.png\',\'\', \'_blank,resize=1,width=800,height=400\');">Open in New Window</p><br/>';
	txt += '</td><td>';
	txt += '<a href="getFile.php?fileloc='+path+'/'+section+'/'+path2+'/'+m+'.dat&type=curves"> <p align="right" class="curvesDatText">Download Raw Data</p></a>';
	txt += '</td></tr></table>';
	h2.innerHTML = txt;
									
									}
								}
							}
						}
					}
				}
                        }
                }
	}
	if(analysis == 'nmrJ'){
		var code = "nmrJ."+Jcoupling+"-"+num;
		var mean = document.getElementById(code);
		if (mean)
			mean.className='unhidden';
	}
	if(analysis == 'nmrNOE' && donttouchimage == 0){

	    if(Jcoupling != undefined){
		if(Jcoupling != ""){
		// Changing Ribose Image 
		hideAll("Rib_images");

		var step = Jcoupling.match(/Step/);
		var matchesH6 = Jcoupling.match(/H6/);
		if (step != undefined){
			var image = Jcoupling+"SelRib";

			var item = document.getElementById(image);
			if (item)
				item.className='unhidden';
		}
		else if((nucOneLetter == 'G' || nucOneLetter == 'A') && matchesH6 != undefined ){

			var image = nucOneLetter+"_"+Jcoupling+"SelRib";
			image = image.toString().replace("H6","H8");
			var item = document.getElementById(image);
			if (item)
				item.className='unhidden';

		}
		else if(matchesH6 != undefined){

			var image = nucOneLetter+"_"+Jcoupling+"SelRib";
			var item = document.getElementById(image);
			if (item)
				item.className='unhidden';
		}
		else {
			var image = Jcoupling+"SelRib";

			var item = document.getElementById(image);
			if (item)
				item.className='unhidden';
		}
		}
	    }
	}
    }
}

function unhideSelNmrPlots(selID,divID) {

    hideAll("HelicalParamsPlotsTime");
    hideAll("StatsTable");
    unselectAll("Proton_Pairs_Params");

    var matchesStep = selID.match(/Step/);

    if (nucSelected == "" && matchesStep == undefined) {
        alert("You must select a Nucleotide first.\n");
    }
    else if (stepSelected == "" && matchesStep != undefined){
        alert("You must select a Nucleotide Pair Step (-) first.\n");
    }
    else {
	var nucOneLetter = '';
        var item = document.getElementById(divID);
        if (item) {
                item.className=(item.className=='hidden')?'unhidden':'hidden';
		id = item.id;
		// J-coupling Mean & Stdev
		var matches = id.match(/[\w-]+TimeSelPlot/g);
		if (matches != undefined) 
				var m = matches.toString().replace("TimeSelPlot","");

		// If coming from Base Step (17-C:18-G)
		if(matchesStep != undefined){
			var bpLetter = stepSelected.match(/:/);
			if (bpLetter != undefined){
				var arrNOL = stepSelected.split(":");
				var arrNOL2 = arrNOL[1].split("-");
				nucOneLetter = arrNOL2[1];
			}
		}
		else{
			var arr = nucSelected.split("-");
			var num = arr[0];
			nucOneLetter = arr[1];
		}

		var code = "nmrJ."+m+"-"+num;

	        var mean = document.getElementById(code);
        	if (mean) 
	                mean.className=(mean.className=='hidden')?'unhidden':'hidden';

        }
        var sel = document.getElementById(selID);
        if (sel) {
               sel.className=(sel.className=='selected')?'unselected':'selected';
        }
	Jcoupling = m;
	    if(Jcoupling != '' && nucOneLetter != ''){
		var matchesH6 = Jcoupling.match(/H6/);

		// Changing Ribose Image
		hideAll("Rib_images");

		if( matchesStep == undefined && (nucOneLetter == 'G' || nucOneLetter == 'A') && matchesH6 != undefined ){

			var image = nucOneLetter+"_"+Jcoupling+"SelRib";
			image = image.toString().replace("H6","H8");
			var item = document.getElementById(image);
			if (item)
				item.className='unhidden';
		}
		else if(matchesStep == undefined && matchesH6 != undefined){

			var image = nucOneLetter+"_"+Jcoupling+"SelRib";

			var item = document.getElementById(image);
			if (item)
				item.className='unhidden';
		}
		else{
			var image = Jcoupling+"SelRib";

			var item = document.getElementById(image);
			if (item)
				item.className='unhidden';
		}
	    }

    }
}

function unhideSelNmrALL(selID,divID) {

	hideAll("HelicalParamsPlots");
	hideAll("StatsTable");
	unselectAll("Proton_Pairs_Avg");

        var item = document.getElementById(divID);
        if (item) 
                item.className=(item.className=='hidden')?'unhidden':'hidden';

        var sel = document.getElementById(selID);
        if (sel) {
               sel.className=(sel.className=='selected')?'unselected':'selected';
        }
	Jcoupling = '';

        // Changing Ribose Image
        hideAll("Rib_Avg_images");

        var item = document.getElementById("Rib_Avg");
        if (item)
                item.className=(item.className=='hidden')?'unhidden':'hidden';
}

function unhideSelNmrAVGPlots(selID,divID) {

        hideAll("HelicalParamsPlots");
	hideAll("StatsTable");
	unselectAll("Proton_Pairs_Avg");

        var item = document.getElementById(divID);
        if (item)
                item.className=(item.className=='hidden')?'unhidden':'hidden';

        var sel = document.getElementById(selID);
        if (sel) {
               sel.className=(sel.className=='selected')?'unselected':'selected';
        }
        Jcoupling = '';

        // Changing Ribose Image
        hideAll("Rib_Avg_images");

        var item = document.getElementById(selID+"Rib");
        if (item)
                item.className=(item.className=='hidden')?'unhidden':'hidden';

}

function unhideNmrAvgPlots(selID,divID) {

    hideAll("StatsTable");
    hideAll("HelicalParamsPlotsTime");
    hideAll("HelicalParamsPlots");
    hideAll("Time_Params");
    hideAll("Rib_Avg_images");
    unselectAll("Proton_Pairs_Avg");
    unselectAll("Proton_Pairs_Params");
    unselectAllNucs();

    var item = document.getElementById("Rib_Avg");
    if (item)
	item.className="unhidden";
	//item.className=(item.className=='hidden')?'unhidden':'hidden';

    var sel = document.getElementById("TIMESel");
    if (sel)
           sel.className='unselected';

        var item = document.getElementById(divID);
        if (item) {
                item.className=(item.className=='hidden')?'unhidden':'hidden';
        }
        var sel = document.getElementById(selID);
        if (sel) {
               sel.className=(sel.className=='selected')?'unselected':'selected';
        }
}

function unhideNmrTimePlots(selID,divID) {

    hideAll("StatsTable");
    hideAll("HelicalParamsPlotsTime");
    hideAll("HelicalParamsPlots");
    hideAll("Avg_Params");
    hideAll("Rib_images");
    unselectAll("Proton_Pairs_Avg");
    unselectAll("Proton_Pairs_Params");
    unselectAllNucs();

    var item = document.getElementById("Rib");
    if (item)
	//item.className=(item.className=='hidden')?'unhidden':'hidden';
	item.className="unhidden";

    var sel = document.getElementById("AVGSel");
    if (sel)
           sel.className='unselected';

        var item = document.getElementById(divID);
        if (item) {
                item.className=(item.className=='hidden')?'unhidden':'hidden';
        }
        var sel = document.getElementById(selID);
        if (sel) {
               sel.className=(sel.className=='selected')?'unselected':'selected';
        }
}

