-- MySQL dump 10.11
--
-- Host: localhost    Database: MDWeb
-- ------------------------------------------------------
-- Server version	5.0.51a-3ubuntu5.8

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `Log`
--

DROP TABLE IF EXISTS `Log`;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
CREATE TABLE `Log` (
  `idLog` int(10) unsigned NOT NULL auto_increment,
  `dateTime` varchar(45) NOT NULL,
  `message` varchar(255) default NULL,
  `user` varchar(40) default NULL,
  `project` varchar(100) default NULL,
  `object` varchar(10) default NULL,
  `filein` varchar(15) default NULL,
  `fileout` varchar(15) default NULL,
  PRIMARY KEY  (`idLog`)
) ENGINE=InnoDB AUTO_INCREMENT=16 DEFAULT CHARSET=latin1;
SET character_set_client = @saved_cs_client;

--
-- Dumping data for table `Log`
--

LOCK TABLES `Log` WRITE;
/*!40000 ALTER TABLE `Log` DISABLE KEYS */;
INSERT INTO `Log` VALUES (10,'20080623114304','Added new user: gelpi',NULL,NULL,NULL,NULL,NULL),(11,'20080625163752','Added new user: adam',NULL,NULL,NULL,NULL,NULL),(12,'20080702161934','Added new user: aurelio',NULL,NULL,NULL,NULL,NULL),(13,'20080708170708','Added new user: modesto',NULL,NULL,NULL,NULL,NULL),(14,'20081125095422','Added new user: gelpi',NULL,NULL,NULL,NULL,NULL),(15,'20090529144125','Added new user: dcicinsain',NULL,NULL,NULL,NULL,NULL);
/*!40000 ALTER TABLE `Log` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `ValidInput`
--

DROP TABLE IF EXISTS `ValidInput`;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
CREATE TABLE `ValidInput` (
  `idOperacio` varchar(65) NOT NULL default '',
  `ObjectType` varchar(45) NOT NULL default '',
  PRIMARY KEY  (`idOperacio`,`ObjectType`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
SET character_set_client = @saved_cs_client;

--
-- Dumping data for table `ValidInput`
--

LOCK TABLES `ValidInput` WRITE;
/*!40000 ALTER TABLE `ValidInput` DISABLE KEYS */;
INSERT INTO `ValidInput` VALUES ('addDisulphideBonds','PDB-Text'),('addPDB','PDB-Text'),('AmberAdvancedEq','AMBER_MD_Structure'),('AmberGenTop','PDB-Text'),('AmberWorkflow','PDB-Text'),('AmberWorkflowFull','PDB-Text'),('AmberWorkflowSolv','PDB-Text'),('cleanPDB','PDB-Text'),('convertToBINPOS','MD_TrajectoryCRD'),('convertToBINPOS','MD_TrajectoryDCD'),('convertToBINPOS','MD_TrajectoryNetCDF'),('convertToCRD','MD_TrajectoryBINPOS'),('convertToCRD','MD_TrajectoryDCD'),('convertToCRD','MD_TrajectoryNetCDF'),('convertToDCD','MD_TrajectoryBINPOS'),('convertToDCD','MD_TrajectoryCRD'),('convertToDCD','MD_TrajectoryNetCDF'),('convertToNetCDF','MD_TrajectoryBINPOS'),('convertToNetCDF','MD_TrajectoryCRD'),('convertToNetCDF','MD_TrajectoryDCD'),('convertToPDBs','MD_Trajectory'),('fixSideChains','PDB-Text'),('flexAnalysis','MD_Trajectory'),('getAverageStructure','MD_Trajectory'),('getBfactor','MD_Trajectory'),('getDryTrajectory','MD_Trajectory'),('getMaskTrajectoryFromMD_Trajectory','MD_Trajectory'),('getRadiusGiration','MD_Trajectory'),('getSliceFromTrajectory','MD_Trajectory'),('getSnapshotFromTrajectory','MD_Trajectory'),('GromacsAdvancedEq','GROMACS_MD_Structure'),('GromacsGenTop','PDB-Text'),('GromacsWorkflow','PDB-Text'),('GromacsWorkflowFull','PDB-Text'),('GromacsWorkflowSolv','PDB-Text'),('mutateResidueFromPDBText','PDB-Text'),('NamdAdvancedEq','NAMD_MD_Structure'),('NamdGenTop','PDB-Text'),('NamdWorkflow','PDB-Text'),('NamdWorkflowFull','PDB-Text'),('NamdWorkflowSolv','PDB-Text'),('optimizeStructureFromAMBER_1','AMBER_MD_Structure'),('optimizeStructureFromAMBER_2','AMBER_MD_Structure'),('optimizeStructureFromGROMACS','GROMACS_MD_Structure'),('optimizeStructureFromGROMACS_1','GROMACS_MD_Structure'),('optimizeStructureFromGROMACS_2','GROMACS_MD_Structure'),('optimizeStructureFromGROMACS_3','GROMACS_MD_Structure'),('optimizeStructureFromNAMD_1','NAMD_MD_Structure'),('optimizeStructureFromNAMD_2','NAMD_MD_Structure'),('protonateHistidines','MD_Structure'),('protonateIonizableResidues','MD_Structure'),('RMSd','MD_Trajectory'),('RMSdPerResidue','MD_Trajectory'),('runBrownianMDFromPDBText','PDB-Text'),('runDiscreteMDFromPDBText','PDB-Text'),('runMDFromAMBER1','AMBER_MD_Structure'),('runMDFromAMBER2','AMBER_MD_Structure'),('runMDFromAMBER3','AMBER_MD_Structure'),('runMDFromAMBER4','AMBER_MD_Structure'),('runMDFromAMBER5','AMBER_MD_Structure'),('runMDFromAMBER6','AMBER_MD_Structure'),('runMDFromAMBER7','AMBER_MD_Structure'),('runMDFromGROMACS1','GROMACS_MD_Structure'),('runMDFromGROMACS1','MD_TrajectoryXTC'),('runMDFromGROMACS2','GROMACS_MD_Structure'),('runMDFromGROMACS2','MD_TrajectoryXTC'),('runMDFromGROMACS3','GROMACS_MD_Structure'),('runMDFromGROMACS3','MD_TrajectoryXTC'),('runMDFromGROMACS4','GROMACS_MD_Structure'),('runMDFromGROMACS4','MD_TrajectoryXTC'),('runMDFromGROMACS5','GROMACS_MD_Structure'),('runMDFromGROMACS5','MD_TrajectoryXTC'),('runMDFromGROMACS6','GROMACS_MD_Structure'),('runMDFromGROMACS6','MD_TrajectoryXTC'),('runMDFromGROMACS7','GROMACS_MD_Structure'),('runMDFromNAMD1','MD_TrajectoryDCD'),('runMDFromNAMD1','NAMD_MD_Structure'),('runMDFromNAMD2','MD_TrajectoryDCD'),('runMDFromNAMD2','NAMD_MD_Structure'),('runMDFromNAMD3','MD_TrajectoryDCD'),('runMDFromNAMD3','NAMD_MD_Structure'),('runMDFromNAMD4','MD_TrajectoryDCD'),('runMDFromNAMD4','NAMD_MD_Structure'),('runMDFromNAMD5','MD_TrajectoryDCD'),('runMDFromNAMD5','NAMD_MD_Structure'),('runMDFromNAMD6','MD_TrajectoryDCD'),('runMDFromNAMD6','NAMD_MD_Structure'),('runMDFromNAMD7','NAMD_MD_Structure'),('runNormalModeAnalysisFromPDBText','PDB-Text'),('searchPdbForCa','PDB-Text'),('solvateStructureFromAMBER_MD_Structure','AMBER_MD_Structure'),('solvateStructureFromGROMACS_MD_Structure','GROMACS_MD_Structure'),('solvateStructureFromNAMD_MD_Structure','NAMD_MD_Structure'),('titrateStructure','MD_Structure'),('unzipTrajectory','MD_Compressed_Trajectory'),('zipTrajectory','MD_TrajectoryBINPOS'),('zipTrajectory','MD_TrajectoryCRD'),('zipTrajectory','MD_TrajectoryDCD'),('zipTrajectory','MD_TrajectoryNetCDF'),('zipTrajectory','MD_TrajectoryXTC');
/*!40000 ALTER TABLE `ValidInput` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `WSParam`
--

DROP TABLE IF EXISTS `WSParam`;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
CREATE TABLE `WSParam` (
  `idWS` varchar(100) NOT NULL,
  `artName` varchar(45) NOT NULL,
  `type` enum('input','output','secondary') NOT NULL,
  `dataType` varchar(45) default NULL,
  PRIMARY KEY  USING BTREE (`idWS`,`artName`,`type`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
SET character_set_client = @saved_cs_client;

--
-- Dumping data for table `WSParam`
--

LOCK TABLES `WSParam` WRITE;
/*!40000 ALTER TABLE `WSParam` DISABLE KEYS */;
INSERT INTO `WSParam` VALUES ('addDisulphideBondsPDBText','structure','input','PDB-Text'),('addDisulphideBondsPDBText','structure','output','PDB-Text'),('addHydrogensFromPDBText','structure','input','PDB-Text'),('addHydrogensFromPDBText','structure','output','NAMD_MD_Structure'),('cleanStructureFromPDBText','hydrogens','secondary','Boolean'),('cleanStructureFromPDBText','ligands','secondary','Boolean'),('cleanStructureFromPDBText','structure','input','PDB-Text'),('cleanStructureFromPDBText','structure','output','PDB-Text'),('cleanStructureFromPDBText','waters','secondary','Boolean'),('fromMD_TrajectoryToMD_TrajectoryBINPOS','persistent','secondary','Boolean'),('fromMD_TrajectoryToMD_TrajectoryBINPOS','structure','input','MD_Trajectory'),('fromMD_TrajectoryToMD_TrajectoryBINPOS','structure','output','MD_TrajectoryBINPOS'),('getAverageStructureFromMD_Trajectory','structure','input','MD_Trajectory'),('getAverageStructureFromMD_Trajectory','structure','output','PDB-Text'),('getDryTrajectoryFromMD_Trajectory','ions','secondary','Boolean'),('getDryTrajectoryFromMD_Trajectory','persistent','secondary','Boolean'),('getDryTrajectoryFromMD_Trajectory','structure','input','MD_Trajectory'),('getDryTrajectoryFromMD_Trajectory','structure','output','MD_Trajectory'),('getDryTrajectoryFromMD_Trajectory','waters','secondary','Boolean'),('getMaskTrajectoryFromMD_Trajectory','mask_type','secondary','Integer'),('getMaskTrajectoryFromMD_Trajectory','structure','input','MD_Trajectory'),('getMaskTrajectoryFromMD_Trajectory','structure','output','MD_Trajectory'),('getMaskTrajectoryFromMD_Trajectory','traj_mask','secondary','String'),('getNAMD_ConfFromNAMD_MD_Structure','DCDfreq','secondary','Integer'),('getNAMD_ConfFromNAMD_MD_Structure','md_type','secondary','Integer'),('getNAMD_ConfFromNAMD_MD_Structure','minimize','secondary','Integer'),('getNAMD_ConfFromNAMD_MD_Structure','restraint','secondary','Integer'),('getNAMD_ConfFromNAMD_MD_Structure','structure','input','NAMD_MD_Structure'),('getNAMD_ConfFromNAMD_MD_Structure','structure','output','NAMD_Conf_Text'),('getNAMD_ConfFromNAMD_MD_Structure','temperature','secondary','Integer'),('getNAMD_ConfFromNAMD_MD_Structure','time','secondary','Float'),('getNAMD_ConfFromNAMD_MD_Structure','timestep','secondary','Float'),('getSliceFromMD_Trajectory','persistent','secondary','Boolean'),('getSliceFromMD_Trajectory','snapOffset','secondary','Integer'),('getSliceFromMD_Trajectory','snapshotStart','secondary','Integer'),('getSliceFromMD_Trajectory','snapshotStop','secondary','Integer'),('getSliceFromMD_Trajectory','structure','input','MD_Trajectory'),('getSliceFromMD_Trajectory','structure','output','MD_Trajectory'),('getSnapshotFromMD_Trajectory','snapshotNumber','secondary','Integer'),('getSnapshotFromMD_Trajectory','structure','input','MD_Trajectory'),('getSnapshotFromMD_Trajectory','structure','output','PDB-Text'),('getTrajectoryBfactorPerResidueFromMD_Trajectory','sequence','output','FeatureAASequence'),('getTrajectoryBfactorPerResidueFromMD_Trajectory','structure','input','MD_Trajectory'),('getTrajectoryRadiusOfGyrationFromMD_Trajectory','structure','input','MD_Trajectory'),('getTrajectoryRadiusOfGyrationFromMD_Trajectory','structure','output','ArrayFloat'),('getTrajectoryRmsPerResidueFromMD_Trajectory','sequence','output','FeatureAASequence'),('getTrajectoryRmsPerResidueFromMD_Trajectory','structure','input','MD_Trajectory'),('optimizeStructureFromNAMD_MD_Structure','config_file','input','NAMD_Conf_Text'),('optimizeStructureFromNAMD_MD_Structure','md_type','secondary','Integer'),('optimizeStructureFromNAMD_MD_Structure','restraint','secondary','Integer'),('optimizeStructureFromNAMD_MD_Structure','structure','input','NAMD_MD_Structure'),('optimizeStructureFromNAMD_MD_Structure','structure','output','NAMD_MD_Structure'),('optimizeStructureFromNAMD_MD_Structure','temparature','secondary','Float'),('optimizeStructureFromNAMD_MD_Structure','time','secondary','Float'),('optimizeStructureFromNAMD_MD_Structure','timestep','secondary','Float'),('plotFeatureAASequence','image','output','Typed_Image'),('plotFeatureAASequence','sequence','input','FeatureAASequence'),('runMDFromNAMD_MD_Structure','config_file','input','NAMD_Conf_Text'),('runMDFromNAMD_MD_Structure','DCDfreq','secondary','Integer'),('runMDFromNAMD_MD_Structure','md_type','secondary','Integer'),('runMDFromNAMD_MD_Structure','minimize','secondary','Integer'),('runMDFromNAMD_MD_Structure','persistent','secondary','Boolean'),('runMDFromNAMD_MD_Structure','structure','input','NAMD_MD_Structure'),('runMDFromNAMD_MD_Structure','structure','output','MD_Trajectory'),('runMDFromNAMD_MD_Structure','temperature','secondary','Integer'),('runMDFromNAMD_MD_Structure','time','secondary','Float'),('runMDFromNAMD_MD_Structure','timestep','secondary','Float');
/*!40000 ALTER TABLE `WSParam` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Temporary table structure for view `WSParamMDWeb`
--

DROP TABLE IF EXISTS `WSParamMDWeb`;
/*!50001 DROP VIEW IF EXISTS `WSParamMDWeb`*/;
/*!50001 CREATE TABLE `WSParamMDWeb` (
  `idOperacio` varchar(45),
  `articleName` varchar(45),
  `type` enum('input','output','secondary'),
  `objectName` varchar(45)
) */;

--
-- Table structure for table `Workflows`
--

DROP TABLE IF EXISTS `Workflows`;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
CREATE TABLE `Workflows` (
  `idOperacio` varchar(45) NOT NULL,
  `keyOp` varchar(100) default NULL,
  `nom` varchar(65) default NULL,
  `WS` varchar(500) default NULL,
  `ObjectIn` varchar(45) default NULL,
  `ObjectOut` varchar(45) default NULL,
  `script` varchar(60) default NULL,
  `tipus` int(10) unsigned default NULL,
  `subtype` int(10) unsigned NOT NULL default '0',
  `descrip` varchar(5000) default NULL,
  `opType` enum('WS','WF') NOT NULL default 'WF',
  PRIMARY KEY  USING BTREE (`idOperacio`,`subtype`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1 ROW_FORMAT=DYNAMIC;
SET character_set_client = @saved_cs_client;

--
-- Dumping data for table `Workflows`
--

LOCK TABLES `Workflows` WRITE;
/*!40000 ALTER TABLE `Workflows` DISABLE KEYS */;
INSERT INTO `Workflows` VALUES ('AmberAdvancedEq','Amber Equilibrated System','Amber Advanced Equilibration','runMDFromAMBER_MD_Structure_async','AMBER_MD_Structure','MD_TrajectoryDCD','NAMD_AdvancedEq.pl',2,0,'AMBER Advanced Equilibration (System Equilibration):\n\nEquilibration steps done in NPT ensemble with Periodic Boundary Conditions.\nParticle Mesh Ewald (PME) for full-system periodic electrostatics.\nConstant temperature dynamics via Langevin Dynamics.\nConstant pressure dynamics via Nose-Hoover Langevin piston.\nSHAKE is used to maintain all bonds involving hydrogen atoms at their equilibrium values.-SPLIT-\nFirst Step: Heat solvent to 300K, solute atoms restrained (force constant of 10 Kcal/mol). Length 5ps.\nSecond Step: Reduce force constant to 5 Kcal/mol. Length 1ps.\nThird Step: Reduce force constant to 2.5 Kcal/mol, and limit restraints to backbone atoms. Length 1ps.\nForth Step: Reduce force constant to 1 Kcal/mol. Length 1ps.\nFifth Step: Simulation without restraints. Length 1ps.','WF'),('AmberGenTop','Structure Topology for AMBER','Generate Topology for Amber','runLeapWithLigandsFromPDBText,cleanStructureFromPDBText,addDisulphideBondsFromPDBText,getNAMD_MD_StructureFromPDBText','PDB-Text','MD_Structure','NAMDGenTop.pl',1,0,'Generate Topology for Amber.\n\nForceField: Parm99SB* for Proteins, Amber Parm99bsc0 for Nucleic Acids (DNA/RNA).\nProgram: Leap from AmberTools Package.-SPLIT-\nRemove crystallographic water molecules.\nAdd hydrogen atoms and missing side chain atoms as appropiate.','WF'),('AmberWorkflow','Prepared Amber Structure (Setup done)','Amber MD Setup','runLeapWithLigandsFromPDBText,cleanStructureFromPDBText,optimizeStructureFromAMBER_MD_Structure_async,protonateHistidinesFromMD_Structure_async, titrateStructureFromMD_Structure_async','PDB-Text','MD_Structure','NAMDWorkflow_Pdb.pl',1,0,'Structure Setup for AMBER forcefield.\n\nForceField: Parm99SB* for Proteins, Amber Parm99bsc0 for Nucleic Acids (DNA/RNA).\nPrograms: namd2 from NAMD Package, leap from AmberTools package, protpKa and CMIP.-SPLIT-\nGenerate Topology for AMBER. (MDWeb Workflow).\nProtonate Histidine residues according to protpKa program algorithm.\nAdd 20 water molecules at the energetically best favourable positions of the structure surface using CMIP program.\nEnergy minimize hydrogen atoms for 500 steps of conjugate gradients, while the rest of the structure is kept fixed.\nEnergy minimize the structure for 500 steps of conjugate gradients, restraining heavy atoms with a force constant of 50Kcal/mol to their initial positions.','WF'),('AmberWorkflowFULL','Prepared Amber Structure (Setup + Solvation + Equilibration done)','Amber FULL MD Setup','runLeapWithLigandsFromPDBText,cleanStructureFromPDBText,optimizeStructureFromAMBER_MD_Structure_async,protonateHistidinesFromMD_Structure_async, titrateStructureFromMD_Structure_async,solvateStructureWithLigandsFromAMBER_MD_Structure_async ','PDB-Text','MD_TrajectoryDCD','NAMDWorkflow_Pdb.pl',1,0,'Complete Setup for AMBER forcefield (Structure Setup + Solvation + Equilibration):\n\nForceField: Amber Parm99SB* for Proteins, Amber Parm99bsc0 for Nucleic Acids (DNA/RNA).\nPrograms: namd2 from Namd Package, leap from AmberTools package, protpKa and CMIP.\nEquilibration steps done in NPT ensemble with Periodic Boundary Conditions.\nParticle Mesh Ewald (PME) for full-system periodic electrostatics.\nConstant temperature dynamics via Langevin Dynamics.\nConstant pressure dynamics via Nose-Hoover Langevin piston.\nSHAKE is used to maintain all bonds involving hydrogen atoms at their equilibrium values.-SPLIT-\nAMBER MD Setup with Solvation (MDWeb Workflow).\nAMBER Advanced Equilibration (MDWeb Workflow).','WF'),('AmberWorkflowSolv','Prepared Amber Structure (Setup + Solvation done)','Amber MD Setup with Solvation','runLeapWithLigandsFromPDBText,cleanStructureFromPDBText,optimizeStructureFromAMBER_MD_Structure_async,protonateHistidinesFromMD_Structure_async, titrateStructureFromMD_Structure_async,solvateStructureWithLigandsFromAMBER_MD_Structure_async ','PDB-Text','MD_Structure','NAMDWorkflow_Pdb.pl',1,0,'Structure Setup + Solvation for AMBER forcefield.\n\nForceField: Parm99SB* for Proteins, Amber Parm99bsc0 for Nucleic Acids (DNA/RNA).\nPrograms: namd2 from Namd Package, leap from AmberTools package, protpKa and CMIP.-SPLIT-\nAMBER MD Setup (MDWeb Workflow).\nSet a truncated Octahedron box of TIP3P water molecules with a spacing distance of 15&Aring; around the system.\nAdd Cl- and/or Na+ ions necessary to neutralize the system. Then, add the appropiate amount of ions up to a concentration of 50 mM.\nFurther energy minimize the structure for 500 steps of conjugate gradients, restraining heavy atoms with a force constant of 50Kcal/mol to their initial positions.','WF'),('GromacsAdvancedEq','Gromacs Equilibrated System','Gromacs Advanced Equilibration','runMDFromGROMACS_MD_Structure_async','GROMACS_MD_Structure','MD_TrajectoryXTC','GROMACS_AdvancedEq.pl',2,0,'GROMACS Advanced Equilibration (System Equilibration):\n\nEquilibration steps done in NPT ensemble with Periodic Boundary Conditions.\nParticle Mesh Ewald (PME) for full-system periodic electrostatics.\nConstant temperature dynamics via Velocity-rescale algorithm.\nConstant pressure dynamics via Parrinello-Rahman algorithm.\nLINCS Linear Constraint Solver was used to maintain all bonds at their equilibrium values.-SPLIT-\nFirst Step: Heat solvent to 300K, solute atoms restrained (Force constant of 400 KJ/mol*nm2. Length 5ps.\nSecond Step: Reduce force constant to 300 KJ/mol*nm2. Length 1ps.\nThird Step: Reduce force constant to 200 KJ/mol*nm2, and limit restraints to backbone atoms. Length 1ps.\nForth Step: Reduce force constant to 100 KJ/mol*nm2. Length 1ps.\nFifth Step: Simulation without restraints. Length 1ps.','WF'),('GromacsGenTop','Structure Topology for GROMACS','Generate Topology for Gromacs','runLeapWithLigandsFromPDBText,cleanStructureFromPDBText,fixSideChainsFromPDBText,getGROMACS_MD_StructureFromPDBText,addLigandToGROMACS_MD_Structure','PDB-Text','GROMACS_MD_Structure','GROMACSGenTop.pl',1,0,'Generate Topology for GROMACS. Generate top and itp Topology Files for Gromacs.\n\nProgram: pdb2gmx from Gromacs Package.-SPLIT-\nRemove crystallographic water molecules.\nAdd side chain missing atoms using Leap from AmberTools package.\nAdd Hydrogen atoms using pdb2gmx.','WF'),('GromacsWorkflow','Prepared Gromacs Structure (Setup done)','Gromacs MD Setup','runLeapWithLigandsFromPDBText,cleanStructureFromPDBText,fixSideChainsFromPDBText,getGROMACS_MD_StructureFromPDBText,addLigandToGROMACS_MD_Structure, optimizeStructureFromGROMACS_MD_Structure_async,protonateHistidinesFromMD_Structure_async,titrateStructureFromMD_Structure_async','PDB-Text','GROMACS_MD_Structure','GROMACSWorkflow_Pdb.pl',1,0,'GROMACS MD Setup. Structure Setup for Gromacs.\n\nPrograms: pdb2gmx, grompp, editconf, trjconv, make_ndx and mdrun from Gromacs Package, leap from AmberTools package, protpKa and CMIP.-SPLIT-\nGenerate Topology for GROMACS (MDWeb Workflow).\nProtonate Histidine residues according to protpKa program algorithm.\nAdd 20 water molecules at the energetically best favourable positions of the structure surface using CMIP program.\nEnergy minimize hydrogen atoms for 500 steps of hydrogen conjugate gradients, while the rest of the structure is kept fixed.\nEnergy minimize the structure for 500 steps of structure conjugate gradients, restraining heavy atoms with a force constant of 500KJ/mol*nm2 to their initial positions.','WF'),('GromacsWorkflowFULL','Prepared Gromacs Structure (Setup + Solvation + Equilibration done)','Gromacs FULL MD Setup','runLeapWithLigandsFromPDBText,cleanStructureFromPDBText,fixSideChainsFromPDBText,getGROMACS_MD_StructureFromPDBText,addLigandToGROMACS_MD_Structure, optimizeStructureFromGROMACS_MD_Structure_async,protonateHistidinesFromPDBText_async,titrateStructureFromPDBText_async,solvateStructureFromGROMACS_MD_Structure, runMDFromGROMACS_MD_Structure_async','PDB-Text','MD_TrajectoryXTC','GROMACSWorkflow_Pdb.pl',1,0,'Complete Setup for Gromacs Package (Structure Setup + Solvation + Equilibration):\n\nPrograms: pdb2gmx, grompp, editconf, trjconv, make_ndx, genbox, genion and mdrun from Gromacs Package, leap from AmberTools package, protpKa and CMIP.\nEquilibration steps done in NPT ensemble with Periodic Boundary Conditions.\nParticle Mesh Ewald (PME) for full-system periodic electrostatics.\nConstant temperature dynamics via Velocity-rescale algorithm.\nConstant pressure dynamics via Parrinello-Rahman algorithm.\nLINCS Linear Constraint Solver was used to maintain all bonds at their equilibrium values.-SPLIT-\nGROMACS MD Setup with Solvation (MDWeb Workflow).\nGROMACS Advanced Equilibration (MDWeb Workflow).','WF'),('GromacsWorkflowSolv','Prepared Gromacs Structure (Setup + Solvation done)','Gromacs MD Setup with Solvation','runLeapWithLigandsFromPDBText,cleanStructureFromPDBText,fixSideChainsFromPDBText,getGROMACS_MD_StructureFromPDBText,addLigandToGROMACS_MD_Structure, optimizeStructureFromGROMACS_MD_Structure_async,protonateHistidinesFromPDBText_async,titrateStructureFromPDBText_async,solvateStructureFromGROMACS_MD_Structure','PDB-Text','GROMACS_MD_Structure','GROMACSWorkflow_Pdb.pl',1,0,'GROMACS MD Setup with Solvation. Structure Setup + Solvation for Gromacs.\n\nPrograms: pdb2gmx, grompp, editconf, trjconv, make_ndx, genbox, genion and mdrun from Gromacs Package, leap from AmberTools package, protpKa and CMIP.-SPLIT-\nGROMACS MD Setup (MDWeb Workflow).\nSet a truncated Octahedron box of TIP3P water molecules (Amber FF) or SPC water molecules (other FFs) with a spacing distance of 15 angstroms around the molecule.\nAdd Cl- and/or Na+ ions necessary to neutralize the system. Then, add the appropiate amount of ions up to a concentration of 50 mM.\nFurther energy minimize the structure for 500 steps of conjugate gradients, restraining heavy atoms with a force constant of 500KJ/mol*nm2 to their initial positions.','WF'),('NamdAdvancedEq','Namd Equilibrated System','Namd Advanced Equilibration','runMDFromNAMD_MD_Structure_async ','NAMD_MD_Structure','MD_TrajectoryDCD','NAMD_AdvancedEq.pl',2,0,'NAMD Advanced Equilibration (System Equilibration):\n\nEquilibration steps done in NPT ensemble with Periodic Boundary Conditions.\nParticle Mesh Ewald (PME) for full-system periodic electrostatics.\nConstant temperature dynamics via Langevin Dynamics.\nConstant pressure dynamics via Nose-Hoover Langevin piston.\nSHAKE is used to maintain all bonds involving hydrogen atoms at their equilibrium values.-SPLIT-\nFirst Step: Heat solvent to 300K, solute atoms restrained (force constant of 10 Kcal/mol). Length 5ps.\nSecond Step: Reduce force constant to 5 Kcal/mol. Length 1ps.\nThird Step: Reduce force constant to 2.5 Kcal/mol, and limit restraints to backbone atoms. Length 1ps.\nForth Step: Reduce force constant to 1 Kcal/mol. Length 1ps.\nFifth Step: Simulation without restraints. Length 1ps.','WF'),('NamdGenTop','Structure Topology for NAMD','Generate Topology for Namd','runLeapWithLigandsFromPDBText,cleanStructureFromPDBText,addDisulphideBondsFromPDBText,getNAMD_MD_StructureFromPDBText','PDB-Text','MD_Structure','NAMDGenTop.pl',1,0,'Generate Topology for Namd. Generate PSF Topology for Charmm Forcefield\n\nForceField: Charmm-27.\nProgram: psfgen from NAMD Package.\nWarning: Ligands not allowed.-SPLIT-\nRemove crystallographic water molecules.\nAdd hydrogen atoms and missing side chain atoms as appropiate.','WF'),('NamdWorkflow','Prepared Namd Structure (Setup done)','Namd MD Setup','cleanStructureFromPDBText,addDisulphideBondsFromPDBText,optimizeStructureFromNAMD_MD_Structure_async,protonateHistidinesFromMD_Structure_async, titrateStructureFromMD_Structure_async','PDB-Text','MD_Structure','NAMDWorkflow_Pdb.pl',1,0,'NAMD MD Setup. Structure Setup for Charmm Forcefield.\n\nForceField: Charmm-27.\nPrograms: psfgen, vmd (solvate and autoionize plugins) and namd2 from Namd Package, protpKa and CMIP.-SPLIT-\nGenerate Topology for NAMD (MDWeb Workflow).\nProtonate Histidine residues according to protpKa program algorithm.\nAdd 20 water molecules at the energetically best favourable positions of the structure surface using CMIP program.\nEnergy minimize hydrogen atoms for 500 steps of conjugate gradients, while the rest of the structure is kept fixed.\nEnergy minimize the structure for 500 steps of conjugate gradients, restraining heavy atoms with a force constant of 50Kcal/mol to their initial positions.','WF'),('NamdWorkflowFULL','Prepared Namd Structure (Setup + Solvation + Equilibration done)','Namd FULL MD Setup','cleanStructureFromPDBText,addDisulphideBondsFromPDBText,getNAMD_MD_StructureFromPDBText,optimizeStructureFromNAMD_MD_Structure_async,protonateHistidinesFromMD_Structure_async, titrateStructureFromMD_Structure_async,solvateStructureFromNAMD_MD_Structure_async ','PDB-Text','MD_TrajectoryDCD','NAMDWorkflow_Pdb.pl',1,0,'Complete Setup for Charmm Forcefield (Structure Setup + Solvation + Equilibration):\n\nForceField: Charmm-27.\nPrograms: psfgen, vmd (solvate and autoionize plugins) and namd2 from Namd Package, protpKa and CMIP.\nEquilibration steps done in NPT ensemble with Periodic Boundary Conditions.\nParticle Mesh Ewald (PME) for full-system periodic electrostatics.\nConstant temperature dynamics via Langevin Dynamics.\nConstant pressure dynamics via Nose-Hoover Langevin piston.\nSHAKE was used to maintain all bonds involving hydrogen atoms at their equilibrium values.-SPLIT-\nNAMD MD Setup with Solvation (MDWeb Workflow).\nNAMD Advanced Equilibration (MDWeb Workflow).','WF'),('NamdWorkflowSolv','Prepared Namd Structure (Setup + Solvation done)','Namd MD Setup with Solvation','cleanStructureFromPDBText,addDisulphideBondsFromPDBText,getNAMD_MD_StructureFromPDBText,optimizeStructureFromNAMD_MD_Structure_async,protonateHistidinesFromMD_Structure_async, titrateStructureFromMD_Structure_async,solvateStructureFromNAMD_MD_Structure_async ','PDB-Text','MD_Structure','NAMDWorkflow_Pdb.pl',1,0,'NAMD MD Setup with Solvation. Structure Setup + Solvation for Charmm Forcefield.\n\nForceField: Charmm-27.\nPrograms: psfgen, vmd (solvate and autoionize plugins) and namd2 from NAMD Package, protpKa and CMIP.-SPLIT-\nNAMD MD Setup (MDWeb Workflow).\nSet a cubic box of TIP3P water molecules with a spacing distance of 15 angstroms.\nAdd Cl- and/or Na+ ions necessary to neutralize the system. Then, add the appropiate amount of ions up to a concentration of 50 mM.\nFurther energy minimize the structure for 500 steps of conjugate gradients, restraining heavy atoms with a force constant of 50Kcal/mol to their initial positions.','WF');
/*!40000 ALTER TABLE `Workflows` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `incompatibleOps`
--

DROP TABLE IF EXISTS `incompatibleOps`;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
CREATE TABLE `incompatibleOps` (
  `actualOp` varchar(45) NOT NULL default '',
  `previousOp` varchar(45) NOT NULL default '',
  PRIMARY KEY  (`actualOp`,`previousOp`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1;
SET character_set_client = @saved_cs_client;

--
-- Dumping data for table `incompatibleOps`
--

LOCK TABLES `incompatibleOps` WRITE;
/*!40000 ALTER TABLE `incompatibleOps` DISABLE KEYS */;
INSERT INTO `incompatibleOps` VALUES ('AmberAdvancedEq','protonateHistidines'),('AmberAdvancedEq','protonateIonizableResidues'),('convertToBINPOS','GromacsWorkflowFULL'),('convertToBINPOS','runMDFromGROMACS1'),('convertToBINPOS','runMDFromGROMACS2'),('convertToBINPOS','runMDFromGROMACS3'),('convertToBINPOS','runMDFromGROMACS4'),('convertToBINPOS','runMDFromGROMACS5'),('convertToBINPOS','runMDFromGROMACS6'),('convertToBINPOS','runMDFromGROMACS7'),('convertToCRD','GromacsWorkflowFULL'),('convertToCRD','runMDFromGROMACS1'),('convertToCRD','runMDFromGROMACS2'),('convertToCRD','runMDFromGROMACS3'),('convertToCRD','runMDFromGROMACS4'),('convertToCRD','runMDFromGROMACS5'),('convertToCRD','runMDFromGROMACS6'),('convertToCRD','runMDFromGROMACS7'),('convertToDCD','AmberWorkflowFULL'),('convertToDCD','GromacsWorkflowFULL'),('convertToDCD','NamdWorkflowFULL'),('convertToDCD','runMDFromAMBER1'),('convertToDCD','runMDFromAMBER2'),('convertToDCD','runMDFromAMBER3'),('convertToDCD','runMDFromAMBER4'),('convertToDCD','runMDFromAMBER5'),('convertToDCD','runMDFromAMBER6'),('convertToDCD','runMDFromAMBER7'),('convertToDCD','runMDFromGROMACS1'),('convertToDCD','runMDFromGROMACS2'),('convertToDCD','runMDFromGROMACS3'),('convertToDCD','runMDFromGROMACS4'),('convertToDCD','runMDFromGROMACS5'),('convertToDCD','runMDFromGROMACS6'),('convertToDCD','runMDFromGROMACS7'),('convertToDCD','runMDFromNAMD1'),('convertToDCD','runMDFromNAMD2'),('convertToDCD','runMDFromNAMD3'),('convertToDCD','runMDFromNAMD4'),('convertToDCD','runMDFromNAMD5'),('convertToDCD','runMDFromNAMD6'),('convertToDCD','runMDFromNAMD7'),('convertToNetCDF','GromacsWorkflowFULL'),('convertToNetCDF','runMDFromGROMACS1'),('convertToNetCDF','runMDFromGROMACS2'),('convertToNetCDF','runMDFromGROMACS3'),('convertToNetCDF','runMDFromGROMACS4'),('convertToNetCDF','runMDFromGROMACS5'),('convertToNetCDF','runMDFromGROMACS6'),('convertToNetCDF','runMDFromGROMACS7'),('GromacsAdvancedEq','protonateHistidines'),('GromacsAdvancedEq','protonateIonizableResidues'),('NamdAdvancedEq','protonateHistidines'),('NamdAdvancedEq','protonateIonizableResidues'),('optimizeStructureFromAMBER_1','solvateStructureFromAMBER_MD_Structure'),('optimizeStructureFromGROMACS_1','solvateStructureFromGROMACS_MD_Structure'),('optimizeStructureFromGROMACS_3','GromacsGenTop'),('optimizeStructureFromGROMACS_3','GromacsWorkflow'),('optimizeStructureFromNAMD_1','solvateStructureFromNAMD_MD_Structure'),('protonateHistidines','solvateStructureFromAMBER_MD_Structure'),('protonateHistidines','solvateStructureFromGROMACS_MD_Structure'),('protonateHistidines','solvateStructureFromNAMD_MD_Structure'),('protonateIonizableResidues','solvateStructureFromAMBER_MD_Structure'),('protonateIonizableResidues','solvateStructureFromGROMACS_MD_Structure'),('protonateIonizableResidues','solvateStructureFromNAMD_MD_Structure'),('runMDFromAMBER1','AmberGenTop'),('runMDFromAMBER1','AmberWorkflow'),('runMDFromAMBER1','AmberWorkflowFULL'),('runMDFromAMBER1','protonateHistidines'),('runMDFromAMBER1','protonateIonizableResidues'),('runMDFromAMBER2','AmberGenTop'),('runMDFromAMBER2','AmberWorkflow'),('runMDFromAMBER2','protonateHistidines'),('runMDFromAMBER2','protonateIonizableResidues'),('runMDFromAMBER3','AmberGenTop'),('runMDFromAMBER3','AmberWorkflow'),('runMDFromAMBER3','AmberWorkflowFULL'),('runMDFromAMBER3','protonateHistidines'),('runMDFromAMBER3','protonateIonizableResidues'),('runMDFromAMBER4','AmberGenTop'),('runMDFromAMBER4','AmberWorkflow'),('runMDFromAMBER4','protonateHistidines'),('runMDFromAMBER4','protonateIonizableResidues'),('runMDFromAMBER5','AmberGenTop'),('runMDFromAMBER5','AmberWorkflow'),('runMDFromAMBER5','AmberWorkflowFULL'),('runMDFromAMBER5','protonateHistidines'),('runMDFromAMBER5','protonateIonizableResidues'),('runMDFromAMBER6','AmberGenTop'),('runMDFromAMBER6','AmberWorkflow'),('runMDFromAMBER6','protonateHistidines'),('runMDFromAMBER6','protonateIonizableResidues'),('runMDFromAMBER7','AmberGenTop'),('runMDFromAMBER7','AmberWorkflow'),('runMDFromAMBER7','protonateHistidines'),('runMDFromAMBER7','protonateIonizableResidues'),('runMDFromGROMACS1','GromacsGenTop'),('runMDFromGROMACS1','GromacsWorkflow'),('runMDFromGROMACS1','GromacsWorkflowFULL'),('runMDFromGROMACS1','protonateHistidines'),('runMDFromGROMACS1','protonateIonizableResidues'),('runMDFromGROMACS2','GromacsGenTop'),('runMDFromGROMACS2','GromacsWorkflow'),('runMDFromGROMACS2','protonateHistidines'),('runMDFromGROMACS2','protonateIonizableResidues'),('runMDFromGROMACS3','GromacsGenTop'),('runMDFromGROMACS3','GromacsWorkflow'),('runMDFromGROMACS3','GromacsWorkflowFULL'),('runMDFromGROMACS3','protonateHistidines'),('runMDFromGROMACS3','protonateIonizableResidues'),('runMDFromGROMACS4','GromacsGenTop'),('runMDFromGROMACS4','GromacsWorkflow'),('runMDFromGROMACS4','protonateHistidines'),('runMDFromGROMACS4','protonateIonizableResidues'),('runMDFromGROMACS5','GromacsGenTop'),('runMDFromGROMACS5','GromacsWorkflow'),('runMDFromGROMACS5','GromacsWorkflowFULL'),('runMDFromGROMACS5','protonateHistidines'),('runMDFromGROMACS5','protonateIonizableResidues'),('runMDFromGROMACS6','GromacsGenTop'),('runMDFromGROMACS6','GromacsWorkflow'),('runMDFromGROMACS6','protonateHistidines'),('runMDFromGROMACS6','protonateIonizableResidues'),('runMDFromGROMACS7','GromacsGenTop'),('runMDFromGROMACS7','GromacsWorkflow'),('runMDFromGROMACS7','protonateHistidines'),('runMDFromGROMACS7','protonateIonizableResidues'),('runMDFromNAMD1','AmberWorkflowFULL'),('runMDFromNAMD1','NamdGenTop'),('runMDFromNAMD1','NamdWorkflow'),('runMDFromNAMD1','NamdWorkflowFULL'),('runMDFromNAMD1','protonateHistidines'),('runMDFromNAMD1','protonateIonizableResidues'),('runMDFromNAMD2','NamdGenTop'),('runMDFromNAMD2','NamdWorkflow'),('runMDFromNAMD2','protonateHistidines'),('runMDFromNAMD2','protonateIonizableResidues'),('runMDFromNAMD3','AmberWorkflowFULL'),('runMDFromNAMD3','NamdGenTop'),('runMDFromNAMD3','NamdWorkflow'),('runMDFromNAMD3','NamdWorkflowFULL'),('runMDFromNAMD3','protonateHistidines'),('runMDFromNAMD3','protonateIonizableResidues'),('runMDFromNAMD4','NamdGenTop'),('runMDFromNAMD4','NamdWorkflow'),('runMDFromNAMD4','protonateHistidines'),('runMDFromNAMD4','protonateIonizableResidues'),('runMDFromNAMD5','AmberWorkflowFULL'),('runMDFromNAMD5','NamdGenTop'),('runMDFromNAMD5','NamdWorkflow'),('runMDFromNAMD5','NamdWorkflowFULL'),('runMDFromNAMD5','protonateHistidines'),('runMDFromNAMD5','protonateIonizableResidues'),('runMDFromNAMD6','NamdGenTop'),('runMDFromNAMD6','NamdWorkflow'),('runMDFromNAMD6','protonateHistidines'),('runMDFromNAMD6','protonateIonizableResidues'),('runMDFromNAMD7','NamdGenTop'),('runMDFromNAMD7','NamdWorkflow'),('runMDFromNAMD7','protonateHistidines'),('runMDFromNAMD7','protonateIonizableResidues'),('titrateStructure','solvateStructureFromAMBER_MD_Structure'),('titrateStructure','solvateStructureFromGROMACS_MD_Structure'),('titrateStructure','solvateStructureFromNAMD_MD_Structure');
/*!40000 ALTER TABLE `incompatibleOps` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `objectDetails`
--

DROP TABLE IF EXISTS `objectDetails`;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
CREATE TABLE `objectDetails` (
  `objectName` varchar(50) NOT NULL,
  `articleName` varchar(45) NOT NULL,
  `type` varchar(45) default NULL,
  `fileExt` varchar(45) default NULL,
  `MIME` varchar(45) default NULL,
  `comment` varchar(250) default NULL,
  PRIMARY KEY  USING BTREE (`objectName`,`articleName`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
SET character_set_client = @saved_cs_client;

--
-- Dumping data for table `objectDetails`
--

LOCK TABLES `objectDetails` WRITE;
/*!40000 ALTER TABLE `objectDetails` DISABLE KEYS */;
INSERT INTO `objectDetails` VALUES ('AMBER_Frcmod','content','String','frcmod',NULL,'Ligand Frcmod in AMBER format.'),('AMBER_Lib','content','String','lib',NULL,'Ligand Library in AMBER format.'),('AMBER_MD_Structure','content','String','pdb',NULL,'Service output Pdb Structure.'),('AMBER_MD_Structure','log ','String','log',NULL,'Service log file.'),('AMBER_MD_Structure','top.content','String','top',NULL,'Amber Topology (PRMtop).'),('GROMACS_Conf_Text','content','String ','mdp',NULL,'Input Configuration File to run Gromacs Simulations.'),('GROMACS_EDR_Restart','edr','Base64','edr',NULL,'GROMACS Restart Energy File. Binary Content (Base64).'),('GROMACS_Gro_Text','content','String','gro',NULL,'Gromacs Structure File (like a pdb, but in gromacs format).'),('GROMACS_ITP_Text','content','String','itp',NULL,'GROMACS ITP files describing the molecular structure.'),('GROMACS_MD_Structure','content','String','pdb',NULL,'Service output Pdb Structure.'),('GROMACS_MD_Structure','gro.content','String','gro',NULL,'Gro Structure.'),('GROMACS_MD_Structure','log ','String','log',NULL,'Service log file.'),('GROMACS_MD_Structure','top.content','String','top',NULL,'Gromacs Topology.'),('GROMACS_MD_Structure','top.itp.content','String','itp',NULL,'GROMACS ITP files describing the molecular structure. Relation HAS (it could be more than one!)'),('GROMACS_Restart','rst_edr.edr','Base64','edr',NULL,'GROMACS Restart Energy File. Binary Content (Base64).'),('GROMACS_Restart','rst_trr.trr','Base64','trr',NULL,'GROMACS Restart File (TRR) with periodic box information, velocities and positions. Binary Content (Base64).'),('GROMACS_TOP_Text','content','String','top',NULL,'Top Topology File (Gromacs).'),('GROMACS_TOP_Text','itp.content','String','itp',NULL,'GROMACS ITP files describing the molecular structure. Relation HAS (it could be more than one!)'),('GROMACS_TRR_Restart','trr','Base64','trr',NULL,'GROMACS Restart File (TRR) with periodic box information, velocities and positions. Binary Content (Base64).'),('MD_Compressed_Trajectory','coordinates','Base64','pcz',NULL,'PCZ compressed trajectory. Binary Content (Base64).'),('MD_Compressed_Trajectory','structure.content','String','pdb','NULL','Pdb structure of the first snapshot of the simulation'),('MD_Compressed_Trajectory','structure.log','String','log','NULL','Log file'),('MD_Compressed_Trajectory','structure.top.content','String','psf','NULL','Topology can be .top or .psf'),('MD_Structure','content','String','pdb',NULL,'Pdb Structure.'),('MD_Structure','log','String','log',NULL,'Service log file.'),('MD_Trajectory','struct.content','String','pdb',NULL,'Pdb structure of the last snapshot of the simulation.'),('MD_Trajectory','struct.log','String','log',NULL,'MD log file.'),('MD_TrajectoryBINPOS','coordinates','Base64','binpos',NULL,'MD Trajectory file. Binary Content (Base64)'),('MD_TrajectoryBINPOS','restart.pos.content','String','coor',NULL,'Restart Positions.'),('MD_TrajectoryBINPOS','restart.vel.content','String','vel',NULL,'Restart Velocities.'),('MD_TrajectoryBINPOS','restart.xsc.content','String','xsc',NULL,'Restart eXtended System Configuration.'),('MD_TrajectoryBINPOS','struct.content','String','pdb',NULL,'Pdb structure of the last snapshot of the simulation.'),('MD_TrajectoryBINPOS','struct.log','String','log',NULL,'MD log file.'),('MD_TrajectoryBINPOS','struct.top.content','String','psf ',NULL,'Topology could be .top or .psf, but md services only generates Psf Topologies (NAMD).'),('MD_TrajectoryCRD','coordinates','String','crd',NULL,'MD Trajectory file.'),('MD_TrajectoryCRD','restart.pos.content','String','coor',NULL,'Restart Positions.'),('MD_TrajectoryCRD','restart.vel.content','String','vel',NULL,'Restart Velocities.'),('MD_TrajectoryCRD','restart.xsc.content','String','xsc',NULL,'Restart eXtended System Configuration.'),('MD_TrajectoryCRD','struct.content','String','pdb',NULL,'Pdb structure of the last snapshot of the simulation.'),('MD_TrajectoryCRD','struct.log','String','log',NULL,'MD log file.'),('MD_TrajectoryCRD','struct.top.content','String','psf ',NULL,'Topology could be .top or .psf, but md services only generates Psf Topologies (NAMD).'),('MD_TrajectoryDCD','coordinates','Base64','dcd',NULL,'MD Trajectory file. Binary Content (Base64)'),('MD_TrajectoryDCD','restart.pos.content','String','coor',NULL,'Restart Positions.'),('MD_TrajectoryDCD','restart.vel.content','String','vel',NULL,'Restart Velocities.'),('MD_TrajectoryDCD','restart.xsc.content','String','xsc',NULL,'Restart eXtended System Configuration.'),('MD_TrajectoryDCD','struct.content','String','pdb',NULL,'Pdb structure of the last snapshot of the simulation.'),('MD_TrajectoryDCD','struct.crd','String','crd','NULL','MD coordinates in crd format.'),('MD_TrajectoryDCD','struct.log','String','log',NULL,'MD log file.'),('MD_TrajectoryDCD','struct.top.content','String','psf ',NULL,'Topology could be .top or .psf, but md services only generates Psf Topologies (NAMD).'),('MD_TrajectoryNetCDF','coordinates','Base64','netcdf',NULL,'MD Trajectory file. Binary Content (Base64)'),('MD_TrajectoryNetCDF','restart.pos.content','String','coor',NULL,'Restart Positions.'),('MD_TrajectoryNetCDF','restart.vel.content','String','vel',NULL,'Restart Velocities.'),('MD_TrajectoryNetCDF','restart.xsc.content','String','xsc',NULL,'Restart eXtended System Configuration.'),('MD_TrajectoryNetCDF','struct.content','String','pdb',NULL,'Pdb structure of the last snapshot of the simulation.'),('MD_TrajectoryNetCDF','struct.log','String','log',NULL,'MD log file.'),('MD_TrajectoryNetCDF','struct.top.content','String','psf ',NULL,'Topology could be .top or .psf, but md services only generates Psf Topologies (NAMD).'),('MD_TrajectoryXTC','coordinates','Base64','xtc',NULL,'MD Trajectory file. Binary Content (Base64)'),('MD_TrajectoryXTC','restart.rst_edr.edr','Base64','edr',NULL,'GROMACS Restart Energy File. Binary Content (Base64).'),('MD_TrajectoryXTC','restart.rst_trr.trr','String','trr',NULL,'GROMACS Restart File (TRR) with periodic box information, velocities and positions. Binary Content (Base64).'),('MD_TrajectoryXTC','struct.content','String','pdb',NULL,'Pdb structure of the last snapshot of the simulation.'),('MD_TrajectoryXTC','struct.gro.content','String','gro',NULL,'Gro structure of the last snapshot of the simulation.'),('MD_TrajectoryXTC','struct.log','String','log',NULL,'MD log file.'),('MD_TrajectoryXTC','struct.top.content','String','top ',NULL,'Topology in Gromacs format.'),('MD_TrajectoryXTC','struct.top.itp.content','String','itp',NULL,'GROMACS ITP files describing the molecular structure. Relation HAS (it could be more than one!)'),('NAMD_Conf_Text','content','String','in',NULL,'Input Configuration File to run Namd Simulations.'),('NAMD_MD_Structure','content','String','pdb',NULL,'Service output Pdb Structure.'),('NAMD_MD_Structure','log ','String','log',NULL,'Service log file.'),('NAMD_MD_Structure','top.content','String','psf',NULL,'Namd Topology (Psf).'),('NAMD_Positions','content','String','coor',NULL,'Restart Positions.'),('NAMD_Restart','pos.content','String ','coor',NULL,'Restart Positions.'),('NAMD_Restart','vel.content','String ','vel',NULL,'Restart Velocities.'),('NAMD_Restart','xsc.content','String ','xsc',NULL,'Restart eXtended System Configuration.'),('NAMD_Velocities','content','String','vel',NULL,'Restart Velocities.'),('NAMD_XSC','content','String','xsc',NULL,'Restart eXtended System Configuration.'),('PDB-Text','content','String','pdb',NULL,'Pdb Structure.'),('PRMTOP_Text','content','String','top',NULL,'Prmtop Topology File (Amber).'),('PSF_Text','content','String','psf',NULL,'Psf Topology File (Namd).');
/*!40000 ALTER TABLE `objectDetails` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `operacions`
--

DROP TABLE IF EXISTS `operacions`;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
CREATE TABLE `operacions` (
  `idOperacio` varchar(45) NOT NULL,
  `opType` enum('WS','WF') NOT NULL default 'WF',
  `async` tinyint(4) default '1',
  `keyOp` varchar(60) default NULL,
  `nom` varchar(65) default NULL,
  `WS` varchar(250) default NULL,
  `ObjectIn` varchar(45) default NULL,
  `ObjectOut` varchar(45) default NULL,
  `script` varchar(45) default NULL,
  `tipus` int(10) unsigned default NULL,
  `subtype` int(10) unsigned NOT NULL default '0',
  `descrip` varchar(5000) default NULL,
  PRIMARY KEY  USING BTREE (`idOperacio`,`subtype`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
SET character_set_client = @saved_cs_client;

--
-- Dumping data for table `operacions`
--

LOCK TABLES `operacions` WRITE;
/*!40000 ALTER TABLE `operacions` DISABLE KEYS */;
INSERT INTO `operacions` VALUES ('addDisulphideBonds','WF',1,'Structure with SS bonds marked','Check for disulphide bonds','addDisulphideBondsFromPDBText','PDB-Text','PDB-Text','NULL ',1,0,'Checking for Disulphide Bonds with a distance criteria.\n\nDistance Cutoff: 2.5 Angstroms\nSS bonds added to the PDB file as a REMARK.'),('cleanPDB','WF',1,'Cleaned Structure','Clean PDB','cleanStructureFromPDBText','PDB-Text','PDB-Text','NULL ',1,0,'\"Cleans\" a PDB structure:\n\nRemove Crystal Water molecules.\nRemove Crystal Hydrogen atoms.\nRemove Non-Parametrized Ligands.'),('convertToBINPOS','WF',1,'MD trajectory (Binpos)','Converts trajectory to BINPOS Format','fromMD_TrajectoryToMD_TrajectoryBINPOS','MD_Trajectory','MD_TrajectoryBINPOS','NULL',3,0,'Convert trajectory to BINPOS format:\n\nProgram: ptraj from Ambertools package.\nBINPOS is the Scripps Binary format.'),('convertToCRD','WF',1,'MD trajectory (CRD)','Converts trajectory to CRD Format','fromMD_TrajectoryToMD_TrajectoryCRD','MD_Trajectory','MD_TrajectoryCRD','NULL',3,0,'Convert trajectory to CRD format:\n\nProgram: ptraj from Ambertools package.\nCRD: Amber ASCII format.'),('convertToDCD','WF',1,'MD trajectory (DCD)','Converts trajectory to DCD Format','fromMD_TrajectoryToMD_TrajectoryDCD','MD_Trajectory','MD_TrajectoryDCD','convertToDCD.pl',3,0,'Convert trajectory to DCD format:\n\nProgram: ptraj from Ambertools package.\nDCD is the CHARMM/X-PLOR/NAMD Binary format.'),('convertToNetCDF','WF',1,'MD trajectory (NetCDF)','Converts trajectory to NetCDF Format','fromMD_TrajectoryToMD_TrajectoryNetCDF','MD_Trajectory','MD_TrajectoryNetCDF','NULL',3,0,'Convert trajectory to NetCDF format:\n\nProgram: ptraj from Ambertools package.\nNetCDF (Network Common Data Form) is a machine-independent binary data format for array-oriented scientific data.'),('convertToPDBs','WF',1,'MD trajectory (PDBs)','Converts trajectory to a set of PDB Files','fromMD_TrajectoryToPDB_Collection','MD_Trajectory','PDB-Text','NULL',3,0,'Convert trajectory to a set of PDB files:\n\nProgram: ptraj from Ambertools package.'),('fixSideChains','WF',1,'Fixed Structure','Fix Side Chains','fixSideChainsFromPDBText','PDB-Text','PDB-Text','NULL',1,0,'Fix Side Chain Problems, adding missing heavy atoms (if possible).\n\nProgram: Leap from Ambertools Package.'),('flexAnalysis','WF',1,'Structure flexibility analysis','Flexibility Analysis','fromMD_TrajectoryToMD_TrajectoryBINPOS','MD_Trajectory','MD_TrajectoryBINPOS','NULL',3,0,'Flexibility Analysis (link to FlexServ server):\n\nPrincipal Components.\nVariance Profile.\nB-factors Landscape.\nLindemann Coefficients.\nApparent Stiffness.\nHinge Point Prediction.\nResidue Correlations.\nCollectivity Indexes.'),('getAverageStructure','WF',1,'Average structure','Get Average Structure','getAverageStructureFromMD_Trajectory','MD_Trajectory','PDB-Text','NULL ',3,0,'Gets Average Structure from a Trajectory.\n\nPrograms:\nPtraj from AmberTools package (Binpos,Crd,DCD,NetCDF trajectory formats).\ng_rmsf from Gromacs package (XTC trajectory format).\nPossibility to select a subset of atoms/residues from the whole system.\nUser defined Mask only available for ptraj-compatible trajectory formats (Binpos,Crd,DCD,NetCDF).'),('getBfactor','WF',1,'Bfactor per Residue','Plot BFactor per residue','getTrajectoryBfactorPerResidueFromMD_Trajectory','MD_Trajectory','FeatureAASequence','NULL ',3,0,'Gets Bfactor values per residue from a Trajectory.\n\nPrograms:\nPtraj from AmberTools package (Binpos,Crd,DCD,NetCDF trajectory formats).\ng_rmsf from Gromacs package (XTC trajectory format).\nPossibility to select a subset of atoms/residues from the whole system.\nUser defined Mask only available for ptraj-compatible trajectory formats (Binpos,Crd,DCD,NetCDF).'),('getDryTrajectory','WF',1,'Dry Trajectory','Remove Water molecules and ions from trajectory','getDryTrajectoryFromMD_Trajectory','MD_Trajectory','MD_Trajectory','NULL ',3,0,'Gets Dry Trajectory, removing solvent and ions.\n\nPrograms:\nPtraj from AmberTools package (Binpos,Crd,DCD,NetCDF trajectory formats).\ntrj_conv from Gromacs package (XTC trajectory format).'),('getMaskTrajectoryFromMD_Trajectory','WF',1,'User-defined trajectory','Return trajectory for a set of atoms','getMaskTrajectoryFromMD_Trajectory','MD_Trajectory','MD_Trajectory','NULL ',3,0,'Gets Trajectory for a set of specific atoms or residues.\n\nPrograms:\nPtraj from AmberTools package (Binpos,Crd,DCD,NetCDF trajectory formats).\ntrj_conv from Gromacs package (XTC trajectory format).'),('getRadiusGiration','WF',1,'Radius of Gyration','Plot Radius of Gyration along the trajectory','getTrajectoryRadiusOfGyrationFromMD_Trajectory','MD_Trajectory','arrayFloat','NULL ',3,0,'Gets Radius of Gyration from a Trajectory.\n\nPrograms:\nPtraj from AmberTools package (Binpos,Crd,DCD,NetCDF trajectory formats).\ng_gyrate from Gromacs package (XTC trajectory format).\nPossibility to select a subset of atoms/residues from the whole system.\nUser defined Mask only available for ptraj-compatible trajectory formats (Binpos,Crd,DCD,NetCDF). '),('getSliceFromTrajectory','WF',1,'Trajectory slice','Get a trajectory fragment','getSliceFromMD_Trajectory','MD_Trajectory','MD_Trajectory','NULL ',3,0,'Gets a fragment (a set of snapshots) from a Trajectory.\n\nPrograms:\nPtraj from AmberTools package (Binpos,Crd,DCD,NetCDF trajectory formats).\ntrj_conv from Gromacs package (XTC trajectory format).'),('getSnapshotFromTrajectory','WF',1,'Trajectoy snapshot','Get a trajectory snapshot','getSnapshotFromMD_Trajectory','MD_Trajectory','PDB-Text','NULL',3,0,'Gets a snapshot from a Trajectory.\n\nPrograms:\nPtraj from AmberTools package (Binpos,Crd,DCD,NetCDF trajectory formats).\ntrj_conv from Gromacs package (XTC trajectory format).\nPossibility to select a subset of atoms/residues from the whole system.\nUser defined Mask only available for ptraj-compatible trajectory formats (Binpos,Crd,DCD,NetCDF).'),('mutateResidueFromPDBText','WF',1,'Structure with some mutations','Mutate residue','mutateResidueFromPDBText','PDB-Text','PDB-Text','NULL',1,0,'Mutate a Residue from a PDB.\n\nAllows mutation of a residue in all chains with chain = *.\nProgram: VMD.'),('optimizeStructureFromAMBER_1','WF',1,'Energetically minimized hydrogens','Energy Minimization (Hydrogen atoms)','optimizeStructureFromAMBER_MD_Structure','AMBER_MD_Structure','AMBER_MD_Structure','optimizeStructureAsync.pl',1,1,'Energy Minimization (Hydrogen atoms):\n\nProgram: namd2 from NAMD Package.\nType of minimization: Conjugate Gradient.\nAll heavy atoms of the structure are fixed, only hydrogen atoms are allowed to move.'),('optimizeStructureFromAMBER_2','WF',1,'Energetically minimized structure','Energy Minimization (All atoms)','optimizeStructureFromAMBER_MD_Structure','AMBER_MD_Structure','AMBER_MD_Structure','optimizeStructureAsync.pl',1,2,'Energy Minimization (full structure):\n\nPrograms: namd2 from NAMD Package.\nType of minimization: Conjugate Gradient.\n Possibility of restraining solute/solvent movements with a given force constant.'),('optimizeStructureFromGROMACS_1','WF',1,'Energetically minimized hydrogens','Energy Minimization (Hydrogen atoms)','optimizeStructureFromGROMACS_MD_Structure','GROMACS_MD_Structure','GROMACS_MD_Structure','optimizeStructure.pl',1,1,'Energy Minimization (Hydrogen atoms):\n\nPrograms: grompp and mdrun from Gromacs Package.\nTypes of minimization: Conjugate Gradient and Steepest Descent.\nAll heavy atoms of the structure are fixed, only hydrogen atoms are allowed to move.'),('optimizeStructureFromGROMACS_2','WF',1,'Energetically minimized structure','Energy Minimization (All atoms)','optimizeStructureFromGROMACS_MD_Structure','GROMACS_MD_Structure','GROMACS_MD_Structure','optimizeStructure.pl',1,2,'Energy Minimization (full structure):\n\nPrograms: grompp and mdrun from Gromacs Package.\nTypes of minimization: Conjugate Gradient and Steepest Descent.\nPossibility of restraining atom movements with a given force constant.'),('optimizeStructureFromGROMACS_3','WF',1,'Energetically minimized system','Energy Minimization (All atoms)','optimizeStructureFromGROMACS_MD_Structure','GROMACS_MD_Structure','GROMACS_MD_Structure','optimizeStructure.pl',2,3,'Energy Minimization (full structure):\n\nPrograms: grompp and mdrun from Gromacs Package.\nTypes of minimization: Conjugate Gradient and Steepest Descent.\nPossibility of restraining solute/solvent movements with a given force constant.'),('optimizeStructureFromNAMD_1','WF',1,'Energetically minimized hydrogens','Energy Minimization (Hydrogen atoms)','optimizeStructureFromNAMD_MD_Structure','NAMD_MD_Structure','NAMD_MD_Structure','optimizeStructureAsync.pl',1,1,'Energy Minimization (Hydrogen atoms):\n\nProgram: namd2 from NAMD Package.\nType of minimization: Conjugate Gradient.\nAll heavy atoms of the structure are fixed, only hydrogen atoms are allowed to move.'),('optimizeStructureFromNAMD_2','WF',1,'Energetically minimized structure','Energy Minimization (All atoms)','optimizeStructureFromNAMD_MD_Structure','NAMD_MD_Structure','NAMD_MD_Structure','optimizeStructureAsync.pl',1,2,'Energy Minimization (full structure):\n\nPrograms: namd2 from NAMD Package.\nType of minimization: Conjugate Gradient.\n Possibility of restraining solute/solvent movements with a given force constant.'),('protonateHistidines','WF',1,'Structure with His properly protonated ','Set ionization state (Histidines)','protonateHistidinesFromMD_Structure','MD_Structure','MD_Structure','protonateHistidinesAsync.pl ',1,0,'Computes correct protonation state for Histidine residues.\n\nProtPka Option (Fast).\nCMIP Option (Slow). '),('protonateIonizableResidues','WF',1,'Structure with ionizable residues properly protonated','Set ionization state (All ionizable residues)','protonateIonizableResiduesFromMD_Structure','MD_Structure','MD_Structure','protonateIonizableResAsync.pl',1,0,'Compute correct ionizable residues protonation state.\n\nProtPka Option (Fast).\nCMIP Option (Slow). '),('RMSd','WF',1,'Trajectory RMSd','Plot RMSd along the trajectory','getTrajectoryRmsFromMD_Trajectory','MD_Trajectory','ArrayFloat','getRMSdPerResidue.pl ',3,0,'Root Mean Square deviation along the trajectory.\n\nPrograms:\nPtraj from AmberTools package (Binpos,Crd,DCD,NetCDF trajectory formats).\ng_rms from Gromacs package (XTC trajectory format).\nPossibility of using a reference structure (PDB format).\nPossibility to select a subset of atoms/residues from the whole system.\nUser defined Mask only available for ptraj-compatible trajectory formats (Binpos,Crd,DCD,NetCDF).'),('RMSdPerResidue','WF',1,'RMSd per residue','Plot RMSd x Residue','getTrajectoryRmsPerResidueFromMD_Trajectory','MD_Trajectory','FeatureAASequence','getRMSd.pl',3,0,'Average Root Mean Square deviation per residue along the trajectory.\n\nPrograms:\nPtraj from AmberTools package (Binpos,Crd,DCD,NetCDF trajectory formats).\ng_rmsf from Gromacs package (XTC trajectory format).\nPossibility of using a reference structure (PDB format).\nPossibility to select a subset of atoms/residues from the whole system.\nUser defined Mask only available for ptraj-compatible trajectory formats (Binpos,Crd,DCD,NetCDF).'),('runBrownianMDFromPDBText','WF',1,'Coarse-grained Brownian MD trajectory','Coarse-grained MD: Brownian dynamics (C-Alpha)','runBrownianMDFromPDBText','PDB-Text','MD_TrajectoryCRD','NULL',2,0,'Run Coarse-grained Brownian Molecular Dynamics.\n\nProtein is put in a stochastic bath that keeps the temperature constant and modulates the otherwise extreme oscillations of the residues.\nThis bath is simulated with two terms accounting for a velocity-dependent friction and stochastic forces due to the solvent environment.\nThe potential energy used to compute forces assumes a coarse-grained representation of the protein (Calpha-only) and a quasi-harmonic representation of the interactions.\nTime: total simulation time.\nDelta_t: Time step for integration.\nOutput Frequency: Frequency to write coordinates to output trajectory.\nForce Constant: Measure of the strength of the spring connecting atoms measured in Kcal/mol*Angstrom*Angstrom.'),('runDiscreteMDFromPDBText','WF',1,'Coarse-grained Discrete MD trajectory','Coarse-grained MD: DISCRETE dynamics (C-Alpha)','runDiscreteMDFromPDBText','PDB-Text','MD_TrajectoryCRD','NULL',2,0,'Run Coarse-grained Discrete Molecular Dynamics.\n\nProtein is modelled as a system of beads (Calpha atoms) interacting through a discontinuous potential (square wells).\nOutside the discontinuities, potentials are considered constant, thereby implying a ballistic regime for the particles (constant potential, constant velocity) in all conditions, except at such time as when the particles reach a potential discontinuity (event or collision). At this time, the velocities of the colliding particles are modified by imposing conservation of the linear momentum, angular momentum, and total energy.\nDMD has a major advantage over techniques like MD because, as it does not require the integration of the equations of motion at fixed time steps, the calculation progresses from event to event.\nTime: total simulation time.\nOutput Frequency: Frequency to write coordinates to output trajectory.\nCut-off Distance: Maximum distance for the pairs of atoms to be included in the calculation.\nSigma is a factor defining the well amplitude for consecutive Calpha atoms.\nSigma Go is a factor defining the well amplitude for non-consecutive Calpha.'),('runDiscreteMD_AA_FromPDBText','WF',1,'Coarse-grained All Atoms Discrete MD trajectory','Coarse-grained MD: DISCRETE dynamics (Heavy atoms)','runDiscreteMD_AA_FromPDBText','PDB-Text','MD_TrajectoryCRD','NULL',2,0,'Run Coarse-grained All Atoms Discrete Molecular Dynamics.\n\nProtein is modelled as a system of beads (ALL Heavy Atoms) interacting through a discontinuous potential (square wells).\nOutside the discontinuities, potentials are considered constant, thereby implying a ballistic regime for the particles (constant potential, constant velocity) in all conditions, except at such time as when the particles reach a potential discontinuity (event or collision). At this time, the velocities of the colliding particles are modified by imposing conservation of the linear momentum, angular momentum, and total energy.\nDMD has a major advantage over techniques like MD because, as it does not require the integration of the equations of motion at fixed time steps, the calculation progresses from event to event.\nTime: total simulation time.\nOutput Frequency: Frequency to write coordinates to output trajectory.'),('runMDFromAMBER1','WF',1,'Equilibrated System (NPT)','Simple Box Solvent System Equilibration (NPT)','runMDFromAMBER_MD_Structure','AMBER_MD_Structure','MD_TrajectoryDCD','runMDAsync.pl',2,3,'System Molecular Dynamics Equilibration in Water Box:\n\nProgram: namd2 from NAMD package.\nEquilibration done in NPT ensemble with Periodic Boundary Conditions.\nParticle Mesh Ewald (PME) for full-system periodic electrostatics.\nConstant temperature dynamics via Langevin Dynamics.\nConstant pressure dynamics via Nose-Hoover Langevin piston.\nSHAKE was used to maintain all bonds involving hydrogen atoms at their equilibrium values.'),('runMDFromAMBER2','WF',1,'MD Trajectory (AMBER - NPT)','Simple Box Solvent Molecular Dynamics (NPT)','runMDFromAMBER_MD_Structure','AMBER_MD_Structure','MD_TrajectoryDCD','runMDAsync.pl',2,4,'System Molecular Dynamics Simulation in Water Box:\n\nProgram: namd2 from NAMD package.\nSimulation done in NPT ensemble with Periodic Boundary Conditions.\nParticle Mesh Ewald (PME) for full-system periodic electrostatics.\nConstant temperature dynamics via Langevin Dynamics.\nConstant pressure dynamics via Nose-Hoover Langevin piston.\nSHAKE was used to maintain all bonds involving hydrogen atoms at their equilibrium values.'),('runMDFromAMBER3','WF',1,'Equilibrated System (NVT)','Simple Box Solvent System Equilibration (NVT)','runMDFromAMBER_MD_Structure','AMBER_MD_Structure','MD_TrajectoryDCD','runMDAsync.pl',2,3,'System Molecular Dynamics Equilibration in Water Box:\n\nProgram: namd2 from NAMD package.\nEquilibration done in NVT ensemble with Periodic Boundary Conditions.\nParticle Mesh Ewald (PME) for full-system periodic electrostatics.\nConstant temperature dynamics via Langevin Dynamics.\nSHAKE was used to maintain all bonds involving hydrogen atoms at their equilibrium values.'),('runMDFromAMBER4','WF',1,'MD Trajectory (AMBER - NVT)','Simple Box Solvent Molecular Dynamics (NVT)','runMDFromAMBER_MD_Structure','AMBER_MD_Structure','MD_TrajectoryDCD','runMDAsync.pl',2,4,'System Molecular Dynamics Simulation in Water Box:\n\nProgram: namd2 from NAMD package.\nSimulation done in NVT ensemble with Periodic Boundary Conditions.\nParticle Mesh Ewald (PME) for full-system periodic electrostatics.\nConstant temperature dynamics via Langevin Dynamics.\nSHAKE was used to maintain all bonds involving hydrogen atoms at their equilibrium values.'),('runMDFromAMBER5','WF',1,'Equilibrated System (NVE)','Simple Box Solvent System Equilibration (NVE)','runMDFromAMBER_MD_Structure','AMBER_MD_Structure','MD_TrajectoryDCD','runMDAsync.pl',2,3,'System Molecular Dynamics Equilibration in Water Box:\n\nProgram: namd2 from NAMD package.\nEquilibration done in NVE ensemble with Periodic Boundary Conditions.\nParticle Mesh Ewald (PME) for full-system periodic electrostatics.\nSHAKE was used to maintain all bonds involving hydrogen atoms at their equilibrium values.'),('runMDFromAMBER6','WF',1,'MD Trajectory (AMBER - NVE)','Simple Box Solvent Molecular Dynamics (NVE)','runMDFromAMBER_MD_Structure','AMBER_MD_Structure','MD_TrajectoryDCD','runMDAsync.pl',2,4,'System Molecular Dynamics Simulation in Water Box:\n\nProgram: namd2 from NAMD package.\nSimulation done in NVE ensemble with Periodic Boundary Conditions.\nParticle Mesh Ewald (PME) for full-system periodic electrostatics.\nSHAKE was used to maintain all bonds involving hydrogen atoms at their equilibrium values.'),('runMDFromAMBER7','WF',1,'Warmed System ','Warming System from 0K to a desired temperature ','runMDFromAMBER_MD_Structure','AMBER_MD_Structure','MD_TrajectoryDCD','runMDAsync.pl',2,4,'Warming the system from 0K to a desired temperature:\n\nProgram: namd2 from NAMD package.\nWarming up done with Periodic Boundary Conditions.\nParticle Mesh Ewald (PME) for full-system periodic electrostatics.\nSHAKE was used to maintain all bonds involving hydrogen atoms at their equilibrium values.'),('runMDFromGROMACS1','WF',1,'Equilibrated System (NPT)','Simple Box Solvent System Equilibration (NPT)','runMDFromGROMACS_MD_Structure','GROMACS_MD_Structure','MD_TrajectoryXTC','runMDAsync.pl',2,3,'System Molecular Dynamics Equilibration in Water Box:\n\nProgram: mdrun from Gromacs package.\nEquilibration done in NPT ensemble with Periodic Boundary Conditions.\nParticle Mesh Ewald (PME) for full-system periodic electrostatics.\nConstant temperature dynamics via Velocity-rescale algorithm.\nConstant pressure dynamics via Parrinello-Rahman algorithm.\nLINCS Linear Constraint Solver was used to maintain all bonds at their equilibrium values.'),('runMDFromGROMACS2','WF',1,'MD Trajectory (GROMACS - NPT)','Simple Box Solvent Molecular Dynamics (NPT)','runMDFromGROMACS_MD_Structure','GROMACS_MD_Structure','MD_TrajectoryXTC','runMDAsync.pl',2,4,'System Molecular Dynamics Equilibration in Water Box:\n\nProgram: mdrun from Gromacs package.\nEquilibration done in NPT ensemble with Periodic Boundary Conditions.\nParticle Mesh Ewald (PME) for full-system periodic electrostatics.\nConstant temperature dynamics via Velocity-rescale algorithm.\nConstant pressure dynamics via Parrinello-Rahman algorithm.\nSHAKE was used to maintain all bonds at their equilibrium values.'),('runMDFromGROMACS3','WF',1,'Equilibrated System (NVT)','Simple Box Solvent System Equilibration (NVT)','runMDFromGROMACS_MD_Structure','GROMACS_MD_Structure','MD_TrajectoryXTC','runMDAsync.pl',2,3,'System Molecular Dynamics Equilibration in Water Box:\n\nProgram: mdrun from Gromacs package.\nEquilibration done in NVT ensemble with Periodic Boundary Conditions.\nParticle Mesh Ewald (PME) for full-system periodic electrostatics.\nConstant temperature dynamics via Velocity-rescale algorithm.\nLINCS Linear Constraint Solver was used to maintain all bonds at their equilibrium values.'),('runMDFromGROMACS4','WF',1,'MD Trajectory (GROMACS - NVT)','Simple Box Solvent Molecular Dynamics (NVT)','runMDFromGROMACS_MD_Structure','GROMACS_MD_Structure','MD_TrajectoryXTC','runMDAsync.pl',2,4,'System Molecular Dynamics Equilibration in Water Box:\n\nProgram: mdrun from Gromacs package.\nEquilibration done in NVT ensemble with Periodic Boundary Conditions.\nParticle Mesh Ewald (PME) for full-system periodic electrostatics.\nConstant temperature dynamics via Velocity-rescale algorithm.\nSHAKE was used to maintain all bonds at their equilibrium values.'),('runMDFromGROMACS5','WF',1,'Equilibrated System (NVE)','Simple Box Solvent System Equilibration (NVE)','runMDFromGROMACS_MD_Structure','GROMACS_MD_Structure','MD_TrajectoryXTC','runMDAsync.pl',2,3,'System Molecular Dynamics Equilibration in Water Box:\n\nProgram: mdrun from Gromacs package.\nEquilibration done in NVE ensemble with Periodic Boundary Conditions.\nParticle Mesh Ewald (PME) for full-system periodic electrostatics.\nLINCS Linear Constraint Solver was used to maintain all bonds at their equilibrium values.'),('runMDFromGROMACS6','WF',1,'MD Trajectory (GROMACS - NVE)','Simple Box Solvent Molecular Dynamics (NVE)','runMDFromGROMACS_MD_Structure','GROMACS_MD_Structure','MD_TrajectoryXTC','runMDAsync.pl',2,4,'System Molecular Dynamics Equilibration in Water Box:\n\nProgram: mdrun from Gromacs package.\nEquilibration done in NVE ensemble with Periodic Boundary Conditions.\nParticle Mesh Ewald (PME) for full-system periodic electrostatics.\nSHAKE was used to maintain all bonds at their equilibrium values.'),('runMDFromGROMACS7','WF',1,'Warmed System ','Warming System from 0K to a desired temperature ','runMDFromGROMACS_MD_Structure','GROMACS_MD_Structure','MD_TrajectoryXTC','runMDAsync.pl',2,4,'Warming the system from 0K to a desired temperature:\n\nProgram: mdrun from Gromacs package.\nWarming up done with Periodic Boundary Conditions.\nParticle Mesh Ewald (PME) for full-system periodic electrostatics.\nSHAKE was used to maintain all bonds at their equilibrium values.'),('runMDFromNAMD1','WF',1,'Equilibrated System (NPT)','Simple Box Solvent System Equilibration (NPT)','runMDFromNAMD_MD_Structure','NAMD_MD_Structure','MD_TrajectoryDCD','runMDAsync.pl',2,3,'System Molecular Dynamics Equilibration in Water Box:\n\nProgram: namd2 from NAMD package.\nEquilibration done in NPT ensemble with Periodic Boundary Conditions.\nParticle Mesh Ewald (PME) for full-system periodic electrostatics.\nConstant temperature dynamics via Langevin Dynamics.\nConstant pressure dynamics via Nose-Hoover Langevin piston.\nSHAKE was used to maintain all bonds involving hydrogen atoms at their equilibrium values.'),('runMDFromNAMD2','WF',1,'MD Trajectory (NAMD - NPT)','Simple Box Solvent Molecular Dynamics (NPT)','runMDFromNAMD_MD_Structure','NAMD_MD_Structure','MD_TrajectoryDCD','runMDAsync.pl',2,4,'System Molecular Dynamics Simulation in Water Box:\n\nProgram: namd2 from NAMD package.\nSimulation done in NPT ensemble with Periodic Boundary Conditions.\nParticle Mesh Ewald (PME) for full-system periodic electrostatics.\nConstant temperature dynamics via Langevin Dynamics.\nConstant pressure dynamics via Nose-Hoover Langevin piston.\nSHAKE was used to maintain all bonds involving hydrogen atoms at their equilibrium values.'),('runMDFromNAMD3','WF',1,'Equilibrated System (NVT)','Simple Box Solvent System Equilibration (NVT)','runMDFromNAMD_MD_Structure','NAMD_MD_Structure','MD_TrajectoryDCD','runMDAsync.pl',2,3,'System Molecular Dynamics Equilibration in Water Box:\n\nProgram: namd2 from NAMD package.\nEquilibration done in NVT ensemble with Periodic Boundary Conditions.\nParticle Mesh Ewald (PME) for full-system periodic electrostatics.\nConstant temperature dynamics via Langevin Dynamics.\nSHAKE was used to maintain all bonds involving hydrogen atoms at their equilibrium values.'),('runMDFromNAMD4','WF',1,'MD Trajectory (NAMD - NVT)','Simple Box Solvent Molecular Dynamics (NVT)','runMDFromNAMD_MD_Structure','NAMD_MD_Structure','MD_TrajectoryDCD','runMDAsync.pl',2,4,'System Molecular Dynamics Simulation in Water Box:\n\nProgram: namd2 from NAMD package.\nSimulation done in NVT ensemble with Periodic Boundary Conditions.\nParticle Mesh Ewald (PME) for full-system periodic electrostatics.\nConstant temperature dynamics via Langevin Dynamics.\nSHAKE was used to maintain all bonds involving hydrogen atoms at their equilibrium values.'),('runMDFromNAMD5','WF',1,'Equilibrated System (NVE)','Simple Box Solvent System Equilibration (NVE)','runMDFromNAMD_MD_Structure','NAMD_MD_Structure','MD_TrajectoryDCD','runMDAsync.pl',2,3,'System Molecular Dynamics Equilibration in Water Box:\n\nProgram: namd2 from NAMD package.\nEquilibration done in NVE ensemble with Periodic Boundary Conditions.\nParticle Mesh Ewald (PME) for full-system periodic electrostatics.\nSHAKE was used to maintain all bonds involving hydrogen atoms at their equilibrium values.'),('runMDFromNAMD6','WF',1,'MD Trajectory (NAMD - NVE)','Simple Box Solvent Molecular Dynamics (NVE)','runMDFromNAMD_MD_Structure','NAMD_MD_Structure','MD_TrajectoryDCD','runMDAsync.pl',2,4,'System Molecular Dynamics Simulation in Water Box:\n\nProgram: namd2 from NAMD package.\nSimulation done in NVE ensemble with Periodic Boundary Conditions.\nParticle Mesh Ewald (PME) for full-system periodic electrostatics.\nSHAKE was used to maintain all bonds involving hydrogen atoms at their equilibrium values.'),('runMDFromNAMD7','WF',1,'Warmed System ','Warming System from 0K to a desired temperature ','runMDFromNAMD_MD_Structure','NAMD_MD_Structure','MD_TrajectoryDCD','runMDAsync.pl',2,4,'Warming the system from 0K to a desired temperature:\n\nProgram: namd2 from NAMD package.\nWarming up done with Periodic Boundary Conditions.\nParticle Mesh Ewald (PME) for full-system periodic electrostatics.\nSHAKE was used to maintain all bonds involving hydrogen atoms at their equilibrium values.'),('runNormalModeAnalysisFromPDBText','WF',1,'Coarse-grained Normal Mode Analysis trajectory','Coarse-grained MD: NMA (C-Alpha)','runNormalModeAnalysisFromPDBText','PDB-Text','MD_TrajectoryCRD','NULL',2,0,'Run Coarse-grained Normal Mode Analysis.\n\nNormal Mode Analysis (NMA) can be defined as the multidimensional treatment of coupled oscillators from the analysis of force-derivatives in equilibrium conformations.\nThis methodology assumes that the displacement of an atom from its equilibrium position is small and that the potential energy in the vicinity of the equilibrium position can be approximated as a sum of terms that are quadratic in the atomic displacements.\nVectorial Anisotropic Network Model using coarse-grained (Calpha) protein representation is the formalism implemented here.\nThrough the diagonalization of the hessian matrix, the ANM provides eigenvalues and eigenvectors that not only describe the frequencies and shapes of the normal modes, but also their directions.\nPossibility to choose between three ANM formalism definitions of the force constants:\n1. Linear algorithm uses a unique potential is used for all interactions considered.\n2. Kovacs algorithm uses a distance-dependent potential.\n3. Mixed algorithm uses a potentials adjusted to atomistic MD simulations.\nForce Constant: Measure of the strength of the spring connecting atoms measured in Kcal/mol*Angstrom*Angstrom.\nCutoff: Maximum distance for the pairs of atoms to be included in the calculation.'),('solvateStructureFromAMBER_MD_Structure','WF',1,'Solvated system (AMBER)','Solvate structure','solvateStructureFromAMBER_MD_Structure','AMBER_MD_Structure','AMBER_MD_Structure','NULL',1,0,'Structure Solvation:\n\nProgram: Leap from Ambertools Package.\nDifferent kinds of box: Shell, Spheric, Cubic and Truncated Octahedron.\nBox size specified by angstroms of spacing distance around the molecule.\nWater molecule type: TIP3P.\nBy default, necessary ions are added in order to neutralize the system.\nPositive ions: Na+\nNegative Ions: Cl-'),('solvateStructureFromGROMACS_MD_Structure','WF',1,'Solvated system (GROMACS)','Solvate structure','solvateStructureFromGROMACS_MD_Structure','GROMACS_MD_Structure','GROMACS_MD_Structure','NULL',1,0,'Structure Solvation:\n\nProgram: genbox and genion from Gromacs Package.\nDifferent kinds of box: Cubic, Triclinic, Dodecahedron and Truncated Octahedron.\nBox size specified by nanometers of spacing distance around the molecule.\nWater molecule type: SPC.\nBy default, necessary ions are added in order to neutralize the system.\nPositive ions: Na+\nNegative Ions: Cl-'),('solvateStructureFromNAMD_MD_Structure','WF',1,'Solvated system (NAMD)','Solvate structure','solvateStructureFromNAMD_MD_Structure','NAMD_MD_Structure','NAMD_MD_Structure','NULL',1,0,'Structure Solvation:\n\nProgram: VMD (solvate and autoionize plugins) from NAMD Package.\nDifferent kinds of box: Cubic, and Spheric.\nBox size specified by Angstroms of spacing distance around the molecule.\nWater molecule type: TIP3P.\nBy default, necessary ions are added in order to neutralize the system.\nPositive ions: Na+\nNegative Ions: Cl-'),('titrateStructure','WF',1,'Structure with structural hydration waters and ions','Add structural water molecules and ions','titrateStructureFromMD_Structure','MD_Structure','MD_Structure','titrateStructureAsync.pl',1,0,'Add water molecules and ions at the energetically most favourable positions on the surface of the structure.\n\nProgram: CMIP, Classical Molecular Interaction Potentials.\nNecessary ions are automatically added in order to neutralize the system.\nThen, a given number of positive and/or negative ions (by default 5 positives and 5 negatives) and structural waters (by default 20) are added.\nPositive ions: Na+\nNegative Ions: Cl-'),('unzipTrajectory','WF',1,'MD trajectory (CRD)','Decompress PCZ trajectory ','unzipTrajectory','MD_Compressed_Trajectory','MD_TrajectoryCRD','pcazip.pl',3,0,'Uncompress PCZ trajectory\n\nProgram: pcazip (http://mmb.pcb.ub.es/software/pcasuite).\nOutput trajectory in CRD format.'),('zipTrajectory','WF',1,'Pcazip compressed trajectory','Compress trajectory to PCZ ','zipTrajectory','MD_Trajectory','MD_Compressed_Trajectory','pcazip.pl',3,0,'Compress trajectory to a PCZ format.\n\nProgram: pcazip (http://mmb.pcb.ub.es/software/pcasuite).\nPcazip compresses Molecular Dynamics (MD) trajectories using Principal Component Analysis (PCA) algorithms.\nPcazip offers a good compression ratio at the expense of losing some precision in the trajectory.\nParameters: Quality: Specifies the quality of the compression as a percentage of explained variance (default 90%)\nGaussian RMSd: weighted RMSd, giving less weight to atoms in flexible regions (e.g. loops).\nNumber of Eigen Vectors: Specifies the number of eigenvectors that must be stored in the file. With 0 value pcazip will get the necessary number of vectors to obtain the percentage of explained variance (Quality).');
/*!40000 ALTER TABLE `operacions` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `paises`
--

DROP TABLE IF EXISTS `paises`;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
CREATE TABLE `paises` (
  `id` int(10) unsigned NOT NULL auto_increment,
  `pais` varchar(150) NOT NULL default '',
  PRIMARY KEY  (`id`),
  KEY `pais` (`pais`)
) ENGINE=MyISAM AUTO_INCREMENT=255 DEFAULT CHARSET=latin1;
SET character_set_client = @saved_cs_client;

--
-- Dumping data for table `paises`
--

LOCK TABLES `paises` WRITE;
/*!40000 ALTER TABLE `paises` DISABLE KEYS */;
INSERT INTO `paises` VALUES (2,'United Arab Emirates'),(3,'Afghanistan'),(4,'Antigua and Barbuda'),(5,'Anguilla'),(6,'Albania'),(7,'Armenia'),(8,'Netherlands Antilles'),(9,'Angola'),(10,'Antarctica'),(11,'Argentina'),(12,'American Samoa'),(13,'Austria'),(14,'Australia'),(15,'Aruba'),(16,'Azerbaijan'),(17,'Bosnia and Herzegovina'),(18,'Barbados'),(19,'Bangladesh'),(20,'Belgium'),(21,'Burkina Faso'),(22,'Bulgaria'),(23,'Bahrain'),(24,'Burundi'),(25,'Benin'),(26,'Bermuda'),(27,'Brunei Darussalam'),(28,'Bolivia'),(29,'Brazil'),(30,'Bahamas'),(31,'Bhutan'),(32,'Bouvet Island'),(33,'Botswana'),(34,'Belarus'),(35,'Belize'),(36,'Canada'),(37,'Cocos (Keeling) Islands'),(38,'Central African Republic'),(39,'Congo'),(40,'Switzerland'),(41,'Cote D\'Ivoire'),(42,'Cook Islands'),(43,'Chile'),(44,'Cameroon'),(45,'China'),(46,'Colombia'),(47,'Costa Rica'),(49,'Cuba'),(50,'Cape Verde'),(51,'Christmas Island'),(52,'Cyprus'),(53,'Czech Republic'),(54,'Germany'),(55,'Djibouti'),(56,'Denmark'),(58,'Dominican Republic'),(59,'Algeria'),(60,'Ecuador'),(247,'Ashmore and Cartier Islands'),(62,'Egypt'),(63,'Western Sahara'),(65,'Spain'),(66,'Ethiopia'),(67,'Finland'),(68,'Fiji'),(69,'Falkland Islands (Malvinas)'),(70,'Micronesia'),(71,'Faroe Islands'),(72,'France'),(73,'France, Metropolitan'),(74,'Gabon'),(246,'Andorra'),(76,'Grenada'),(77,'Georgia'),(78,'French Guiana'),(79,'Ghana'),(80,'Gibraltar'),(81,'Greenland'),(82,'Gambia'),(83,'Guinea'),(84,'Guadeloupe'),(85,'Equatorial Guinea'),(86,'Greece'),(87,'S. Georgia and S. Sandwich'),(88,'Guatemala'),(89,'Guam'),(90,'Guinea-Bissau'),(91,'Guyana'),(92,'Hong Kong'),(93,'Heard and McDonald Islands'),(94,'Honduras'),(95,'Croatia (Hrvatska)'),(96,'Haiti'),(97,'Hungary'),(98,'Indonesia'),(99,'Ireland'),(100,'Israel'),(101,'India'),(102,'British Indian Ocean Terr.'),(103,'Iraq'),(104,'Iran'),(105,'Iceland'),(106,'Italy'),(107,'Jamaica'),(108,'Jordan'),(109,'Japan'),(110,'Kenya'),(111,'Kyrgyzstan'),(112,'Cambodia'),(113,'Kiribati'),(114,'Comoros'),(115,'Saint Kitts and Nevis'),(116,'Korea (North)'),(117,'Korea (South)'),(118,'Kuwait'),(119,'Cayman Islands'),(120,'Kazakhstan'),(121,'Laos'),(122,'Lebanon'),(123,'Saint Lucia'),(124,'Liechtenstein'),(125,'Sri Lanka'),(126,'Liberia'),(127,'Lesotho'),(128,'Lithuania'),(129,'Luxembourg'),(130,'Latvia'),(131,'Libya'),(132,'Morocco'),(133,'Monaco'),(134,'Moldova'),(135,'Madagascar'),(136,'Marshall Islands'),(137,'Macedonia'),(138,'Mali'),(139,'Myanmar'),(140,'Mongolia'),(141,'Macau'),(142,'Northern Mariana Islands'),(143,'Martinique'),(144,'Mauritania'),(145,'Montserrat'),(146,'Malta'),(147,'Mauritius'),(148,'Maldives'),(149,'Malawi'),(150,'Mexico'),(151,'Malaysia'),(152,'Mozambique'),(153,'Namibia'),(154,'New Caledonia'),(155,'Niger'),(156,'Norfolk Island'),(157,'Nigeria'),(158,'Nicaragua'),(159,'Netherlands'),(160,'Norway'),(161,'Nepal'),(162,'Nauru'),(163,'Neutral Zone'),(164,'Niue'),(165,'New Zealand'),(166,'Oman'),(167,'Panama'),(168,'Peru'),(169,'French Polynesia'),(170,'Papua New Guinea'),(171,'Philippines'),(172,'Pakistan'),(173,'Poland'),(174,'St. Pierre and Miquelon'),(175,'Pitcairn'),(176,'Puerto Rico'),(177,'Portugal'),(178,'Palau'),(179,'Paraguay'),(180,'Qatar'),(181,'Reunion'),(182,'Romania'),(183,'Russian Federation'),(184,'Rwanda'),(185,'Saudi Arabia'),(186,'Solomon Islands'),(187,'Seychelles'),(188,'Sudan'),(189,'Sweden'),(190,'Singapore'),(191,'St. Helena'),(192,'Slovenia'),(193,'Svalbard and Jan Mayen Islands'),(194,'Slovak Republic'),(195,'Sierra Leone'),(196,'San Marino'),(197,'Senegal'),(198,'Somalia'),(199,'Suriname'),(200,'Sao Tome and Principe'),(245,'United Kingdom'),(202,'El Salvador'),(203,'Syria'),(204,'Swaziland'),(205,'Turks and Caicos Islands'),(206,'Chad'),(207,'French Southern Territories'),(208,'Togo'),(209,'Thailand'),(210,'Tajikistan'),(211,'Tokelau'),(212,'Turkmenistan'),(213,'Tunisia'),(214,'Tonga'),(215,'East Timor'),(216,'Turkey'),(217,'Trinidad and Tobago'),(218,'Tuvalu'),(219,'Taiwan'),(220,'Tanzania'),(221,'Ukraine'),(222,'Uganda'),(244,'Estonia'),(224,'US Minor Outlying Islands'),(225,'United States'),(226,'Uruguay'),(227,'Uzbekistan'),(228,'Vatican City State'),(229,'Saint Vincent and Grenadines'),(230,'Venezuela'),(231,'Virgin Islands (British)'),(232,'Virgin Islands (U.S.)'),(233,'Vietnam'),(234,'Vanuatu'),(235,'Wallis and Futuna Islands'),(236,'Samoa'),(237,'Yemen'),(238,'Mayotte'),(239,'Yugoslavia'),(240,'South Africa'),(241,'Zambia'),(242,'Zaire'),(243,'Zimbabwe'),(248,'Eritrea'),(249,'Serbia and Montenegro'),(252,'Burma'),(253,'Nunavut'),(254,'Sikkim');
/*!40000 ALTER TABLE `paises` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `projects`
--

DROP TABLE IF EXISTS `projects`;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
CREATE TABLE `projects` (
  `idProject` varchar(45) NOT NULL,
  `titol` varchar(255) default NULL,
  `descripcio` varchar(255) default NULL,
  `lastmodif` varchar(45) default NULL,
  `idUser` int(10) unsigned default NULL,
  PRIMARY KEY  (`idProject`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;
SET character_set_client = @saved_cs_client;

--
-- Dumping data for table `projects`
--

LOCK TABLES `projects` WRITE;
/*!40000 ALTER TABLE `projects` DISABLE KEYS */;
INSERT INTO `projects` VALUES ('MDWeb4f0f16eaa7b47','4ake','','20120224195145',232),('MDWeb4f140de2dfc46','1ake','','20120126172833',232),('MDWeb4f2189bf42fff','MDWeb Tutorial: 1ubq','','20120220133210',232),('MDWeb4f227d8d52d0a','1ubq','','20120222131105',232),('MDWeb4f22d725c9bb0','test2I1M','test run for 2I1M','20120127175610',697),('MDWeb4f22dc0374834','test2I1M_mod','input is 2I1M, which missing residues have been modelled','20120127181955',697),('MDWeb4f22ec3045a14','1agi','','20120227184249',232),('MDWeb4f22ec6876469','2ki5','','20120127192654',232),('MDWeb4f296b4ef2258','1kx5','','20120201174201',232),('MDWeb4f2985fa37e15','2ki5_lig','','20120202135125',232),('MDWeb4f2c05eae2bc4','test2','','20120203170605',697),('MDWeb4f2c0754d8257','test3','','20120203171207',697),('MDWeb4f2c07d0bc92b','testB','','20120203172843',697),('MDWeb4f30126d825e5','TRX1','TRX simulations','20120207001948',708),('MDWeb4f302a29c265d','PAPS red','','20120207024823',709),('MDWeb4f304fa15991f','m_1RUZ','','20120206231402',498),('MDWeb4f32f9955da8a','prova','','20120208233924',718),('MDWeb4f33ab83cee27','1fdi','','20120209121834',232),('MDWeb4f34ed3cd3255','2ki5','','20120210111114',232),('MDWeb4f34f1a40fe61','1kqw','','20120210135656',232),('MDWeb4f3507bfb877c','DYS19 dynamics analysis','Entropy calculations','20120210130604',719),('MDWeb4f353b2be8dc8','Serine Hydrolase MD Analysis','','20120210181602',232),('MDWeb4f3689e642a88','Test','','20120211163839',720),('MDWeb4f39527b06fa7','complex','','20120214145208',321),('MDWeb4f3d254f20500','1ubq','','20120218130710',738),('MDWeb4f3d36df1f624','2DM0','','20120216180743',444),('MDWeb4f44ed014ba92','Hormone/growth factor receptor - Closed Form','','20120222184046',232),('MDWeb4f44edf095434','Hormone/growth factor receptor - Unbound open Form','','20120223105410',232),('MDWeb4f44ee8a167da','Hormone/growth factor receptor - Bound open Form','','20120222143335',232),('MDWeb4f4514fbb1fb0','2ki5','','20120222171705',232),('MDWeb4f452b6f90acd','1ubq','','20120222185251',232),('MDWeb4f46302f46743','pfsub1','','20120301142928',767),('MDWeb4f46734a2ca8f','Hormone/growth factor receptor - Closed Form Parm99SB-ildn','','20120224103943',232),('MDWeb4f46754b07d91','Hormone/growth factor receptor - Unbound open Form Parm99SB-ildn','','20120224105413',232),('MDWeb4f4677aabc322','Hormone/growth factor receptor - Bound open Form Parm99SB-ildn','','20120227102231',232),('MDWeb4f476baac2ecd','Setup Tutorial Example: Ubiquitin (pdbCode: 1ubq)','Setup Tutorial Demo.\r\nExample using Ubiquitin protein (pdbCode 1ubq).','20120224182749',783),('MDWeb4f477af7a85f7','Analysis Tutorial Example','Analysis of 10 ns molecular dynamics simulation of a Serine Hydrolase (Pdb code: 1eve).','20120224182942',783),('MDWeb4f47df30d4d7b','1rna','','20120224200552',232),('MDWeb4f4b604e944f8','H2','','20120227161133',498),('MDWeb4f4b9ef6b2c47','H2','','20120227163008',498),('MDWeb4f4ba4a45b8da','H5','','20120227164407',498),('MDWeb4f4cb10a55994','ssRNA2','','20120301102416',232),('MDWeb4f4e3ea2e3362','1iep','','20120229160509',504),('MDWeb4f4e94085707b','COX_2','','20120229223303',796),('MDWeb4f4e9daae7b6d','parametrisation','','20120229225201',796),('MDWeb4f4f5c8c0a323','Abfa 1PZ3','','20120302020654',797),('MDWeb4f4f840701640','CYP51','','20120301151332',798);
/*!40000 ALTER TABLE `projects` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `users`
--

DROP TABLE IF EXISTS `users`;
SET @saved_cs_client     = @@character_set_client;
SET character_set_client = utf8;
CREATE TABLE `users` (
  `idUser` int(10) unsigned NOT NULL auto_increment,
  `login` varchar(45) NOT NULL,
  `passwd` varchar(45) NOT NULL,
  `lastlogin` varchar(45) default NULL,
  `caduca` int(10) unsigned default '100',
  `surname` varchar(45) default NULL,
  `name` varchar(45) default NULL,
  `inst` varchar(45) default NULL,
  `email` varchar(45) default NULL,
  `MNPublicKey` varchar(255) default NULL,
  `country` int(10) unsigned default NULL,
  PRIMARY KEY  (`idUser`)
) ENGINE=InnoDB AUTO_INCREMENT=799 DEFAULT CHARSET=latin1;
SET character_set_client = @saved_cs_client;

--
-- Dumping data for table `users`
--

LOCK TABLES `users` WRITE;
/*!40000 ALTER TABLE `users` DISABLE KEYS */;
INSERT INTO `users` VALUES (232,'adam','$1$$JMariUW7vJQLQ28lfsue9.','20110211160928',40,'Hospital','Adam','IRB','adam@mmb.pcb.ub.es',NULL,65),(239,'jlgelpi','$1$$Jp1ivCtJtklUtLH3X1rFt.','20110316183234',40,'Gelpi','Josep Ll. ','UB','jlgelpi@gmail.com',NULL,65),(250,'adam3','$1$$HrpaDS9p/2Jk9uL3Si3U00','20110511155540',40,'f','2','s','adam@mmb.pcb.ub.es',NULL,3),(253,'jlgelpi2','$1$$Jp1ivCtJtklUtLH3X1rFt.','20110513115152',40,'Gelpi','Josep Ll. ','UB','gelpi@ub.edu',NULL,65),(255,'adam4','$1$$JMariUW7vJQLQ28lfsue9.','20110707080651',40,'d2','r2','pp','adam@mmb.pcb.ub.es',NULL,65),(313,'oliver','$1$$Ak/IY1Rs5vA.HqfmhQLcc0','20110831151922',40,'Carrillo','Oliver','Universita di Modena','oliver@mmb.pcb.ub.es',NULL,106),(321,'ifaustino','$1$$vDB6q5.ECs2JbIZtpiUKN.','20110831185526',40,'Faustino','Ignacio','IRB','ignacio.faustino@irbbarcelona.org',NULL,65),(435,'santi','$1$$wJmnJO/pAgGtNFhLhqVuU.','20110908114430',40,'Villalba','Santi','BSC','sdvillal@gmaiil.com',NULL,65),(444,'pau','$1$$JRQlSJ7VYo1FK1hdST/600','20110913103252',40,'Andrio','Pau','BSC','pau.andrio@bsc.es',NULL,65),(462,'john','$1$$mbeRRwxFUHiKVptI/qle90','20110921115324',40,' kerck','John S','Hamburg University','gor63@hotmail.de',NULL,54),(467,'athi','$1$$K0II8VUGQ6AWHAI5xYmQl1','20110926101900',40,'Naganathan','Athi Narayanan','BSC','anarayanan@mmb.pcb.ub.es',NULL,65),(471,'rc81','$1$$gEjyavALVDjiSHxrTw5xx1','20110926185209',40,'Chaudhuri','Rima','IRB','rima.chaudhuei@irbbarcelona.org',NULL,65),(479,'rimach','$1$$RCDoteWmS/z7jHcBc4QHN/','20111003123528',40,'Chaudhuri','Rima','IRB','rima.chaudhuri@irbbarcelona.org',NULL,65),(481,'rimachau','$1$$/NFAMiI9AajFJ59cxMAdl1','20111003124137',40,'chau','chau','irb','rima.chaudhuri@gmail.com',NULL,65),(483,'rima','$1$$BmMOT3LSSKM3lKCLRe820.','20111003150455',40,'Project','Rima','IRB','adam@mmb.pcb.ub.es',NULL,65),(484,'janesh','$1$$yejU0RVJyImU5pnobodZ9/','20111004201403',40,'Kumar','Janesh','NICHD,NIH','kumarjan@mail.nih.gov',NULL,225),(485,'mmarva','$1$$DPlulZYRNZwoKwgDh8fI6.','20111006081624',40,'Martinez','Maria','IGM','mmarva@unileon.es',NULL,65),(487,'coliver','$1$$IsxqVfPl6.TWASUqJgFIj.','20111006230408',40,'ms','cristine oliver','craighospital','oliverc@craighospital.org',NULL,225),(497,'Edivaldo','$1$$dFcWOh.3PrUMF/RIml6oU.','20111015173943',40,'Sousa','Edivaldo','Evandro Chagas Institute','edivaldojunior@iec.pa.gov.br',NULL,29),(498,'Irene80','$1$$yVK8VEqg3rERKicpL4Fn60','20111015212620',40,'Righetto','Irene','UniversitÃ  degli Studi di Padova','irene.righetto@gmail.com',NULL,106),(501,'alex2000','$1$$xY7XptE/rDHaL6/PSATbD0','20111016192832',40,'Pushkarchuk','Alexander','Inst. of Physical-Organic Chemistry of Nation','alexp51@bk.ru',NULL,34),(502,'Fabianoreis','$1$$MUvOEfel0YI97NwMpArJU.','20111019162150',40,'Silva','Fabiano','Evandro Chagas','fabianoreis@ufpa.br',NULL,29),(504,'aalibes','$1$$2b8bdjqU3tl9bWXimyBiq0','20111019172450',40,'Alibes','Andreu','IRB','andreu.alibes@irbbarcelona.org',NULL,65),(507,'momino80','$1$$yVK8VEqg3rERKicpL4Fn60','20111023164004',40,'Righetto','Irene','UniversitÃ  degli Studi di Padova','irene.righetto@gmail.com',NULL,106),(508,'auguin','$1$$h7c/Lrz1cMT/Pfh6oJlhT1','20111023205919',40,'Auguin','Daniel','UniversitÃ© d\\\'OrlÃ©ans','auguin@univ_orleans.fr',NULL,72),(522,'Robbie8','$1$$ZakRI/OZQG9H8BDK1KZO./','20111107113126',40,'Mackenzie','Robbie','University of Nottingham','paxrm@nottingham.ac.uk',NULL,245),(525,'fabianosilva','$1$$fXqN27Vm8pWh0xNBYwS6W1','20111109163659',40,'Fabiano','Fabiano','instituto evandro chagas','fabianobiologico@iec.gov.br',NULL,29),(530,'pauNou','$1$$c0dGkr52wRQDt6SBXvfj7/','20111115142124',40,'Pau','pau','pau','gggg@mail.com',NULL,65),(533,'laurap','$1$$LZ9g3q2CTWUqSJMeEwAXF1','20111118131019',40,'Perez Cano','Laura','BSC-CNS','laura.perez@bsc.es',NULL,65),(534,'janeshdubey','$1$$zuvaQkOvEQA1uiGdszzbq/','20111118161121',40,'Kumar','Janesh','NICHD,NIH','janeshdubey@gmail.com',NULL,225),(537,'zh1987hs','$1$$nafwwzwvGdu45O6edNLto/','20111120091259',40,'harry','hao zhou','dalian university of technology','zh1987hs@sina.com',NULL,45),(566,'bharat46010','$1$$c1cftt5q6Frbyv4gPPBO50','20120103032028',40,'Gupta','bharat','Pusan National University','bharat.85.monu@gmail.com',NULL,117),(572,'test','$1$$whuMjZj.HMFoaTaZRRtkO0','20120104085148',40,'test','test','UB','test@test',NULL,65),(579,'vishwayogi','$1$$odPkxB3P097DByqDBcqc/.','20120106065948',40,'BHANDARE','VISHWAMBHAR','PONDICHERRY UNIVERSITY, PONDICHERRY ','vishwayogi@gmail.com',NULL,101),(584,'Oliviero','$1$$c/FZqkasNEj99JdAayp84.','20120110161846',40,'Oliviero','Carugo','Vienna University','oliviero.carugo@univie.ac.at',NULL,13),(610,'chikvaidze','$1$$mi6gEobN35CTIdk6AWEBC1','20120118235839',40,'Chikvaidze','Mari','Heidelberg University','chikvaidze@gmail.com',NULL,54),(697,'nadine','$1$$WVrRLGVjWF7MAaFmpB0vp/','20120127175107',40,'utz','nadine','irb barcelona','nadine@mmb.pcb.ub.es',NULL,65),(708,'shahul','$1$$xDOeFVZJh5YGqNuVZAn3N.','20120206184635',40,'hameed','shahul','IISc','shahul@mbu.iisc.ernet.in',NULL,101),(709,'lee','$1$$D18c4Q9tloinxNuhoZz5p/','20120206202816',40,'lee','shahul','Indian institute of science','shahul_lee@yahoo.com',NULL,101),(718,'alfons','$1$$zLtHTrkZGfQtg6NIs.rQl1','20120208233813',40,'Nonell-Canals','Alfons','Mind the Byte, S.L.','alfons@mindthebyte.com',NULL,65),(719,'jcarneiro','$1$$VW19/RoyTCucMIxzFgVLO/','20120210130233',40,'JoÃ£o','Carneiro','IPATIMUP','jcarneiro@ipatimup.pt',NULL,177),(720,'khaledtumbi','$1$$SvKHI935eCxhnUcfyoqlU/','20120211162812',40,'Tumbi','Muhammad Khaled ','NIPER S.A.S Nagar','khaledtumbi@gmail.com',NULL,101),(738,'gelpi3','$1$$Jp1ivCtJtklUtLH3X1rFt.','20120214125607',40,'Test Gelpi','JL','UB','jlgelpi@gmail.com',NULL,65),(745,'John kerck','$1$$mbeRRwxFUHiKVptI/qle90','20120220003516',40,'Kerck','John','Hamburg University','gor63@hotmail.de',NULL,54),(767,'bronaldo','$1$$/steKAquCdPyrH5sQ8L/p1','20120222184549',40,'brogi','simone','university of siena','brogi32@unisi.it',NULL,106),(783,'demo','$1$$PM5UEKvvaaDRhCM3OhM1E0','20120224115016',40,'Demo','MDWeb ','IRB-INB-MMB','mdweb@mmb.pcb.ub.es',NULL,65),(784,'mitun84','$1$$tcleBmFyOfG3VA4U9Doak.','20120225203555',40,'CHAKRABORTY','MITUN','INDIAN INSTITUTE OF TECHNOLOGY GUWAHATI','mitun@iitg.ernet.in',NULL,101),(795,'fanani.mz','$1$$4odIsNnqqZeZyZX5pybQ51','20120229130331',40,'Much Zaenal Fanani','M. Z. Fanani','Institute of Tropical Disease Airlangga Unive','fanani.mz@itd.unair.ac.id',NULL,98),(796,'casianalexandru','$1$$Eo4qXkux8.J7lAsDHWBhX0','20120229220709',40,'Casian','Alexandru','UniversitÃ  degli studi di Siena','sagapo2003@yahoo.com',NULL,106),(797,'fanani','$1$$4odIsNnqqZeZyZX5pybQ51','20120301121113',40,'Fanani','Much Z','Institute of Tropical Disease Airlangga Unive','fanani.mz@itd.unair.ac.id',NULL,98),(798,'rcbraga','$1$$cqFVLFbVj2VOjwsPyhSQ4.','20120301151204',40,'Braga','Rodolpho','Pharmacy - Federal University of Goias','rcbraga@gmail.com',NULL,29);
/*!40000 ALTER TABLE `users` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Final view structure for view `WSParamMDWeb`
--

/*!50001 DROP TABLE `WSParamMDWeb`*/;
/*!50001 DROP VIEW IF EXISTS `WSParamMDWeb`*/;
/*!50001 CREATE ALGORITHM=UNDEFINED */
/*!50013 DEFINER=`gelpi`@`%` SQL SECURITY DEFINER */
/*!50001 VIEW `MDWeb`.`WSParamMDWeb` AS select distinct `op`.`idOperacio` AS `idOperacio`,`p`.`articleName` AS `articleName`,`p`.`type` AS `type`,`o`.`objectName` AS `objectName` from (((`MobyLiteDB`.`Parameter` `p` join `MobyLiteDB`.`Service` `s`) join `MobyLiteDB`.`Ontology` `o`) join `MDWeb`.`operacions` `op`) where ((`op`.`WS` = `s`.`name`) and (`p`.`idService` = `s`.`idService`) and (`p`.`Ontology_objectId` = `o`.`objectId`)) order by `op`.`idOperacio` */;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2012-03-02 10:46:20
