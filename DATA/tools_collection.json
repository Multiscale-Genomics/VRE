{  
   "_id":"dnadyn",
   "name":"MC-DNA",
   "title":"MC DNA Dynamics",
   "short_description":"MC-DNA is a coarse-grained DNA model in which the internal dynamics are described with helical parameters.",
   "long_description":"MC-DNA is a tool to rapidly create static and dynamic B-DNA conformations of a sequence of interest. With the use of a Monte Carlo algorithm this tool runs up to 50x faster than conventional Molecular Dynamics providing similar accuracy. MC-DNA provides a three-dimensional all-atom representation of the DNA structure with the underlying sequence of interest. The tool can be set up to create either a DNA structure in equilibrium ground state conformation, or a trajectory of a selected amount of snapshots of the sequence of interest. To provide a more in-depth analysis, both outputs can be feed into the analysys tool called NAflex.",
   "owner":{  
      "institution":"IRB",
      "author":"Jürgen Walther",
      "contact":"juergen.walther@irbbarcelona.org",
      "url":"http://mmb.pcb.ub.es/www/"
   },
   "status":1,
   "external":true,
   "keywords":[  
      "dna",
      "dynamics",
      "modeling",
      "rna",
      "sequence",
      "structure"
   ],
   "keywords_tool":[  
      "DNA modeling",
      "coarse-grain",
      "nuclei acid NA"
   ],
   "infrastructure":{  
      "memory":4,
      "cpus":1,
      "executable":"/home/MuG/dnadyn_wf.py",
      "clouds":{  
         "mug-irb":{  
            "launcher":"SGE",
            "queue":"naFlex.q",
            "default_cloud":true
         }
      }
   },
   "input_files":[  
      {  
         "name":"sequence",
         "description":"DNA sequence",
         "help":"DNA sequence help",
         "file_type":[  
            "TXT"
         ],
         "data_type":[  
            "sequence_dna"
         ],
         "required":true,
         "allow_multiple":false
      }
   ],
   "input_files_combinations":[  
      {  
         "description":"Build DNA structure from sequence",
         "input_files":[  
            "sequence"
         ]
      }
   ],
   "input_files_combinations_internal":[  
      [  
         {  
            "sequence_dna":1
         }
      ]
   ],
   "arguments":[  
      {  
         "name":"operations",
         "description":"Operations",
         "help":"Type of model to be created. Select the operation you want to execute",
         "type":"enum_multiple",
         "enum_items":{  
            "name":[  
               "createTrajectory",
               "createStructure"
            ],
            "description":[  
               "Create Trajectory",
               "Create Structure"
            ]
         },
         "required":true,
         "default":""
      },
      {  
         "name":"createTrajectory:numStruct",
         "description":"Number of structures",
         "help":"bla bla",
         "type":"integer",
         "minimum":1,
         "maximum":500,
         "required":true,
         "default":"100"
      }
   ],
   "control_file":".results.json",
   "output_files":[  
      {  
         "name":"PDB_dna_structure",
         "required":false,
         "allow_multiple":false,
         "file":{  
            "file_type":"PDB",
            "data_type":"na_structure",
            "compressed":"null",
            "meta_data":{  
               "description":"Equilibrium structure",
               "tool":"dnadyn",
               "visible":true
            }
         }
      },
      {  
         "name":"dna_trajectory_structure",
         "required":false,
         "allow_multiple":false,
         "file":{  
            "file_type":"PDB",
            "data_type":"na_structure",
            "compressed":"null",
            "meta_data":{  
               "description":"Final DNA structure",
               "tool":"dnadyn",
               "visible":true
            }
         }
      },
      {  
         "name":"dna_trajectory",
         "required":false,
         "allow_multiple":false,
         "file":{  
            "file_type":"DCD",
            "data_type":"na_traj_coords",
            "compressed":"null",
            "meta_data":{  
               "description":"DNA trajectory",
               "tool":"dnadyn",
               "visible":true
            }
         }
      },
      {  
         "name":"dna_top",
         "required":false,
         "allow_multiple":false,
         "file":{  
            "file_type":"PARMTOP",
            "data_type":"na_traj_top",
            "compressed":"null",
            "meta_data":{  
               "description":"DNA trajectory",
               "tool":"dnadyn",
               "visible":true
            }
         }
      },
      {  
         "name":"summary",
         "required":true,
         "allow_multiple":false,
         "custom_visualizer":true,
         "file":{  
            "file_type":"TAR",
            "data_type":"tool_statistics",
            "compressed":"gzip",
            "meta_data":{  
               "description":"dnadyn summary plots",
               "tool":"dnadyn",
               "visible":false
            }
         }
      }
   ]
}{  
   "_id":"wget",
   "title":"Remote file retrieving from URLs",
   "name":"Get remote file",
   "short_description":"Implementation of a the remote file retriever WGET.",
   "url":"https://www.gnu.org/software/wget/",
   "owner":{  
      "institution":"Barcelona Supercomputing Center",
      "author":"Laia Codo",
      "contact":"laia.codo@bsc.es",
      "url":"",
      "user":"laia.codo@bsc.es"
   },
   "external":false,
   "keywords":[  

   ],
   "infrastructure":{  
      "memory":"",
      "cpus":1,
      "executable":"/orozco/services/MuG/apps/internalTools/wget/wget.sh",
      "clouds":{  
         "mug-bsc":{  
            "launcher":"SGE",
            "queue":"wfs.q"
         },
         "mug-irb":{  
            "launcher":"SGE",
            "queue":"wfs.q"
         }
      }
   },
   "input_files":[  

   ],
   "arguments":[  
      {  
         "name":"url",
         "description":"URL of the file to be downloaded",
         "help":"URL",
         "type":"string",
         "required":true,
         "allow_multiple":true
      },
      {  
         "name":"output",
         "description":"Name of the output file",
         "help":"Name of the output file",
         "type":"string",
         "allow_multiple":false,
         "default":""
      },
      {  
         "name":"working_dir",
         "description":"Temporal dir for samtools",
         "help":"",
         "type":"string",
         "allow_multiple":false,
         "default":""
      }
   ],
   "control_file":".summary.json",
   "output_files":[  
      {  
         "name":"file",
         "required":true,
         "allow_multiple":false,
         "file_type":"",
         "data_type":"",
         "file":{  
            "meta_data":{  
               "validated":false,
               "description":"Downloaded file",
               "tool":"wget",
               "visible":true
            }
         }
      }
   ]
}{  
   "_id":"pydockdna",
   "name":"pyDockDNA",
   "title":"Protein-DNA docking",
   "short_description":"PyDockDNA is a tool for the structural prediction of protein-DNA interactions",
   "long_description":"Given the 3D coordinates of two interacting molecular partners (protein or DNA), pyDockDNA returns the best rigid-body docking orientations generated by FTDock and evaluated by pyDockDNA scoring function, which includes electrostatics energy and limited van der Waals contribution.",
   "owner":{  
      "institution":"BSC",
      "author":"Brian Jiménez-García",
      "contact":"brian.jimenez@bsc.es",
      "url":"https://life.bsc.es/pid/pidweb/default/tools",
      "user":"bjimenez@bsc.es",
      "license":"free_for_academics"
   },
   "status":1,
   "external":true,
   "has_custom_viewer":true,
   "keywords":[  
      "protein",
      "dna",
      "structure",
      "interaction"
   ],
   "keywords_tool":[  
      "protein DNA docking",
      "FTDock",
      "DNA scoring function",
      "amber force-field"
   ],
   "infrastructure":{  
      "memory":4,
      "cpus":4,
      "executable":"/home/user/bin/mug/pydockdna",
      "clouds":{  
         "mug-bsc":{  
            "launcher":"PMES",
            "workflowType":"Single",
            "minimumVMs":1,
            "initialVMs":1,
            "imageName":"uuid_pydockdna_51"
         },
         "mug-irb":{  
            "launcher":"SGE",
            "queue":"pydock.q",
            "default_cloud":true
         }
      }
   },
   "input_files":[  
      {  
         "name":"receptor",
         "description":"Receptor PDB structure",
         "help":"Select the input receptor",
         "file_type":[  
            "PDB"
         ],
         "data_type":[  
            "prot_structure",
            "prot_prot_structure",
            "prot_dna_structure"
         ],
         "required":true,
         "allow_multiple":false
      },
      {  
         "name":"ligand",
         "description":"Ligand PDB structure",
         "help":"Select the input ligand",
         "file_type":[  
            "PDB"
         ],
         "data_type":[  
            "prot_structure",
            "na_structure"
         ],
         "required":true,
         "allow_multiple":false
      }
   ],
   "input_files_combinations":[  
      {  
         "description":"Docking protein - DNA",
         "input_files":[  
            "receptor",
            "ligand"
         ]
      }
   ],
   "input_files_combinations_internal":[  
      [  
         {  
            "prot_structure":1
         },
         {  
            "na_structure":1
         }
      ],
      [  
         {  
            "prot_prot_structure":1
         },
         {  
            "na_structure":1
         }
      ],
      [  
         {  
            "prot_dna_structure":1
         },
         {  
            "prot_structure":1
         }
      ],
      [  
         {  
            "prot_dna_structure":1
         },
         {  
            "na_structure":1
         }
      ]
   ],
   "arguments":[  
      {  
         "name":"scoring",
         "description":"Available energetic scoring functions",
         "help":"pyDockDNA is able to use different scoring functions in the step of re-scoring the generated docking poses",
         "type":"enum",
         "enum_items":{  
            "description":[  
               "pyDock-DNA"
            ],
            "name":[  
               "dnascore"
            ]
         },
         "required":true,
         "default":[  
            "dockser"
         ]
      },
      {  
         "name":"models",
         "description":"Number of structures to model",
         "help":"The number of generated models by this tool",
         "type":"enum",
         "enum_items":{  
            "name":[  
               "1",
               "5",
               "10",
               "50"
            ],
            "description":[  
               "1",
               "5",
               "10",
               "50"
            ]
         },
         "required":true,
         "default":[  
            "10"
         ]
      }
   ],
   "output_files":[  
      {  
         "name":"energy_table",
         "required":true,
         "allow_multiple":false,
         "file":{  
            "file_type":"CSV",
            "data_type":"docking_ranking",
            "compressed":"null",
            "meta_data":{  
               "description":"Ranking of docking poses",
               "tool":"pydockdna",
               "visible":true
            }
         }
      },
      {  
         "name":"top_structures",
         "required":true,
         "allow_multiple":false,
         "file":{  
            "file_type":"PDB",
            "data_type":"prot_dna_structure",
            "compressed":"null",
            "meta_data":{  
               "description":"Top 10 predictions",
               "tool":"pydockdna",
               "visible":true
            }
         }
      },
      {  
         "name":"top10",
         "required":true,
         "allow_multiple":true,
         "file":{  
            "file_type":"PDB",
            "data_type":"prot_dna_structure",
            "compressed":"null",
            "meta_data":{  
               "description":"Top10 predicted structures",
               "tool":"pydockdna",
               "visible":true
            }
         }
      },
      {  
         "name":"results",
         "required":true,
         "allow_multiple":false,
         "file":{  
            "file_type":"TAR",
            "data_type":"tool_statistics",
            "compressed":"gzip",
            "meta_data":{  
               "description":"Compressed results of the tool",
               "tool":"pydockdna",
               "visible":false
            }
         }
      }
   ]
}{  
   "_id":"process_chipseq",
   "name":"Process ChIP-seq",
   "title":"ChIP-seq Analysis",
   "short_description":"Align ChIP-seq data, filtering with BioBamBam and Peak Calling using MACS2. For full details about all parameters please consult the MACS2 documentation at https://github.com/taoliu/MACS",
   "long_description":"Pipeline for processing ChIP-seq sequence reads to identify regions of DNA-protein interactions. Sequences are aligned to the genomic sequence using BWA, BioBamBam2 is used to filter out experimental artifacts and MACS2 is used for the analysis of the alignments to identify regions of DNA-protein interaction.",
   "owner":{  
      "institution":"EMBL-EBI",
      "author":"Mark McDowall",
      "contact":"mcdowall@ebi.ac.uk",
      "user":"",
      "url":"https://github.com/Multiscale-Genomics/mg-process-fastq"
   },
   "status":1,
   "external":true,
   "has_custom_viewer":false,
   "keywords":[  
      "dna",
      "chromatin",
      "epigenetics",
      "next gen seq",
      "sequence"
   ],
   "keywords_tool":[  
      "dna-protein interaction"
   ],
   "infrastructure":{  
      "memory":12,
      "cpus":4,
      "executable":"/usr/local/code/mg-process-fastq/process_chipseq.py",
      "clouds":{  
         "mug-irb":{  
            "launcher":"PMES",
            "workflowType":"COMPSs",
            "initialVMs":1,
            "minimumVMs":1,
            "maximumVMs":1,
            "imageName":"uuid_vmgenericmgtoolapi_24",
            "default_cloud":false
         }
      }
   },
   "input_files":[  
      {  
         "name":"loc",
         "description":"Sequence read file",
         "help":"FASTQ file",
         "file_type":[  
            "FASTQ"
         ],
         "data_type":[  
            "data_chip_seq"
         ],
         "required":true,
         "allow_multiple":false
      },
      {  
         "name":"fastq2",
         "description":"Paired End Sequence read file",
         "help":"Matching paired end FASTQ file",
         "file_type":[  
            "FASTQ"
         ],
         "data_type":[  
            "data_chip_seq"
         ],
         "required":false,
         "allow_multiple":false
      },
      {  
         "name":"bg_loc",
         "description":"Background Sequence read file",
         "help":"FASTQ sequence read file containing background for the first FASTQ file",
         "file_type":[  
            "FASTQ"
         ],
         "data_type":[  
            "data_chip_seq"
         ],
         "required":false,
         "allow_multiple":false
      },
      {  
         "name":"fastq2_bg",
         "description":"Paired End Background Sequence read file",
         "help":"FASTQ sequence read file containing background for the paired end FASTQ file",
         "file_type":[  
            "FASTQ"
         ],
         "data_type":[  
            "data_chip_seq"
         ],
         "required":false,
         "allow_multiple":false
      },
      {  
         "name":"genome",
         "description":"Reference sequence of a custom genome assembly",
         "help":"FASTA file  of the custom genome assembly mapping the given Chip-seq reads. Only required if reads do not belong to any of the reference genomes offered within the platform",
         "file_type":[  
            "FASTA"
         ],
         "data_type":[  
            "sequence_genomic",
            "sequence_dna"
         ],
         "required":true,
         "allow_multiple":false
      },
      {  
         "name":"index",
         "description":"BWA indexes of a custom genome assembly",
         "help":"TAR containing BWA index files of the custom genome assembly. It can be uploaded or generated using the 'Proces Genome'  tool.",
         "file_type":[  
            "TAR"
         ],
         "data_type":[  
            "sequence_mapping_index_bwa"
         ],
         "required":true,
         "allow_multiple":false
      }
   ],
   "input_files_public_dir":[  
      {  
         "name":"genome_public",
         "description":"Reference sequence of the genome assembly",
         "help":"FASTA file  of the genome assembly mapping the given Chip-seq reads. If your assembly is not listed, you can use your own genome here by building its indexes with the 'Process Genome' tool.",
         "type":"enum",
         "enum_items":{  
            "name":[  
               "refGenomes/R64-1-1/R64-1-1.fa",
               "refGenomes/hg19/hg19.fa",
               "refGenomes/hg38/hg38.fa",
               "refGenomes/r5.01/r5.01.fa",
               "refGenomes/dm6/dm6.fa",
               "refGenomes/danRer11/danRer11.fa",
               "refGenomes/mm10/mm10.fa",
               "refGenomes/mm9/mm9.fa",
               "refGenomes/xenTro9/xenTro9.fa",
               "refGenomes/spombe/spombe.fa"
            ],
            "description":[  
               "Saccharomyces cerevisiae (R64-1-1)",
               "Homo Sapiens (hg19 / GRCh37)",
               "Homo Sapiens (hg38 / GRCh38)",
               "Drosophila Melanogaster (r5.01 / dm3)",
               "Drosophila Melanogaster (BDGP r6 + ISO1 MT / dm6)",
               "Zebra Fish (GRCz11 / danRer11)",
               "Mouse (GRCm38 / mm10)",
               "Mouse (NCBI37 / mm9)",
               "Xenopus tropicalis (v9.1 / xenTro9)",
               "Schizosaccharomyces pombe (ASM294v2)"
            ]
         },
         "file_type":[  
            "FASTA"
         ],
         "data_type":[  
            "sequence_genomic"
         ],
         "required":false,
         "allow_multiple":false
      },
      {  
         "name":"index_public",
         "description":"BWA indexes of the genome assembly",
         "help":"BWA index files of the genome assembly.",
         "type":"enum",
         "enum_items":{  
            "name":[  
               "refGenomes/R64-1-1/BWA/bwa.tar.gz",
               "refGenomes/hg19/BWA/bwa.tar.gz",
               "refGenomes/hg38/BWA/bwa.tar.gz",
               "refGenomes/r5.01/BWA/bwa.tar.gz",
               "refGenomes/dm6/BWA/bwa.tar.gz",
               "refGenomes/danRer11/BWA/bwa.tar.gz",
               "refGenomes/mm10/BWA/bwa.tar.gz",
               "refGenomes/mm9/BWA/bwa.tar.gz",
               "refGenomes/xenTro9/BWA/bwa.tar.gz",
               "refGenomes/spombe/BWA/bwa.tar.gz"
            ],
            "description":[  
               "Saccharomyces cerevisiae (R64-1-1)",
               "Homo Sapiens (hg19 / GRCh37)",
               "Homo Sapiens (hg38 / GRCh38)",
               "Drosophila Melanogaster (r5.01 / dm3)",
               "Drosophila Melanogaster (BDGP r6 + ISO1 MT / dm6)",
               "Zebra Fish (GRCz11 / danRer11)",
               "Mouse (GRCm38 / mm10)",
               "Mouse (NCBI37 / mm9)",
               "Xenopus tropicalis (v9.1 / xenTro9)",
               "Schizosaccharomyces pombe (ASM294v2)"
            ]
         },
         "file_type":[  
            "TAR"
         ],
         "data_type":[  
            "sequence_mapping_index_bwa"
         ],
         "required":false,
         "allow_multiple":false
      }
   ],
   "input_files_combinations":[  
      {  
         "description":"Process ChiP-seq reads (single or paired)",
         "input_files":[  
            "loc",
            "fastq2",
            "fastq2_bg",
            "bg_loc"
         ],
         "input_files_public":[  
            "genome_public",
            "index_public"
         ]
      },
      {  
         "description":"Process ChiP-seq reads (single or paired) for a custom reference genome",
         "input_files":[  
            "loc",
            "fastq2",
            "fastq2_bg",
            "bg_loc",
            "genome",
            "index"
         ]
      }
   ],
   "input_files_combinations_internal":[  
      [  
         {  
            "data_chip_seq":"-"
         },
         {  
            "data_chip_seq":"-"
         },
         {  
            "data_chip_seq":"-"
         },
         {  
            "data_chip_seq":"-"
         },
         {  
            "sequence_genomic":"-"
         },
         {  
            "sequence_mapping_index_bwa":"-"
         }
      ]
   ],
   "arguments":[  
      {  
         "name":"macs_gsize_param",
         "description":"Mappable genome size",
         "help":"Mappable genome size",
         "type":"string",
         "required":false,
         "default":"null"
      },
      {  
         "name":"macs_tsize_param",
         "description":"Size of sequencing tags",
         "help":"Size of sequencing tags",
         "type":"string",
         "required":false,
         "default":"null"
      },
      {  
         "name":"macs_bw_param",
         "description":"Band width",
         "help":"Band width for scanning the genome when model building",
         "type":"string",
         "required":false,
         "default":"null"
      },
      {  
         "name":"macs_qvalue_param",
         "description":"Minimum FDR",
         "help":"Minimum FDR cutoff for calling significant regions",
         "type":"string",
         "required":false,
         "default":"null"
      },
      {  
         "name":"macs_pvalue_param",
         "description":"p-value cutoff",
         "help":"p-value cutoff",
         "type":"string",
         "required":false,
         "default":"null"
      },
      {  
         "name":"macs_mfold_param",
         "description":"m-fold range",
         "help":"Region to select within an m-fold range of high-confidence enrichment ratio against the background for model building",
         "type":"string",
         "required":false,
         "default":"null"
      },
      {  
         "name":"macs_nolambda_param",
         "description":"Use background lambda",
         "help":"Use background lambda instead of local",
         "type":"boolean",
         "required":false,
         "default":false
      },
      {  
         "name":"macs_slocal_param",
         "description":"Small local regions",
         "help":"Small local regions",
         "type":"string",
         "required":false,
         "default":""
      },
      {  
         "name":"macs_llocal_param",
         "description":"Large local regions",
         "help":"Large local regions",
         "type":"string",
         "required":false,
         "default":""
      },
      {  
         "name":"macs_fix-bimodal_param",
         "description":"Fix Bimodal",
         "help":"Turn on auto paired model process",
         "type":"boolean",
         "required":false,
         "default":"false"
      },
      {  
         "name":"macs_nomodel_param",
         "description":"No Model",
         "help":"Negate building shifting models",
         "type":"boolean",
         "required":false,
         "default":"false"
      },
      {  
         "name":"macs_extsize_param",
         "description":"Extend Reads",
         "help":"Used with nomodel to expand read size to fixed-size fragments",
         "type":"string",
         "required":false,
         "default":"null"
      },
      {  
         "name":"macs_shift_param",
         "description":"Arbitary bp shift",
         "help":"When using nomodel this value is used to adjust the cutting ends before applying the extsize",
         "type":"string",
         "required":false,
         "default":"null"
      },
      {  
         "name":"macs_keep-dups_param",
         "description":"Control counting duplicate tags",
         "help":"Controls for counting of duplicate tags",
         "type":"string",
         "required":false,
         "default":"null"
      },
      {  
         "name":"macs_broad_param",
         "description":"Enrichment region locations",
         "help":"Control the placing highly eriched regions into a broad region with loose cutoffs",
         "type":"boolean",
         "required":false,
         "default":"false"
      },
      {  
         "name":"macs_broad-cutoff_param",
         "description":"Cutoff for broad region",
         "help":"Cutoff for broad region, requires macs_keep-dups_param to be set",
         "type":"string",
         "required":false,
         "default":"null"
      },
      {  
         "name":"macs_to-large_param",
         "description":"Scale up small datasets",
         "help":"Scale up small datasets",
         "type":"boolean",
         "required":false,
         "default":"false"
      },
      {  
         "name":"macs_down-sample_param",
         "description":"Downsize large datasets",
         "help":"Random sampling to to downsize the dataset",
         "type":"boolean",
         "required":false,
         "default":"false"
      },
      {  
         "name":"macs_bdg_param",
         "description":"Store scores",
         "help":"Store the fragment pileup and scores in bedGraph files",
         "type":"string",
         "required":false,
         "default":"null"
      },
      {  
         "name":"macs_call-summits_param",
         "description":"Call summits",
         "help":"Reanalyse the shape of the profile to deconvolve subpeaks",
         "type":"string",
         "required":false,
         "default":"null"
      }
   ],
   "output_files":[  
      {  
         "name":"bam",
         "required":true,
         "allow_multiple":false,
         "file":{  
            "file_type":"BAM",
            "meta_data":{  
               "visible":true,
               "tool":"process_chipseq",
               "description":"Aligned sequences"
            },
            "file_path":"macs2.bam",
            "data_type":"data_chip_seq",
            "compressed":"null"
         }
      },
      {  
         "name":"bai",
         "required":true,
         "allow_multiple":false,
         "file":{  
            "file_type":"BAI",
            "meta_data":{  
               "visible":false,
               "tool":"process_chipseq",
               "description":"Aligned sequences index"
            },
            "file_path":"macs2.bam.bai",
            "data_type":"data_chip_seq",
            "compressed":"null"
         }
      },
      {  
         "name":"filtered",
         "required":true,
         "allow_multiple":false,
         "file":{  
            "file_type":"BAM",
            "meta_data":{  
               "visible":true,
               "tool":"process_chipseq",
               "description":"Filtered aligned sequences"
            },
            "file_path":"macs2.filtered.bam",
            "data_type":"data_chip_seq",
            "compressed":"null"
         }
      },
      {  
         "name":"filtered_bai",
         "required":true,
         "allow_multiple":false,
         "file":{  
            "file_type":"BAI",
            "meta_data":{  
               "visible":false,
               "tool":"process_chipseq",
               "description":"Aligned sequences index"
            },
            "file_path":"macs2.filtered.bam.bai",
            "data_type":"data_chip_seq",
            "compressed":"null"
         }
      },
      {  
         "name":"bam_bg",
         "required":false,
         "allow_multiple":false,
         "file":{  
            "file_type":"BAM",
            "meta_data":{  
               "visible":true,
               "tool":"process_chipseq",
               "description":"Background aligned sequences"
            },
            "file_path":"macs2_bg.bam",
            "data_type":"data_chip_seq",
            "compressed":"null"
         }
      },
      {  
         "name":"bai_bg",
         "required":true,
         "allow_multiple":false,
         "file":{  
            "file_type":"BAI",
            "meta_data":{  
               "visible":false,
               "tool":"process_chipseq",
               "description":"Aligned sequences index"
            },
            "file_path":"macs2_bg.bam.bai",
            "data_type":"data_chip_seq",
            "compressed":"null"
         }
      },
      {  
         "name":"filtered_bg",
         "required":false,
         "allow_multiple":false,
         "file":{  
            "file_type":"BAM",
            "meta_data":{  
               "visible":true,
               "tool":"process_chipseq",
               "description":"Filtered background aligned sequences"
            },
            "file_path":"macs2_bg.filtered.bam",
            "data_type":"data_chip_seq",
            "compressed":"null"
         }
      },
      {  
         "name":"filtered_bai_bg",
         "required":true,
         "allow_multiple":false,
         "file":{  
            "file_type":"BAI",
            "meta_data":{  
               "visible":false,
               "tool":"process_chipseq",
               "description":"Aligned sequences index"
            },
            "file_path":"macs2_bg.filtered.bam.bai",
            "data_type":"data_chip_seq",
            "compressed":"null"
         }
      },
      {  
         "name":"narrow_peak",
         "required":false,
         "allow_multiple":false,
         "file":{  
            "file_type":"BED",
            "meta_data":{  
               "visible":true,
               "tool":"process_chipseq",
               "description":"Output"
            },
            "file_path":"macs2.filtered_peaks.narrowPeak",
            "data_type":"data_chip_seq",
            "compressed":"null"
         }
      },
      {  
         "name":"summits",
         "required":false,
         "allow_multiple":false,
         "file":{  
            "file_type":"BED",
            "meta_data":{  
               "visible":true,
               "tool":"process_chipseq",
               "description":"Output"
            },
            "file_path":"macs2.filtered_summits.bed",
            "data_type":"data_chip_seq",
            "compressed":"null"
         }
      },
      {  
         "name":"broad_peak",
         "required":false,
         "allow_multiple":false,
         "file":{  
            "file_type":"BED",
            "meta_data":{  
               "visible":true,
               "tool":"process_chipseq",
               "description":"Output"
            },
            "file_path":"macs2.filtered_peaks.broadPeak",
            "data_type":"data_chip_seq",
            "compressed":"null"
         }
      },
      {  
         "name":"gapped_peak",
         "required":false,
         "allow_multiple":false,
         "file":{  
            "file_type":"BED",
            "meta_data":{  
               "visible":true,
               "tool":"process_chipseq",
               "description":"Output"
            },
            "file_path":"macs2.filtered_peaks.gappedPeak",
            "data_type":"data_chip_seq",
            "compressed":"null"
         }
      }
   ]
}{  
   "_id":"tadbit_segment",
   "name":"TADbit segment",
   "title":"TADbit Hi-C segment",
   "short_description":"TADbit Hi-C segment (TADs and compartments).",
   "long_description":"TADbit is a complete Python library to deal with all steps to analyze, model and explore 3C-based data. With TADbit the user can map FASTQ files to obtain raw interaction binned matrices (Hi-C like matrices), normalize and correct interaction matrices, identify adn compare the so-called Topologically Associating Domains (TADs), build 3D models from the interaction matrices, and finally, extract structural properties from the models. TADbit is complemented by TADkit for visualizing 3D models.",
   "owner":{  
      "institution":"CNAG",
      "author":"Francois Serra",
      "contact":"serra.francois@gmail.com",
      "user":"fserra",
      "url":"http://sgt.cnag.cat/3dg/tadbit/"
   },
   "status":1,
   "external":true,
   "keywords":[  
      "dna",
      "chromatin",
      "hi-c",
      "interaction",
      "sequence"
   ],
   "keywords_tool":[  
      "TAD",
      "compartment"
   ],
   "infrastructure":{  
      "memory":4,
      "cpus":12,
      "executable":"/home/pmes/code/mg-process-fastq/tadbit_segment_wrapper.py",
      "clouds":{  
         "mug-irb":{  
            "launcher":"PMES",
            "workflowType":"Single",
            "initialVMs":1,
            "minimumVMs":1,
            "maximumVMs":1,
            "imageName":"uuid_tadbitmgtoolapi_47",
            "default_cloud":false
         }
      }
   },
   "input_files":[  
      {  
         "name":"bamin",
         "description":"TADbit-generated BAM file",
         "help":"path to a TADbit-generated BAM file with filtered reads",
         "file_type":[  
            "BAM"
         ],
         "data_type":[  
            "hic_sequences"
         ],
         "required":true,
         "allow_multiple":false
      },
      {  
         "name":"hic_biases",
         "description":"TADbit-generated PICKLE file",
         "help":"path to a TADbit-generated PICKLE file with HiC biases",
         "file_type":[  
            "PICKLE"
         ],
         "data_type":[  
            "hic_biases"
         ],
         "required":false,
         "allow_multiple":false
      }
   ],
   "input_files_public_dir":[  
      {  
         "name":"refGenomes_folder",
         "description":"Folder where files associated to reference genomes is found",
         "help":"Reference genome Folder",
         "type":"hidden",
         "value":"refGenomes/",
         "file_type":[  
            "TXT"
         ],
         "data_type":[  
            "configuration_file"
         ],
         "required":true,
         "allow_multiple":false
      }
   ],
   "input_files_combinations":[  
      {  
         "description":"Identify TADs and compartments in Hi-C paired Reads",
         "input_files":[  
            "bamin",
            "hic_biases"
         ]
      }
   ],
   "input_files_combinations_internal":[  
      [  
         {  
            "hic_sequences":1
         },
         {  
            "hic_biases":1
         }
      ],
      [  
         {  
            "hic_sequences":1
         }
      ]
   ],
   "arguments":[  
      {  
         "name":"resolution",
         "description":"Resolution of the normalization",
         "help":"Resolution of the normalization.",
         "type":"string",
         "required":true,
         "default":"100000"
      },
      {  
         "name":"chromosome_names",
         "description":"List of chromosomes names",
         "help":"List of chromosomes names separated by spaces",
         "type":"string",
         "required":false,
         "default":""
      },
      {  
         "name":"callers",
         "description":"1 for TAD calling, 2 for compartment calling",
         "help":"1 for TAD calling, 2 for compartment calling",
         "type":"enum_multiple",
         "enum_items":{  
            "name":[  
               "1",
               "2"
            ],
            "description":[  
               "1 - TAD calling",
               "2 - Compartment calling"
            ]
         },
         "required":true,
         "default":[  
            "1"
         ]
      }
   ],
   "output_files":[  
      {  
         "name":"tads_compartments",
         "required":false,
         "allow_multiple":false,
         "file":{  
            "file_type":"TAR",
            "file_path":"tads_compartments.tar.gz",
            "data_type":"tool_statistics",
            "compressed":"gzip",
            "meta_data":{  
               "description":"TADbit HiC tads and compartments stats",
               "tool":"tadbit_segment",
               "visible":true
            }
         }
      }
   ]
}{  
   "_id":"pdiview",
   "name":"3DConsensus",
   "short_description":"Analyse a protein-DNA complex 3D structure to identify interactions and study their impact on specific binding by integrating experimental data on the protein's DNA specificity.",
   "long_description":"Analyse a protein-DNA complex 3D structure to identify interactions and study their impact on specific binding by integrating experimental data on the protein's DNA specificity. 3DConsensus allows the interpretation of experimental data on DNA-binding specificity of a protein through the analysis of a 3D structure of the complex. It calculates from the experimental data a sequence-only consensus, as well as a consensus based on the physical properties of DNA extracting the conformational parameters of the sequence in the protein-DNA complex, as well as the specific interactions that stabilise the complex.",
   "title":"3DConsensus",
   "url":"Analyse a protein-DNA complex 3D structure to identify interactions and study their impact on specific binding by integrating experimental data on the protein's DNA specificity. 3DConsensus allows the interpretation of experimental data on DNA-binding specificity of a protein through the analysis of a 3D structure of the complex. It calculates from the experimental data a sequence-only consensus, as well as a consensus based on the physical properties of DNA extracting the conformational parameters of the sequence in the protein-DNA complex, as well as the specific interactions that stabilise the complex.",
   "owner":{  
      "institution":"University of Nottingham",
      "author":"Marco Pasi",
      "contact":"marco.pasi@ens-cachan.fr",
      "url":"",
      "user":"marco.pasi@nottingham.ac.uk"
   },
   "status":1,
   "external":true,
   "keywords":[  
      "dna",
      "protein",
      "interaction",
      "structure"
   ],
   "keywords_tool":[  
      "protein-dna interactions"
   ],
   "infrastructure":{  
      "memory":4,
      "cpus":1,
      "executable":"/opt/wrappers/pdiview_wf.py",
      "clouds":{  
         "mug-irb":{  
            "launcher":"SGE",
            "queue":"dnashape.q",
            "default_cloud":true
         }
      }
   },
   "input_files":[  
      {  
         "name":"structure",
         "description":"3D structure of the protein-DNA complex in PDB format",
         "help":"The 3D structure of a protein-DNA complex in PDB format will be used to analyse the molecular determinants of specific binding.",
         "file_type":[  
            "PDB"
         ],
         "data_type":[  
            "prot_dna_structure"
         ],
         "required":true,
         "allow_multiple":false
      },
      {  
         "name":"binding_data",
         "description":"Experimental data describing the sequence specificity of the protein",
         "help":"The tab-separated plain-text file must contain on each line a sequence and the corresponding (relative) binding affinity score.",
         "file_type":[  
            "TSV"
         ],
         "data_type":[  
            "prot_dna_specificity"
         ],
         "required":true,
         "allow_multiple":false
      }
   ],
   "input_files_combinations":[  
      {  
         "description":"Analyse protein-DNA specificity data",
         "input_files":[  
            "structure",
            "binding_data"
         ]
      }
   ],
   "input_files_combinations_internal":[  
      [  
         {  
            "prot_dna_structure":1
         },
         {  
            "prot_dna_specificity":1
         }
      ]
   ],
   "arguments":[  
      {  
         "name":"chains",
         "description":"Commma-separated list of chains to be analysed from the PDB",
         "help":"Specify which chains from the PDB file will be analysed; typically the first three chains (A, B and C) indicate the protein and the two strands of DNA.",
         "type":"string",
         "required":false,
         "allow_multiple":false,
         "default":"A,B,C"
      }
   ],
   "control_file":".summary.json",
   "output_files":[  
      {  
         "name":"output.pdb",
         "required":true,
         "allow_multiple":false,
         "file":{  
            "file_type":"PDB",
            "data_type":"prot_dna_structure",
            "compressed":"null",
            "meta_data":{  
               "description":"The processed PDB file used for visualisation.",
               "tool":"pdiview",
               "visible":true
            }
         }
      },
      {  
         "name":"statistics",
         "required":true,
         "allow_multiple":false,
         "file":{  
            "file_type":"TAR",
            "data_type":"tool_statistics",
            "compressed":"gzip",
            "meta_data":{  
               "description":"Detailed output of tool for custom visualisation.",
               "tool":"pdiview",
               "visible":false
            }
         }
      }
   ]
}{  
   "_id":"tadbit_model",
   "name":"TADbit model",
   "title":"TADbit Hi-C 3D modeling",
   "short_description":"TADbit 3D modeling.",
   "long_description":"TADbit is a complete Python library to deal with all steps to analyze, model and explore 3C-based data. With TADbit the user can map FASTQ files to obtain raw interaction binned matrices (Hi-C like matrices), normalize and correct interaction matrices, identify adn compare the so-called Topologically Associating Domains (TADs), build 3D models from the interaction matrices, and finally, extract structural properties from the models. TADbit is complemented by TADkit for visualizing 3D models.",
   "owner":{  
      "institution":"CNAG",
      "author":"Francois Serra",
      "contact":"serra.francois@gmail.com",
      "user":"",
      "url":"http://sgt.cnag.cat/3dg/tadbit/"
   },
   "status":1,
   "external":true,
   "keywords":[  
      "dna",
      "chromatin",
      "hi-c",
      "interaction",
      "sequence"
   ],
   "keywords_tool":[  
      "structural model",
      "3D"
   ],
   "infrastructure":{  
      "memory":4,
      "cpus":12,
      "executable":"/home/pmes/code/mg-process-fastq/tadbit_model_wrapper.py",
      "clouds":{  
         "mug-irb":{  
            "launcher":"PMES",
            "workflowType":"Single",
            "initialVMs":1,
            "minimumVMs":1,
            "maximumVMs":1,
            "imageName":"uuid_tadbitmgtoolapi_47",
            "default_cloud":false
         }
      }
   },
   "input_files":[  
      {  
         "name":"hic_contacts_matrix_norm",
         "description":"HiC contact matrix normalized",
         "help":"path to a tab-separated normalized contact matrix",
         "file_type":[  
            "TXT"
         ],
         "data_type":[  
            "hic_contacts_matrix"
         ],
         "required":true,
         "allow_multiple":false
      }
   ],
   "input_files_combinations":[  
      {  
         "description":"Build 3D models from Hi-C paired Reads ",
         "input_files":[  
            "hic_contacts_matrix_norm",
            "hic_biases"
         ]
      }
   ],
   "input_files_combinations_internal":[  
      [  
         {  
            "hic_contacts_matrix":1
         }
      ]
   ],
   "arguments":[  
      {  
         "name":"resolution",
         "description":"Resolution of the normalization",
         "help":"Resolution of the normalization.",
         "type":"string",
         "required":true,
         "default":"100000"
      },
      {  
         "name":"gen_pos_chrom_name",
         "description":"Chromosome name.",
         "help":"Chromosome name (chromosome name i.e. chr1 or all for full genome)",
         "type":"string",
         "required":true
      },
      {  
         "name":"gen_pos_begin",
         "description":"Genomic position. Begin.",
         "help":"Genomic coordinate from which to start modeling.",
         "type":"integer",
         "required":false
      },
      {  
         "name":"gen_pos_end",
         "description":"Genomic position. End.",
         "help":"Genomic coordinate where to end modeling.",
         "type":"integer",
         "required":false
      },
      {  
         "name":"optimization:num_mod_comp",
         "description":"Number of models to compute.",
         "help":"Number of models to compute for each optimization step.",
         "type":"integer",
         "required":true,
         "default":"50"
      },
      {  
         "name":"optimization:num_mod_keep",
         "description":"Number of models to keep.",
         "help":"Number of models to keep from the total of models computed, for the comparison with original Hi-C matrix.",
         "type":"integer",
         "required":true,
         "default":"20"
      },
      {  
         "name":"optimization:max_dist",
         "description":"Maximum distance.",
         "help":"Range of numbers for optimal maxdist parameter, i.e. 400:1000:100; or just a single number e.g. 800; or a list of numbers e.g. 400 600 800 1000.",
         "type":"string",
         "required":true,
         "default":"400:1000:200"
      },
      {  
         "name":"optimization:upper_bound",
         "description":"Upper bound for Z-scored frequencies of interaction.",
         "help":"Range of numbers for optimal upfreq parameter, i.e. 0:1.2:0.3; or just a single number e.g. 0.8; or a list of numbers e.g. 0.1 0.3 0.5 0.9.",
         "type":"string",
         "required":true,
         "default":"0:1.2:0.3"
      },
      {  
         "name":"optimization:lower_bound",
         "description":"Lower bound for Z-scored frequencies of interaction.",
         "help":"Range of numbers for optimal low parameter, i.e. -1.2:0:0.3; or just a single number e.g. -0.8; or a list of numbers e.g. -0.1 -0.3 -0.5 -0.9.",
         "type":"string",
         "required":true,
         "default":"-1.2:0:0.3"
      },
      {  
         "name":"optimization:cutoff",
         "description":"Cutoff distance to consider an interaction between 2 particles.",
         "help":"Range of numbers for optimal cutoff distance. Cutoff is computed based on the resolution. This cutoff distance is calculated taking as reference the diameter of a modeled particle in the 3D model. i.e. 1.5:2.5:0.5; or just a single number e.g. 2; or a list of numbers e.g. 2 2.5.",
         "type":"string",
         "required":true,
         "default":"2"
      },
      {  
         "name":"generation:num_mod_comp",
         "description":"Number of models to compute.",
         "help":"Number of models to compute for each optimization step.",
         "type":"integer",
         "required":true
      },
      {  
         "name":"generation:num_mod_keep",
         "description":"Number of models to keep.",
         "help":"Number of models to keep from the total of models computed, for the comparison with original Hi-C matrix.",
         "type":"integer",
         "required":true
      },
      {  
         "name":"generation:max_dist",
         "description":"Maximum distance.",
         "help":"Range of numbers for optimal maxdist parameter, i.e. 400:1000:100; or just a single number e.g. 800; or a list of numbers e.g. 400 600 800 1000.",
         "type":"string",
         "required":true
      },
      {  
         "name":"generation:upper_bound",
         "description":"Upper bound for Z-scored frequencies of interaction.",
         "help":"Range of numbers for optimal upfreq parameter, i.e. 0:1.2:0.3; or just a single number e.g. 0.8; or a list of numbers e.g. 0.1 0.3 0.5 0.9.",
         "type":"string",
         "required":true
      },
      {  
         "name":"generation:lower_bound",
         "description":"Lower bound for Z-scored frequencies of interaction.",
         "help":"Range of numbers for optimal low parameter, i.e. -1.2:0:0.3; or just a single number e.g. -0.8; or a list of numbers e.g. -0.1 -0.3 -0.5 -0.9.",
         "type":"string",
         "required":true
      },
      {  
         "name":"generation:cutoff",
         "description":"Cutoff distance to consider an interaction between 2 particles.",
         "help":"Range of numbers for optimal cutoff distance. Cutoff is computed based on the resolution. This cutoff distance is calculated taking as reference the diameter of a modeled particle in the 3D model. i.e. 1.5:2.5:0.5; or just a single number e.g. 2; or a list of numbers e.g. 2 2.5.",
         "type":"string",
         "required":true
      }
   ],
   "output_files":[  
      {  
         "name":"tadkit_models",
         "required":false,
         "allow_multiple":false,
         "file":{  
            "file_type":"JSON",
            "file_path":"tadkit_models.json",
            "data_type":"chromatin_3dmodel_ensemble",
            "compressed":"null",
            "meta_data":{  
               "tool":"tadbit_model",
               "description":"Ensemble of chromatin 3D structures",
               "visible":true
            }
         }
      },
      {  
         "name":"modeling_stats",
         "required":true,
         "allow_multiple":false,
         "file":{  
            "file_type":"TAR",
            "file_path":"model_stats.tar.gz",
            "data_type":"tool_statistics",
            "compressed":"gzip",
            "meta_data":{  
               "description":"TADbit modeling statistics and result files",
               "tool":"tadbit_model",
               "visible":true
            }
         }
      }
   ]
}{  
   "_id":"minimizedStruct",
   "name":"MD Energy Refinement",
   "title":"Structure Energy Refinement using Atomistic Molecular Dynamics",
   "short_description":"Molecular Dynamics workflow to energetically minimize a structure. MD Setup + 100ps free MD. Output last structure from the 100ps.",
   "long_description":"MDWeb is based on well known simulation programs like Amber, NAMD and Gromacs, and a series of preparation and analysis tools, joined together in a common interface.",
   "url":"https://github.com/bioexcel/pymdsetup",
   "owner":{  
      "institution":"IRB",
      "logo":"assets/home/institution.png",
      "author":"Pau Andrio, Adam Hospital ,  Josep Lluis Gelpí",
      "contact":"adam.hospital@irbbarcelona.org",
      "url":"http://mmb.irbbarcelona.org/www/"
   },
   "status":1,
   "external":true,
   "keywords":[  
      "protein",
      "dna",
      "structure",
      "dynamics"
   ],
   "keywords_tool":[  
      "molecular dynamics",
      "setup",
      "minimization"
   ],
   "infrastructure":{  
      "memory":4,
      "cpus":1,
      "executable":"/home/MuG/pymdsetup/pymdsetup_MuG_Wrapper.pl",
      "clouds":{  
         "mug-irb":{  
            "launcher":"SGE",
            "queue":"pymdsetup.q",
            "default_cloud":true
         }
      }
   },
   "input_files":[  
      {  
         "name":"pdb",
         "description":"Input Structure, pdb format",
         "help":"Input PDB structure to be energetically refined",
         "file_type":[  
            "PDB"
         ],
         "data_type":[  
            "structure",
            "prot_structure",
            "prot_dna_structure"
         ],
         "required":true,
         "allow_multiple":false
      }
   ],
   "input_files_combinations":[  
      {  
         "description":"Set up a 3D structure for MD",
         "input_files":[  
            "pdb"
         ]
      }
   ],
   "input_files_combinations_internal":[  
      [  
         {  
            "structure":1
         }
      ],
      [  
         {  
            "prot_structure":1
         }
      ],
      [  
         {  
            "prot_dna_structure":1
         }
      ]
   ],
   "arguments":[  

   ],
   "output_files":[  
      {  
         "name":"refined_structure.pdb",
         "required":true,
         "allow_multiple":false,
         "file":{  
            "file_type":"PDB",
            "taxon_id":0,
            "data_type":"structure",
            "compressed":"null",
            "meta_data":{  
               "description":"Energetically mimimized structure",
               "tool":"minimizedStruct",
               "visible":true
            }
         }
      }
   ]
}{  
   "_id":"BAMval",
   "title":"BAM preprocessing",
   "name":"BAM validation",
   "short_description":"BAM chromosome name standarization, sorting and indexing",
   "url":"http://vre.multiscalegenomics.eu",
   "owner":{  
      "institution":"Barcelona Supercomputing Center",
      "author":"Laia Codo",
      "contact":"laia.codo@bsc.es",
      "url":"",
      "user":"laia.codo@bsc.es"
   },
   "external":false,
   "keywords":[  

   ],
   "infrastructure":{  
      "memory":"",
      "cpus":1,
      "executable":"/orozco/services/MuG/apps/internalTools/BAMval/BAMval.sh",
      "clouds":{  
         "mug-bsc":{  
            "launcher":"SGE",
            "queue":"wfs.q"
         },
         "mug-irb":{  
            "launcher":"SGE",
            "queue":"wfs.q"
         }
      }
   },
   "input_files":[  
      {  
         "name":"bam",
         "description":"BAM file to be validated",
         "help":"",
         "file_type":[  
            "BAM"
         ],
         "data_type":[  
            "data_chip_seq",
            "data_atac_seq",
            "data_mnase_seq ",
            "hic_sequences"
         ],
         "required":true,
         "allow_multiple":false
      }
   ],
   "arguments":[  
      {  
         "name":"sort",
         "description":"sort",
         "help":"",
         "type":"boolean",
         "allow_multiple":false,
         "default":"true"
      },
      {  
         "name":"index",
         "description":"index",
         "help":"",
         "type":"boolean",
         "allow_multiple":false,
         "default":"true"
      },
      {  
         "name":"replace",
         "description":"Chr names replace",
         "help":"",
         "type":"string",
         "allow_multiple":false,
         "default":""
      },
      {  
         "name":"working_dir",
         "description":"Temporal dir for samtools",
         "help":"",
         "type":"string",
         "allow_multiple":false,
         "default":""
      }
   ],
   "control_file":".summary.json",
   "output_files":[  
      {  
         "name":"bam_index",
         "required":false,
         "allow_multiple":false,
         "file":{  
            "file_type":"BAI",
            "compressed":"null",
            "meta_data":{  
               "description":"BAM file index",
               "tool":"BAMval",
               "visible":false
            }
         }
      },
      {  
         "name":"bam",
         "required":false,
         "allow_multiple":false,
         "file":{  
            "file_type":"BAM",
            "compressed":"null",
            "meta_data":{  
               "description":"BAM aligned sequences",
               "tool":"BAMval",
               "visible":true
            }
         }
      }
   ]
}{  
   "_id":"nucldynwf",
   "name":"Nucleosome Dynamics",
   "title":"Nucleosome Dynamics Worflow",
   "short_description":"Nucleosome Dynamics Tools for performing  nucleosome-related analysis based on MNase-seq experimental data",
   "long_description":"The nucleosome dynamics worflow offers different tools to analyze nucleosome positioning from MNase-seq experimental data and to compare experiments to account for the transient and dynamic nature of nucleosome positioning under different cellular states. The main analyses included are nucleR, that performs Fourier transform filtering and peak calling to define nucleosome location, and NucleosomeDynamics, that compares different MNase-seq experiments at read level to identify variations in nucleosomes fuzzines and location (shifts, evictions, inclusions). Additionally, other nucleosome related features are studied, like nucleosome-free regions, prediction of nucleosome phasing at gene level, classification of transcription start sites based on the surrounding nucleosomes and nucleosome stiffness.",
   "url":"http://mmb.pcb.ub.es/NucleosomeDynamics/",
   "owner":{  
      "institution":"IRB",
      "author":"Illa Ricard, Buitrago Diana, Brun Isabelle",
      "contact":"ricard.illa@irbbarcelona.org",
      "url":"http://mmb.pcb.ub.es/www/",
      "user":"ricard.illa@irbbarcelona.org"
   },
   "status":2,
   "sampleData":"nucldynwf",
   "external":true,
   "keywords":[  
      "dna",
      "chromatin",
      "nucleosome",
      "next gen seq",
      "sequence"
   ],
   "keywords_tool":[  
      "mnase-seq",
      "nucleosome caller",
      "nucleR",
      "accessibility",
      "periodicity",
      "stiffness",
      "nucleosome free region",
      "NFR",
      "nucleosome change",
      "fuzziness"
   ],
   "infrastructure":{  
      "memory":4,
      "cpus":1,
      "executable":"/home/NucleosomeDynamics/nucleosome_dynamics.py",
      "interpreter":"python3",
      "clouds":{  
         "mug-irb":{  
            "launcher":"SGE",
            "queue":"nuclDyn.q",
            "default_cloud":true
         }
      }
   },
   "input_files":[  
      {  
         "name":"MNaseSeq",
         "description":"MNase-seq reads",
         "help":"MNase aligned reads in which nucleosome analyses are to be carried out. Multiple files can be given here, and for each, the selected analyses are going to be performed.",
         "file_type":[  
            "BAM"
         ],
         "data_type":[  
            "data_mnase_seq"
         ],
         "required":true,
         "allow_multiple":true
      },
      {  
         "name":"condition1",
         "description":"MNase-seq reference state (condition C1)",
         "help":"MNase data used to define the initial state  when comparing nucleosome positioning",
         "file_type":[  
            "BAM"
         ],
         "data_type":[  
            "data_mnase_seq"
         ],
         "required":false,
         "allow_multiple":false
      },
      {  
         "name":"condition2",
         "description":"MNAse-seq final state (condition C2)",
         "help":"MNase data used to define the final state  when comparing nucleosome positioning",
         "file_type":[  
            "BAM"
         ],
         "data_type":[  
            "data_mnase_seq"
         ],
         "required":false,
         "allow_multiple":false
      }
   ],
   "input_files_combinations":[  
      {  
         "description":"Analyse MNase-seq data",
         "input_files":[  
            "MNaseSeq"
         ]
      }
   ],
   "input_files_combinations_internal":[  
      [  
         {  
            "data_mnase_seq":"+"
         }
      ]
   ],
   "input_files_public_dir":[  
      {  
         "name":"refGenome_chromSizes",
         "description":"Folder where the information about the chromosome sizes of the reference genome is found",
         "help":"Reference genome Folder",
         "type":"hidden",
         "value":"refGenomes/",
         "file_type":[  
            "TXT"
         ],
         "data_type":[  
            "configuration_file"
         ],
         "required":true,
         "allow_multiple":false
      }
   ],
   "arguments":[  
      {  
         "name":"nucleR",
         "description":"NucleR",
         "help":"NucleR finds nucleosome positions from MNase experiments using Fourier transform filtering and classifies nucleosomes according to their fuzziness",
         "type":"boolean",
         "required":true,
         "allow_multiple":false,
         "default":"true"
      },
      {  
         "name":"nucleR:width",
         "description":"Width",
         "help":"Size of each nucleosome, in bp, to be considered by NucleR",
         "type":"integer",
         "required":true,
         "allow_multiple":false,
         "default":"147",
         "maximum":150,
         "minimum":1
      },
      {  
         "name":"nucleR:minoverlap",
         "description":"Minimum Overlap",
         "help":"Minimum overlap between two nucleosomes for merging them.",
         "type":"integer",
         "required":true,
         "allow_multiple":false,
         "default":"80"
      },
      {  
         "name":"nucleR:dyad_length",
         "description":"Dyad Length",
         "help":"Length of the reads that should be used for nucleosome calling to define the dyad of the nucleosomes keeping the given number of bases around the center of the read.",
         "type":"integer",
         "required":true,
         "allow_multiple":false,
         "default":"50"
      },
      {  
         "name":"nucleR:threshold",
         "description":"Background Level",
         "type":"boolean",
         "help":"Minimum number of reads (Coverage) to call a nucleosome. Can be given as a percentage (i.e., '25%' means that the peaks with coverage in the 1st quartile of data won't be considered); or as an absolute coverage value (i.e., '20' means that the peaks with less than 20 reads per million of mapped reads won't be considered). Default = 35%.",
         "required":true,
         "allow_multiple":false
      },
      {  
         "name":"nucleR:thresholdPercentage",
         "description":"Percentage",
         "help":"Minimum number of reads (Coverage) to call a nucleosome given as percentage (i.e., '25%' means that the peaks with coverage in the 1st quartile of data won't be considered).",
         "type":"number",
         "required":true,
         "allow_multiple":false,
         "default":"35",
         "maximum":100,
         "minimum":0
      },
      {  
         "name":"nucleR:thresholdValue",
         "description":"Absolute value",
         "help":"Minimum number of reads (Coverage) to call a nucleosome (i.e., '20' means that the peaks with less than 20 reads per million of mapped reads won't be considered).",
         "type":"integer",
         "required":true,
         "allow_multiple":false,
         "default":""
      },
      {  
         "name":"nucleR:hthresh",
         "description":"Height Threshold",
         "help":"Height threshold (between 0 and 1) to classify a nucleosome as fuzzy (class=F) or well-positioned ( class=W) according to the number of reads at the dyad. Nucleosomes below this value will be defined as fuzzy. Default = 0.4.",
         "type":"number",
         "required":true,
         "allow_multiple":false,
         "default":"0.4"
      },
      {  
         "name":"nucleR:wthresh",
         "description":"Width Threshold",
         "help":"Width threshold (between 0 and 1) to classify a nucleosome as fuzzy (class=F) or well-positioned (class=W) according to the dispersion of the reads around the dyad. ",
         "type":"number",
         "required":true,
         "allow_multiple":false,
         "default":"0.6"
      },
      {  
         "name":"nucleR:pcKeepComp",
         "description":"Coverage Smoothing",
         "help":"Parameter used in the smoothing when Fourier transformation is applied. Number of components to select with respect to the total size of the sample. llowed values are numeric (in range 0:1) for manual setting, or auto for automatic detection.",
         "type":"number",
         "required":true,
         "allow_multiple":false,
         "default":"0.02"
      },
      {  
         "name":"nucDyn",
         "description":"Nucleosome Dynamics",
         "help":"Detection of local changes in the position of nucleosomes at the single read level observed between two reference nucleosome maps",
         "type":"boolean",
         "required":true,
         "allow_multiple":false,
         "default":"true"
      },
      {  
         "name":"nucDyn:range",
         "description":"Range",
         "help":"Genomic region to be analyzed: whole genome ('all'), entire chromosome (chromosome name i.e. 'chrX'), or region of a chromosome ('chromosomeName:start-end).",
         "type":"string",
         "required":true,
         "allow_multiple":false,
         "default":"All"
      },
      {  
         "name":"nucDyn:maxDiff",
         "description":"Maximum Diff",
         "help":"Maximum distance between the dyads of two reads that allows them to still be considered a <i>shift</i>. If unspecified but <i>readSize</i> is specified, it will be set to the half of readSize. If neither of them is specified, it will be set to 70",
         "type":"integer",
         "required":true,
         "allow_multiple":false,
         "default":"70"
      },
      {  
         "name":"nucDyn:maxLen",
         "description":"Maximum Length",
         "help":"Used in the preliminar filtering. Reads longer than this number will be filtered out",
         "type":"integer",
         "required":true,
         "allow_multiple":false,
         "default":"140"
      },
      {  
         "name":"nucDyn:shift_min_nreads",
         "type":"integer",
         "description":"Shift minimum num. reads",
         "help":"Minimum number of reads in a 'SHIFT +' or a 'SHIFT -' hotspot",
         "required":true,
         "allow_multiple":false,
         "default":"3"
      },
      {  
         "name":"nucDyn:shift_threshold",
         "type":"number",
         "description":"Shifts threshold",
         "help":"Minimum score for a 'SHIFT +' or a 'SHIFT -' hotspot",
         "required":true,
         "allow_multiple":false,
         "default":"0.1"
      },
      {  
         "name":"nucDyn:indel_min_nreads",
         "type":"integer",
         "description":"Indels minimum num. reads",
         "help":"Minimum number of reads in an 'INCLUSION +' or a 'DELETION -' hotspot",
         "required":true,
         "allow_multiple":false,
         "default":"3"
      },
      {  
         "name":"nucDyn:indel_threshold",
         "type":"number",
         "description":"Indels threshold",
         "help":"Minimum score for an 'INCLUSION' or a 'DELETION' hotspot",
         "required":true,
         "allow_multiple":false,
         "default":"0.05"
      },
      {  
         "name":"nucDyn:equal_size",
         "description":"Equal Size",
         "help":"If set to TRUE, all sets will be set to the same length, conserving their original dyad position",
         "type":"boolean",
         "required":true,
         "allow_multiple":false
      },
      {  
         "name":"nucDyn:readSize",
         "type":"integer",
         "description":"Read Size",
         "help":"Length to which all reads will be set in case 'equalSize' is TRUE",
         "required":true,
         "allow_multiple":false,
         "default":"140"
      },
      {  
         "name":"NFR",
         "description":"Nucleosome Free Regions",
         "help":"Nucleosome-free regions (NFR) are regions depleted of nucleosomes and larger than an average linker fragment.",
         "type":"boolean",
         "required":true,
         "allow_multiple":false,
         "default":"true"
      },
      {  
         "name":"NFR:minwidth",
         "type":"integer",
         "description":"Minimum Width",
         "help":"Minimum width for a linker fragment to be considered a nucleosome-free region",
         "required":true,
         "allow_multiple":false,
         "default":"110"
      },
      {  
         "name":"NFR:threshold",
         "type":"integer",
         "description":"Maximum width",
         "help":"Maximum width for a linker fragment to be considered a nucleosome-free region",
         "required":true,
         "allow_multiple":false,
         "default":"140"
      },
      {  
         "name":"periodicity",
         "description":"Nucleosome Gene Phasing",
         "help":"Nucleosome phasing along a given gene between the first and last nucleosome",
         "type":"boolean",
         "required":true,
         "allow_multiple":false,
         "default":"true"
      },
      {  
         "name":"periodicity:periodicity",
         "type":"integer",
         "description":"Period",
         "help":"Average distance between two consecutive nucleosomes (repeat length).",
         "required":true,
         "allow_multiple":false,
         "default":"165"
      },
      {  
         "name":"txstart",
         "description":"TSS classification",
         "help":"Classification of the Transcription Start Sites (TSS) according to the nucleosome architecture.",
         "type":"boolean",
         "required":true,
         "allow_multiple":false,
         "default":"true"
      },
      {  
         "name":"txstart:window",
         "type":"integer",
         "description":"Window",
         "help":"Number of nucleotides on each side of the TSS where -1 and +1 nucleosome are search for.",
         "required":true,
         "allow_multiple":false,
         "default":"300"
      },
      {  
         "name":"txstart:open_thresh",
         "type":"integer",
         "description":"Open threshold",
         "help":"Distance between nucleosomes -1 and +1 to discriminate between 'open' and 'close' classes.",
         "required":true,
         "allow_multiple":false,
         "default":"215"
      },
      {  
         "name":"gausfitting",
         "description":"Stiffness",
         "help":"Measure of the resistance of a given nucleosome to be displaced, derived from the properties of the nucleosome calls fitted into a Gaussian distribution.",
         "type":"boolean",
         "required":true,
         "allow_multiple":false,
         "default":"true"
      },
      {  
         "name":"gausfitting:range",
         "type":"string",
         "description":"Genomic range",
         "help":"Genomic region to be analyzed: whole genome ('all'), entire chromosome (chromosome name i.e. 'chrX'), or region of a chromosome ('chromosomeName:start-end).",
         "required":true,
         "allow_multiple":false,
         "default":"All"
      }
   ],
   "control_file":".summary.json",
   "output_files":[  
      {  
         "name":"NR_gff",
         "required":false,
         "allow_multiple":true,
         "file":{  
            "file_type":"GFF3",
            "data_type":"nucleosome_positioning",
            "compressed":"null",
            "meta_data":{  
               "description":"Nuclesome positions predicted by NucleR from MNase-seq data",
               "tool":"nucldynwf",
               "visible":true
            }
         }
      },
      {  
         "name":"ND_gff",
         "required":false,
         "allow_multiple":true,
         "file":{  
            "file_type":"GFF3",
            "data_type":"nucleosome_dynamics",
            "compressed":"null",
            "meta_data":{  
               "description":"Nucleosome positioning differences given two MNAse-seq states",
               "tool":"nucldynwf",
               "visible":true
            }
         }
      },
      {  
         "name":"ND_bw",
         "required":false,
         "allow_multiple":true,
         "file":{  
            "file_type":"BW",
            "data_type":"nucleosome_dynamics",
            "compressed":"null",
            "meta_data":{  
               "description":"Nucleosome positioning differences given two MNAse-seq states",
               "tool":"nucldynwf",
               "visible":true
            }
         }
      },
      {  
         "name":"NFR_gff",
         "required":false,
         "allow_multiple":true,
         "file":{  
            "file_type":"GFF3",
            "data_type":"nucleosome_free_regions",
            "compressed":"null",
            "meta_data":{  
               "description":"Nucleosome Free Regions computed from MNase-seq data",
               "tool":"nucldynwf",
               "visible":true
            }
         }
      },
      {  
         "name":"TSS_gff",
         "required":false,
         "allow_multiple":true,
         "file":{  
            "file_type":"GFF3",
            "data_type":"tss_classification_by_nucleosomes",
            "compressed":"null",
            "meta_data":{  
               "description":"Transcriptions Start Site classification based on nucleosome architecture",
               "tool":"nucldynwf",
               "visible":true
            }
         }
      },
      {  
         "name":"STF_gff",
         "required":false,
         "allow_multiple":true,
         "file":{  
            "file_type":"GFF3",
            "data_type":"nucleosome_stiffness",
            "compressed":"null",
            "meta_data":{  
               "description":"Nucleosome stiffness computed from MNase-seq data",
               "tool":"nucldynwf",
               "visible":true
            }
         }
      },
      {  
         "name":"P_gff",
         "required":false,
         "allow_multiple":true,
         "file":{  
            "file_type":"GFF3",
            "data_type":"nucleosome_gene_phasing",
            "compressed":"null",
            "meta_data":{  
               "description":"Nucleosome phasing along a given gene computed from MNase-seq data",
               "tool":"nucldynwf",
               "visible":true
            }
         }
      },
      {  
         "name":"P_bw",
         "required":false,
         "allow_multiple":true,
         "file":{  
            "file_type":"BW",
            "data_type":"nucleosome_gene_phasing",
            "compressed":"null",
            "meta_data":{  
               "description":"Nucleosome phasing along a given gene computed from MNase-seq data",
               "tool":"nucldynwf",
               "visible":true
            }
         }
      },
      {  
         "name":"statistics",
         "required":true,
         "allow_multiple":false,
         "file":{  
            "file_type":"TAR",
            "data_type":"tool_statistics",
            "compressed":"gzip",
            "meta_data":{  
               "description":"Statistical data from nucleosome analysis workflow",
               "tool":"nucldynwf",
               "visible":false
            }
         }
      }
   ]
}{  
   "_id":"dnashape",
   "name":"DNAShapeScan",
   "short_description":"Predict binding sites for a protein on a given genome segment by using DNAShape to include information on the shape of DNA.",
   "long description":"",
   "title":"Predict binding sites from DNA structure",
   "url":"",
   "owner":{  
      "institution":"University of Southern California, University of Nottingham",
      "author":"Remo Rohs, Marco Pasi",
      "contact":"marco.pasi@ens-cachan.fr",
      "url":"http://rohslab.cmb.usc.edu"
   },
   "status":2,
   "external":true,
   "has_custom_viewer":false,
   "keywords":[  
      "dna",
      "protein",
      "interaction"
   ],
   "keywords_tool":[  

   ],
   "infrastructure":{  
      "memory":4,
      "cpus":1,
      "executable":"/opt/wrappers/dnashape_wf.py",
      "clouds":{  
         "mug-irb":{  
            "launcher":"SGE",
            "queue":"dnashape.q",
            "default_cloud":true
         }
      }
   },
   "input_files":[  
      {  
         "name":"binding_data",
         "description":"Experimental data describing the sequence specificity of the protein",
         "help":"The tab-separated plain-text file must contain on each line a sequence and the corresponding (relative) binding affinity score.",
         "file_type":[  
            "TSV"
         ],
         "data_type":[  
            "prot_dna_specificity"
         ],
         "required":true,
         "allow_multiple":false
      },
      {  
         "name":"target",
         "description":"Genomic segment on which to predict binding sites for the target protein",
         "help":"Binding sites of the target protein will be predicted on the specified segment of the genome.",
         "file_type":[  
            "FASTA"
         ],
         "data_type":[  
            "sequence_dna"
         ],
         "required":true,
         "allow_multiple":false
      }
   ],
   "input_files_combinations":[  
      {  
         "description":"??",
         "input_files":[  
            "binding_data",
            "target"
         ]
      }
   ],
   "input_files_combinations_internal":[  
      [  
         {  
            "prot_dna_specificity":1
         },
         {  
            "sequence_dna":1
         }
      ]
   ],
   "arguments":[  
      {  
         "name":"kmer1",
         "description":"Kmer1",
         "help":"Sequence information is encoded using a first-order feature, where each position along the DNA sequence is treated independently.",
         "type":"boolean",
         "required":true,
         "allow_multiple":false,
         "default":"true"
      },
      {  
         "name":"shape",
         "description":"Shape",
         "help":"Features that encode the shape of DNA (such as Minor Groove width, Roll, Propeller twist and Helical twist) are used to improve the quality of the binding site prediction.",
         "type":"boolean",
         "required":true,
         "allow_multiple":false,
         "default":"true"
      },
      {  
         "name":"max_results",
         "description":"Maximum results",
         "help":"The specified number of top-scoring results will be included in the output.",
         "type":"integer",
         "required":true,
         "allow_multiple":false,
         "default":"1000"
      },
      {  
         "name":"dimer",
         "description":"Dimer",
         "help":"Identify binding sites for a homodimer of the target protein; the relative orientation between the two proteins must be specified, as well as the spacing between the binding sites.",
         "type":"enum",
         "enum_items":{  
            "description":[  
               "On",
               "Off"
            ],
            "name":[  
               "on",
               "off"
            ]
         },
         "required":true,
         "allow_multiple":false,
         "default":[  
            "off"
         ]
      },
      {  
         "name":"dimer:orientation",
         "description":"Orientation",
         "help":"In order to identify binding sites for a homodimer of the target protein, the relative orientation of the two binding sites must be specified: 'forward' indicates the binding sites are in the same orientation; 'backward' indicates they are in reverse (palindromic) orientation.",
         "type":"enum",
         "enum_items":{  
            "description":[  
               "Forward",
               "Reverse"
            ],
            "name":[  
               "forward",
               "reverse"
            ]
         },
         "required":false,
         "allow_multiple":false,
         "default":"forward"
      },
      {  
         "name":"dimer:spacing",
         "description":"Space",
         "help":"In order to identify binding sites for a homodimer of the target protein, the spacing between the two binding sites must be specified.",
         "type":"integer",
         "required":true,
         "allow_multiple":false,
         "default":"0"
      }
   ],
   "control_file":".summary.json",
   "output_files":[  
      {  
         "name":"BindingSites.bw",
         "required":true,
         "allow_multiple":false,
         "file":{  
            "file_type":"BW",
            "data_type":"sequence_dna",
            "compressed":"null",
            "meta_data":{  
               "description":"Binding sites of the target protein identified on the specified genome segment.",
               "tool":"dnashape",
               "visible":true
            }
         }
      }
   ]
}{  
   "_id":"test_tool",
   "name":"Test Tool",
   "title":"Test Tool",
   "short_description":"Test Tool",
   "owner":{  
      "institution":"IRB",
      "author":"Genís Bayarri",
      "contact":"laia.codo@bsc.es",
      "user":"laia.codo@bsc.es"
   },
   "status":2,
   "external":true,
   "has_custom_viewer":false,
   "keywords":[  

   ],
   "infrastructure":{  
      "memory":4,
      "cpus":4,
      "executable":"/home/user/bin/mug/pydockdna",
      "clouds":{  
         "mug-bsc":{  
            "launcher":"PMES",
            "workflowType":"Single",
            "minimumVMs":1,
            "initialVMs":1,
            "imageName":"uuid_pydockdna_51"
         },
         "mug-irb":{  
            "launcher":"SGE",
            "queue":"pydock.q",
            "default_cloud":true
         }
      }
   },
   "input_files":[  

   ],
   "input_files_combinations":[  

   ],
   "input_files_combinations_internal":[  

   ],
   "arguments":[  

   ],
   "output_files":[  

   ]
}{  
   "_id":"process_genome",
   "name":"Process Genomes",
   "title":"Genome Assembly Indexer",
   "short_description":"Generates BWA, Bowtie2 and GEM indexes for a given genome",
   "long_description":"Pipeline for generating index files for a genomic sequence. Once the index files have been generated for a given assembly then they can be used by different pipelines/tools as they are required. Based on the FASTA file of a genomic sequence index files are generated for the following indexers: Bowtie2, BWA, GEM",
   "owner":{  
      "institution":"EMBL-EBI",
      "author":"Mark McDowall",
      "contact":"mcdowall@ebi.ac.uk",
      "url":"https://github.com/Multiscale-Genomics/mg-process-fastq"
   },
   "status":1,
   "external":true,
   "has_custom_viewer":false,
   "keywords":[  
      "dna",
      "sequence",
      "next gen seq"
   ],
   "keywords_tool":[  
      "index"
   ],
   "infrastructure":{  
      "memory":10,
      "cpus":4,
      "executable":"/usr/local/code/mg-process-fastq/process_genome.py",
      "clouds":{  
         "mug-bsc":{  
            "launcher":"PMES",
            "workflowType":"COMPSs",
            "minimumVMs":1,
            "initialVMs":1,
            "imageName":"uuid_vmgenericmgtoolapi06_72",
            "default_cloud":false
         },
         "mug-ebi":{  
            "launcher":"PMES",
            "workflowType":"COMPSs",
            "minimumVMs":1,
            "initialVMs":1,
            "imageName":"8a94f424-b2e8-4b81-888d-b2b52ea19ac4",
            "default_cloud":false
         },
         "mug-irb":{  
            "launcher":"PMES",
            "workflowType":"COMPSs",
            "minimumVMs":1,
            "initialVMs":1,
            "imageName":"uuid_vmgenericmgtoolapi_24",
            "default_cloud":false
         }
      }
   },
   "input_files":[  
      {  
         "name":"genome",
         "description":"Genome sequence file",
         "help":"path to a assembly sequence file",
         "file_type":[  
            "FASTA"
         ],
         "data_type":[  
            "sequence_genomic",
            "sequence_dna"
         ],
         "required":true,
         "allow_multiple":false
      }
   ],
   "input_files_combinations":[  
      {  
         "description":"Index a DNA sequence",
         "input_files":[  
            "genome"
         ]
      }
   ],
   "input_files_combinations_internal":[  
      [  
         {  
            "sequence_genomic":1
         }
      ],
      [  
         {  
            "sequence_dna":1
         }
      ]
   ],
   "arguments":[  

   ],
   "output_files":[  
      {  
         "name":"bwa_index",
         "required":true,
         "allow_multiple":false,
         "file":{  
            "file_type":"TAR",
            "meta_data":{  
               "visible":true,
               "tool":"process_genome",
               "description":"Output"
            },
            "file_path":"bwa.tar.gz",
            "data_type":"sequence_mapping_index_bwa",
            "compressed":"gzip"
         }
      },
      {  
         "name":"bwt_index",
         "required":true,
         "allow_multiple":false,
         "file":{  
            "file_type":"TAR",
            "meta_data":{  
               "visible":true,
               "tool":"process_genome",
               "description":"Output"
            },
            "file_path":"bt2.tar.gz",
            "data_type":"sequence_mapping_index_bowtie",
            "compressed":"gzip"
         }
      },
      {  
         "required":false,
         "allow_multiple":false,
         "name":"gem_index",
         "file":{  
            "file_type":"GEM",
            "meta_data":{  
               "visible":true,
               "tool":"process_genome",
               "description":"Compressed GEM file"
            },
            "file_path":"gem.fasta.gem.gz",
            "data_type":"sequence_mapping_index_gem",
            "compressed":"gzip"
         }
      },
      {  
         "name":"genome_gem",
         "required":false,
         "allow_multiple":false,
         "file":{  
            "file_type":"FASTA",
            "meta_data":{  
               "visible":true,
               "tool":"process_genome",
               "description":"Genome file modified for use with the GEM indexer and aligner"
            },
            "file_path":"gem.fasta",
            "data_type":"sequence_dna",
            "compressed":"null"
         }
      }
   ]
}{  
   "_id":"pydock",
   "name":"pyDock",
   "title":"Protein-Protein docking",
   "short_description":"PyDock is a tool for the structural prediction of protein-protein interactions",
   "long_description":"Given the 3D coordinates of two interacting molecular partners (protein or protein complex), pyDock returns the best rigid-body docking orientations generated by FTDock and evaluated by pyDock scoring function, which includes electrostatics, desolvation energy and limited van der Waals contribution",
   "owner":{  
      "institution":"BSC",
      "author":"Brian Jiménez-García",
      "contact":"brian.jimenez@bsc.es",
      "url":"https://life.bsc.es/pid/pidweb/default/tools",
      "user":"bjimenez@bsc.es",
      "license":"free_for_academics"
   },
   "status":1,
   "external":true,
   "has_custom_viewer":true,
   "keywords":[  
      "protein",
      "interaction",
      "structure"
   ],
   "keywords_tool":[  
      "protein-protein docking",
      "FTDock",
      "PyDock scoring function"
   ],
   "infrastructure":{  
      "memory":4,
      "cpus":4,
      "executable":"/home/user/bin/mug/pydock",
      "clouds":{  
         "mug-bsc":{  
            "launcher":"PMES",
            "workflowType":"Single",
            "minimumVMs":1,
            "initialVMs":1,
            "imageName":"uuid_pydockdna_51"
         },
         "mug-irb":{  
            "launcher":"SGE",
            "queue":"pydock.q",
            "default_cloud":true
         }
      }
   },
   "input_files":[  
      {  
         "name":"receptor",
         "description":"Receptor PDB structure",
         "help":"Select the input receptor",
         "file_type":[  
            "PDB"
         ],
         "data_type":[  
            "prot_structure",
            "prot_prot_structure"
         ],
         "required":true,
         "allow_multiple":false
      },
      {  
         "name":"ligand",
         "description":"Ligand PDB structure",
         "help":"Select the input ligand",
         "file_type":[  
            "PDB"
         ],
         "data_type":[  
            "prot_structure",
            "prot_prot_structure"
         ],
         "required":true,
         "allow_multiple":false
      }
   ],
   "input_files_combinations":[  
      {  
         "description":"Dock two proteins",
         "input_files":[  
            "receptor",
            "ligand"
         ]
      }
   ],
   "input_files_combinations_internal":[  
      [  
         {  
            "prot_structure":1
         },
         {  
            "prot_prot_structure":1
         }
      ],
      [  
         {  
            "prot_structure":1
         },
         {  
            "prot_structure":1
         }
      ],
      [  
         {  
            "prot_prot_structure":1
         },
         {  
            "prot_prot_structure":1
         }
      ]
   ],
   "arguments":[  
      {  
         "name":"scoring",
         "description":"Available energetic scoring functions",
         "help":"pyDock is able to use different scoring functions in the step of re-scoring the generated docking poses",
         "type":"enum",
         "enum_items":{  
            "description":[  
               "pyDock"
            ],
            "name":[  
               "dockser"
            ]
         },
         "required":true,
         "default":[  
            "dockser"
         ]
      },
      {  
         "name":"models",
         "description":"Number of structures to model",
         "help":"The number of generated models by this tool",
         "type":"enum",
         "enum_items":{  
            "name":[  
               "1",
               "5",
               "10",
               "50"
            ],
            "description":[  
               "1",
               "5",
               "10",
               "50"
            ]
         },
         "required":true,
         "default":[  
            "10"
         ]
      }
   ],
   "output_files":[  
      {  
         "name":"energy_table",
         "required":true,
         "allow_multiple":false,
         "file":{  
            "file_type":"CSV",
            "data_type":"docking_ranking",
            "compressed":"null",
            "meta_data":{  
               "description":"Ranking of docking poses",
               "tool":"pydock",
               "visible":true
            }
         }
      },
      {  
         "name":"top_structures",
         "required":true,
         "allow_multiple":false,
         "file":{  
            "file_type":"PDB",
            "data_type":"prot_prot_structure",
            "compressed":"null",
            "meta_data":{  
               "description":"Top 10 predictions",
               "tool":"pydock",
               "visible":true
            }
         }
      },
      {  
         "name":"top10",
         "required":true,
         "allow_multiple":true,
         "file":{  
            "file_type":"PDB",
            "data_type":"prot_prot_structure",
            "compressed":"null",
            "meta_data":{  
               "description":"Top10 predicted structures",
               "tool":"pydock",
               "visible":true
            }
         }
      },
      {  
         "name":"results",
         "required":true,
         "allow_multiple":false,
         "file":{  
            "file_type":"TAR",
            "data_type":"tool_statistics",
            "compressed":"gzip",
            "meta_data":{  
               "description":"Compressed results of the tool",
               "tool":"pydock",
               "visible":false
            }
         }
      }
   ]
}{  
   "_id":"chromatindyn",
   "name":"Chromatin Dynamics",
   "title":"Chromatin Dynamics",
   "short_description":"With the Chromatin Dynamics tool you can create your own 'beads-on-a-string' representation of a chromatin fiber.",
   "long_description":"Chromatin Dynamics provides a user friendly way to create individual 'beads-on-a-string' like representations of a chromatin fiber. The user decides the sequence of the linker DNA and where the nucleosomes are inserted which gives the user full control over designing his own individual chromatin fiber. There are two possibilities to use Chromatin Dynamics. In the first, the user provides his own sequence and nucleosome position file and the tool creates a ground state structure of the chromatin conformation and a trajectory of possible conformations. This option is recommended if average properties of the fiber want to be obtained. A second option is to create a ground state structure of a selected genomic region based on the nucleosome positions determined by NucleR of the Nucleosome Dynamics workflow.",
   "owner":{  
      "institution":"IRB",
      "author":"Jürgen Walther",
      "contact":"juergen.walther@irbbarcelona.org",
      "url":"http://mmb.pcb.ub.es/www/"
   },
   "status":1,
   "external":true,
   "keywords":[  
      "chromatin",
      "dynamics",
      "nucleosome",
      "modeling",
      "structure",
      "dna"
   ],
   "keywords_tool":[  
      "coarse-grain"
   ],
   "infrastructure":{  
      "memory":4,
      "cpus":1,
      "executable":"/home/MuG/chromatindyn_wf.py",
      "clouds":{  
         "mug-irb":{  
            "launcher":"SGE",
            "queue":"naFlex.q",
            "default_cloud":true
         }
      }
   },
   "input_files":[  
      {  
         "name":"sequence",
         "description":"DNA sequence",
         "help":"DNA linker sequence",
         "file_type":[  
            "TXT"
         ],
         "data_type":[  
            "sequence_dna"
         ],
         "required":true,
         "allow_multiple":false
      },
      {  
         "name":"nuclPos",
         "description":"Positions of nucleosomes",
         "help":"Put in position where the nucleosomes are positioned in the linker sequence. Between each number has to be a space: for example '5 15' creates a structure where one nucleosome is put after the 5th bp of the linker sequence and another one after the 15th bp of the linker sequence generating a linker of 10bp between the two nucleosomes. Before the first and after the last nucleosome there have to at least 5 base pairs. Between two nucleosomes there has to be at least 3 base pairs.",
         "file_type":[  
            "TXT"
         ],
         "data_type":[  
            "nucleosome_positioning"
         ],
         "required":true,
         "allow_multiple":false
      },
      {  
         "name":"gffNucleaR",
         "description":"NucleaR output",
         "help":"Create a 3D structure from an 'NR_' gff file from Nucleosome Dynamics",
         "file_type":[  
            "GFF3",
            "GFF"
         ],
         "data_type":[  
            "nucleosome_positioning"
         ],
         "required":true,
         "allow_multiple":false
      }
   ],
   "input_files_combinations":[  
      {  
         "description":"Create 3D representation of chromatin fiber from sequence",
         "input_files":[  
            "sequence",
            "nuclPos"
         ]
      },
      {  
         "description":"Create 3D representation of chromatin fiber from nucleR output",
         "input_files":[  
            "gffNucleaR"
         ]
      }
   ],
   "input_files_combinations_internal":[  
      [  
         {  
            "sequence_dna":1
         },
         {  
            "nucleosome_positioning":1
         }
      ],
      [  
         {  
            "nucleosome_positioning":1
         }
      ]
   ],
   "arguments":[  
      {  
         "name":"operations",
         "description":"Operations",
         "help":"Type of model to be created. Select the operation you want to execute",
         "type":"enum_multiple",
         "enum_items":{  
            "name":[  
               "createTrajectory",
               "createStructure"
            ],
            "description":[  
               "Create Trajectory",
               "Create Structure"
            ]
         },
         "required":true,
         "default":""
      },
      {  
         "name":"createTrajectory:numStruct",
         "description":"Number of structures",
         "help":"Number of structures to generate (max 100)",
         "type":"integer",
         "minimum":1,
         "maximum":100,
         "required":false,
         "default":"10"
      },
      {  
         "name":"create3DfromNucleaR:genRegion",
         "description":"3D structure from Nucleosome Dynamics",
         "help":"Obtain a structure from nucleosome positions within a genomic region calculated by nucleaR (within Nucleosome Dynamics). Use for example 'chrI:37415..39104'.",
         "type":"string",
         "required":true,
         "default":"chrI:37415..39104"
      }
   ],
   "control_file":".results.json",
   "output_files":[  
      {  
         "name":"PDB_chromatin_structure",
         "required":false,
         "allow_multiple":false,
         "file":{  
            "file_type":"PDB",
            "data_type":"chromatin_3dmodel",
            "compressed":"null",
            "meta_data":{  
               "description":"3D chromatin structure",
               "tool":"chromatindyn",
               "visible":true
            }
         }
      },
      {  
         "name":"chromatin_trajectory",
         "required":false,
         "allow_multiple":false,
         "file":{  
            "file_type":"DCD",
            "data_type":"chromatin_traj",
            "compressed":"null",
            "meta_data":{  
               "description":"Chromatin trajectory",
               "tool":"chromatindyn",
               "visible":true
            }
         }
      },
      {  
         "name":"PDB_dummy_chromatin_structure",
         "required":false,
         "allow_multiple":false,
         "file":{  
            "file_type":"PDB",
            "data_type":"chromatin_3dmodel",
            "compressed":"null",
            "meta_data":{  
               "description":"3D dummy chromatin structure",
               "tool":"chromatindyn",
               "visible":true
            }
         }
      },
      {  
         "name":"PDB_chromatin_starting_structure",
         "required":false,
         "allow_multiple":false,
         "file":{  
            "file_type":"PDB",
            "data_type":"chromatin_3dmodel",
            "compressed":"null",
            "meta_data":{  
               "description":"3D chromatin starting structure for trajectory",
               "tool":"chromatindyn",
               "visible":true
            }
         }
      },
      {  
         "name":"summary",
         "required":true,
         "allow_multiple":false,
         "file":{  
            "file_type":"TAR",
            "data_type":"tool_statistics",
            "compressed":"gzip",
            "meta_data":{  
               "description":"chromatindyn summary plots",
               "tool":"chromatindyn",
               "visible":false
            }
         }
      }
   ]
}{  
   "_id":"tadbit_normalize",
   "name":"TADbit normalize",
   "title":"TADbit Hi-C normalize",
   "short_description":"TADbit Hi-C normalize.",
   "long_description":"TADbit is a complete Python library to deal with all steps to analyze, model and explore 3C-based data. With TADbit the user can map FASTQ files to obtain raw interaction binned matrices (Hi-C like matrices), normalize and correct interaction matrices, identify adn compare the so-called Topologically Associating Domains (TADs), build 3D models from the interaction matrices, and finally, extract structural properties from the models. TADbit is complemented by TADkit for visualizing 3D models.",
   "owner":{  
      "institution":"CNAG",
      "author":"Francois Serra",
      "contact":"serra.francois@gmail.com",
      "url":"http://sgt.cnag.cat/3dg/tadbit/"
   },
   "status":1,
   "external":true,
   "keywords":[  
      "dna",
      "chromatin",
      "hi-c",
      "interaction",
      "sequence"
   ],
   "keywords_tool":[  
      "biases correction"
   ],
   "infrastructure":{  
      "memory":4,
      "cpus":12,
      "executable":"/home/pmes/code/mg-process-fastq/tadbit_normalize_wrapper.py",
      "clouds":{  
         "mug-irb":{  
            "launcher":"PMES",
            "workflowType":"Single",
            "initialVMs":1,
            "minimumVMs":1,
            "maximumVMs":1,
            "imageName":"uuid_tadbitmgtoolapi_47",
            "default_cloud":false
         }
      }
   },
   "input_files":[  
      {  
         "name":"bamin",
         "description":"TADbit-generated BAM file",
         "help":"path to a TADbit-generated BAM file with filtered reads",
         "file_type":[  
            "BAM"
         ],
         "data_type":[  
            "hic_sequences"
         ],
         "required":true,
         "allow_multiple":false
      }
   ],
   "input_files_public_dir":[  
      {  
         "name":"refGenomes_folder",
         "description":"Folder where files associated to reference genomes are found",
         "help":"Reference genome Folder",
         "type":"hidden",
         "value":"refGenomes/",
         "file_type":[  
            "TXT"
         ],
         "data_type":[  
            "configuration_file"
         ],
         "required":true,
         "allow_multiple":false
      }
   ],
   "input_files_combinations":[  
      {  
         "description":"Compute biases of raw Hi-C paired Reads",
         "input_files":[  
            "bamin"
         ]
      }
   ],
   "input_files_combinations_internal":[  
      [  
         {  
            "hic_sequences":1
         }
      ]
   ],
   "arguments":[  
      {  
         "name":"normalization",
         "description":"Normalization method",
         "help":"Normalization method to apply",
         "type":"enum",
         "enum_items":{  
            "name":[  
               "Vanilla",
               "oneD"
            ],
            "description":[  
               "Vanilla",
               "oneD"
            ]
         },
         "default":[  
            "Vanilla"
         ],
         "required":false
      },
      {  
         "name":"resolution",
         "description":"Resolution of the normalization",
         "help":"Resolution of the normalization.",
         "type":"string",
         "required":true,
         "default":"100000"
      },
      {  
         "name":"min_perc",
         "description":"Minimum percentage",
         "help":"lower percentile from which consider bins as good.",
         "type":"string",
         "required":false,
         "default":"7"
      },
      {  
         "name":"max_perc",
         "description":"Maximum percentage",
         "help":"upper percentile until which consider bins as good",
         "type":"string",
         "required":false,
         "default":"99.8"
      }
   ],
   "output_files":[  
      {  
         "name":"hic_biases",
         "required":true,
         "allow_multiple":false,
         "file":{  
            "file_type":"PICKLE",
            "file_path":"file1.pickel",
            "data_type":"hic_biases",
            "compressed":"null",
            "meta_data":{  
               "tool":"tadbit",
               "description":"HiC biases for normalization",
               "visible":true
            }
         }
      },
      {  
         "name":"normalize_stats",
         "required":true,
         "allow_multiple":false,
         "file":{  
            "file_type":"TAR",
            "file_path":"normalize_stats.tar.gz",
            "data_type":"tool_statistics",
            "compressed":"gzip",
            "meta_data":{  
               "description":"TADbit normalize statistics",
               "tool":"tadbit",
               "visible":true
            }
         }
      }
   ]
}{  
   "_id":"naflex",
   "title":"Nucleic Acids Flexibility Analyses",
   "name":"NAFlex analyses",
   "short_description":"Set of analyses to extract Nucleic Acids flexibility properties from Molecular Dynamics trajectories",
   "long_description":"NAFlex provides a friendly environment to analyse your own generated molecular dynamics trajectories of nucleic acid structures.In this version, only double-stranded, standard nucleic acids can be analysed. Mispaired nucleotides, single-stranded nucleic acids, triplexes and quadruplexes are not currently supported in NAFlex flexibility analysis. Modified nucleotides are only allowed in some of the flexibility analysis operations.",
   "url":"http://mmb.irbbarcelona.org/NAFlex/",
   "owner":{  
      "institution":"IRB",
      "logo":"assets/home/institution.png",
      "author":" Adam Hospital",
      "contact":"adam.hospital@irbbarcelona.org",
      "url":"http://mmb.irbbarcelona.org/www/",
      "user":"rroyo@bsc.es"
   },
   "status":{  
      "$numberLong":"1"
   },
   "external":true,
   "keywords":[  
      "dna",
      "rna",
      "dynamics",
      "structure"
   ],
   "keywords_tool":[  
      "nucleic acid NA",
      "flexibility",
      "molecular dynamics",
      "curves",
      "ambertools"
   ],
   "infrastructure":{  
      "memory":4,
      "cpus":1,
      "executable":"/home/MuG/NAFlex/NAFlex_MuG_Wrapper.pl",
      "clouds":{  
         "mug-irb":{  
            "launcher":"SGE",
            "queue":"naFlex.q",
            "default_cloud":true
         }
      }
   },
   "input_files":[  
      {  
         "name":"pdb",
         "description":"Input Structure, pdb format",
         "help":"Input nucleic acid (or protein-na complex) representative structure used in the MD simulation",
         "file_type":[  
            "PDB"
         ],
         "data_type":[  
            "na_structure"
         ],
         "required":true,
         "allow_multiple":false
      },
      {  
         "name":"top",
         "description":"Input Topology, Amber Parmtop v7 format",
         "help":"Input nucleic acid (or protein-na complex) topology used in the MD simulation",
         "file_type":[  
            "PARMTOP"
         ],
         "data_type":[  
            "na_traj_top"
         ],
         "required":true,
         "allow_multiple":false
      },
      {  
         "name":"crd",
         "description":"Input Trajectory, Amber mdcrd format",
         "help":"Input nucleic acid (or protein-na complex) trajectory obtained from a MD simulation",
         "file_type":[  
            "MDCRD",
            "DCD",
            "NETCDF"
         ],
         "data_type":[  
            "na_traj_coords",
            "na_traj"
         ],
         "required":true,
         "allow_multiple":false
      }
   ],
   "input_files_combinations":[  
      {  
         "description":"Nucleic acid flexibility analyses from trajectory",
         "input_files":[  
            "pdb",
            "top",
            "crd"
         ]
      },
      {  
         "description":"Nucleic acid flexibility analyses from structure",
         "input_files":[  
            "pdb"
         ]
      }
   ],
   "input_files_combinations_internal":[  
      [  
         {  
            "na_structure":1
         },
         {  
            "na_traj_top":1
         },
         {  
            "na_traj_coords":1
         }
      ],
      [  
         {  
            "na_structure":1
         },
         {  
            "na_traj_top":1
         },
         {  
            "na_traj":1
         }
      ],
      [  
         {  
            "na_structure":1
         }
      ]
   ],
   "arguments":[  
      {  
         "name":"operations",
         "description":"Flexibility operation to be computed",
         "help":"Flexibility operation to be computed: CURVES, STIFFNESS, PCAZIP, NMR_NOEs, NMR_JCouplings, HBs, STACKING, Distance Contact Maps, ALL",
         "type":"enum_multiple",
         "enum_items":{  
            "name":[  
               "Curves",
               "Stiffness",
               "Pcazip",
               "Nmr_NOEs",
               "Nmr_Jcouplings",
               "HBs",
               "Stacking",
               "DistanceContactMaps",
               "ALL"
            ],
            "description":[  
               "Curves",
               "Stiffness",
               "Pcazip",
               "Nmr_NOEs",
               "Nmr_Jcouplings",
               "HBs",
               "Stacking",
               "DistanceContactMaps",
               "ALL"
            ]
         },
         "required":true,
         "allow_multiple":false,
         "default":[  
            "ALL"
         ]
      }
   ],
   "control_file":".summary.json",
   "output_files":[  
      {  
         "name":"NAFlex.report.tgz",
         "required":false,
         "allow_multiple":false,
         "file":{  
            "file_type":"TAR",
            "data_type":"tool_statistics",
            "compressed":"gzip",
            "meta_data":{  
               "description":"NAFlex analyses output report to be used in the custom visualization",
               "tool":"NAFlex",
               "visible":false
            }
         }
      },
      {  
         "name":"CURVES.backbone_torsions",
         "required":false,
         "allow_multiple":false,
         "file":{  
            "file_type":"PDF",
            "data_type":"tool_statistics",
            "compressed":"null",
            "meta_data":{  
               "description":"NAFlex CURVES Backbone torsions analyses output plots",
               "tool":"NAFlex",
               "visible":true
            }
         }
      },
      {  
         "name":"CURVES.axis_bp",
         "required":false,
         "allow_multiple":false,
         "file":{  
            "file_type":"PDF",
            "data_type":"tool_statistics",
            "compressed":"null",
            "meta_data":{  
               "description":"NAFlex CURVES Axis Base Pairs analyses output plots",
               "tool":"NAFlex",
               "visible":true
            }
         }
      },
      {  
         "name":"CURVES.helical_bp",
         "required":false,
         "allow_multiple":false,
         "file":{  
            "file_type":"PDF",
            "data_type":"tool_statistics",
            "compressed":"null",
            "meta_data":{  
               "description":"NAFlex CURVES Helical Base Pairs analyses output plots",
               "tool":"NAFlex",
               "visible":true
            }
         }
      },
      {  
         "name":"CURVES.helical_bps",
         "required":false,
         "allow_multiple":false,
         "file":{  
            "file_type":"PDF",
            "data_type":"tool_statistics",
            "compressed":"null",
            "meta_data":{  
               "description":"NAFlex CURVES Helical Base Pair Steps analyses output plots",
               "tool":"NAFlex",
               "visible":true
            }
         }
      },
      {  
         "name":"CURVES.grooves",
         "required":false,
         "allow_multiple":false,
         "file":{  
            "file_type":"PDF",
            "data_type":"tool_statistics",
            "compressed":"null",
            "meta_data":{  
               "description":"NAFlex CURVES Grooves analyses output plots",
               "tool":"NAFlex",
               "visible":true
            }
         }
      },
      {  
         "name":"STIFFNESS.helical_bps_fctes",
         "required":false,
         "allow_multiple":false,
         "file":{  
            "file_type":"PDF",
            "data_type":"tool_statistics",
            "compressed":"null",
            "meta_data":{  
               "description":"NAFlex STIFFNESS Helical Base Pair Steps Force Constants analyses output plots",
               "tool":"NAFlex",
               "visible":true
            }
         }
      },
      {  
         "name":"STIFFNESS.helical_bps_fctes_tables",
         "required":false,
         "allow_multiple":false,
         "file":{  
            "file_type":"PDF",
            "data_type":"tool_statistics",
            "compressed":"null",
            "meta_data":{  
               "description":"NAFlex STIFFNESS Helical Base Pair Steps Force Constants analyses output colour-coded tables",
               "tool":"NAFlex",
               "visible":true
            }
         }
      },
      {  
         "name":"PCAZIP.animEvec1",
         "required":false,
         "allow_multiple":false,
         "file":{  
            "file_type":"PDB",
            "data_type":"na_traj",
            "compressed":"null",
            "meta_data":{  
               "description":"NAFlex PCAZIP Principal Components animation of Eigen Vector number 1",
               "tool":"NAFlex",
               "visible":true
            }
         }
      },
      {  
         "name":"PCAZIP.animEvec2",
         "required":false,
         "allow_multiple":false,
         "file":{  
            "file_type":"PDB",
            "data_type":"na_traj",
            "compressed":"null",
            "meta_data":{  
               "description":"NAFlex PCAZIP Principal Components animation of Eigen Vector number 2",
               "tool":"NAFlex",
               "visible":true
            }
         }
      },
      {  
         "name":"PCAZIP.animEvec3",
         "required":false,
         "allow_multiple":false,
         "file":{  
            "file_type":"PDB",
            "data_type":"na_traj",
            "compressed":"null",
            "meta_data":{  
               "description":"NAFlex PCAZIP Principal Components animation of Eigen Vector number 3",
               "tool":"NAFlex",
               "visible":true
            }
         }
      },
      {  
         "name":"PCAZIP.animEvec4",
         "required":false,
         "allow_multiple":false,
         "file":{  
            "file_type":"PDB",
            "data_type":"na_traj",
            "compressed":"null",
            "meta_data":{  
               "description":"NAFlex PCAZIP Principal Components animation of Eigen Vector number 4",
               "tool":"NAFlex",
               "visible":true
            }
         }
      },
      {  
         "name":"PCAZIP.animEvec5",
         "required":false,
         "allow_multiple":false,
         "file":{  
            "file_type":"PDB",
            "data_type":"na_traj",
            "compressed":"null",
            "meta_data":{  
               "description":"NAFlex PCAZIP Principal Components animation of Eigen Vector number 5",
               "tool":"NAFlex",
               "visible":true
            }
         }
      },
      {  
         "name":"PCAZIP.animEvec6",
         "required":false,
         "allow_multiple":false,
         "file":{  
            "file_type":"PDB",
            "data_type":"na_traj",
            "compressed":"null",
            "meta_data":{  
               "description":"NAFlex PCAZIP Principal Components animation of Eigen Vector number 6",
               "tool":"NAFlex",
               "visible":true
            }
         }
      },
      {  
         "name":"PCAZIP.animEvec7",
         "required":false,
         "allow_multiple":false,
         "file":{  
            "file_type":"PDB",
            "data_type":"na_traj",
            "compressed":"null",
            "meta_data":{  
               "description":"NAFlex PCAZIP Principal Components animation of Eigen Vector number 7",
               "tool":"NAFlex",
               "visible":true
            }
         }
      },
      {  
         "name":"PCAZIP.animEvec8",
         "required":false,
         "allow_multiple":false,
         "file":{  
            "file_type":"PDB",
            "data_type":"na_traj",
            "compressed":"null",
            "meta_data":{  
               "description":"NAFlex PCAZIP Principal Components animation of Eigen Vector number 8",
               "tool":"NAFlex",
               "visible":true
            }
         }
      },
      {  
         "name":"PCAZIP.animEvec9",
         "required":false,
         "allow_multiple":false,
         "file":{  
            "file_type":"PDB",
            "data_type":"na_traj",
            "compressed":"null",
            "meta_data":{  
               "description":"NAFlex PCAZIP Principal Components animation of Eigen Vector number 9",
               "tool":"NAFlex",
               "visible":true
            }
         }
      },
      {  
         "name":"PCAZIP.animEvec10",
         "required":false,
         "allow_multiple":false,
         "file":{  
            "file_type":"PDB",
            "data_type":"na_traj",
            "compressed":"null",
            "meta_data":{  
               "description":"NAFlex PCAZIP Principal Components animation of Eigen Vector number 10",
               "tool":"NAFlex",
               "visible":true
            }
         }
      },
      {  
         "name":"NMR_JC",
         "required":false,
         "allow_multiple":false,
         "file":{  
            "file_type":"PDF",
            "data_type":"tool_statistics",
            "compressed":"null",
            "meta_data":{  
               "description":"NAFlex NMR_JCouplings analyses output plots",
               "tool":"NAFlex",
               "visible":true
            }
         }
      },
      {  
         "name":"NMR_NOE.Sugar-Sugar",
         "required":false,
         "allow_multiple":false,
         "file":{  
            "file_type":"PDF",
            "data_type":"tool_statistics",
            "compressed":"null",
            "meta_data":{  
               "description":"NAFlex NMR_NOEs Sugar-Sugar analyses output plots",
               "tool":"NAFlex",
               "visible":true
            }
         }
      },
      {  
         "name":"NMR_NOE.Sugar-Base",
         "required":false,
         "allow_multiple":false,
         "file":{  
            "file_type":"PDF",
            "data_type":"tool_statistics",
            "compressed":"null",
            "meta_data":{  
               "description":"NAFlex NMR_NOEs Sugar-Base analyses output plots",
               "tool":"NAFlex",
               "visible":true
            }
         }
      },
      {  
         "name":"NMR_NOE.Sugar-BaseStep",
         "required":false,
         "allow_multiple":false,
         "file":{  
            "file_type":"PDF",
            "data_type":"tool_statistics",
            "compressed":"null",
            "meta_data":{  
               "description":"NAFlex NMR_NOEs Sugar-BaseStep (Sugar step i vs Base step i+1) analyses output plots",
               "tool":"NAFlex",
               "visible":true
            }
         }
      },
      {  
         "name":"NMR_NOE.Intensities",
         "required":false,
         "allow_multiple":false,
         "file":{  
            "file_type":"PDF",
            "data_type":"tool_statistics",
            "compressed":"null",
            "meta_data":{  
               "description":"NAFlex NMR_NOEs intensity matrices output plots",
               "tool":"NAFlex",
               "visible":true
            }
         }
      },
      {  
         "name":"HBs",
         "required":false,
         "allow_multiple":false,
         "file":{  
            "file_type":"PDF",
            "data_type":"tool_statistics",
            "compressed":"null",
            "meta_data":{  
               "description":"NAFlex HBs analyses output plots",
               "tool":"NAFlex",
               "visible":true
            }
         }
      },
      {  
         "name":"STACKING",
         "required":false,
         "allow_multiple":false,
         "file":{  
            "file_type":"PDF",
            "data_type":"tool_statistics",
            "compressed":"null",
            "meta_data":{  
               "description":"NAFlex STACKING analyses output plots",
               "tool":"NAFlex",
               "visible":true
            }
         }
      },
      {  
         "name":"CONTACTS",
         "required":false,
         "allow_multiple":false,
         "file":{  
            "file_type":"PDF",
            "data_type":"tool_statistics",
            "compressed":"null",
            "meta_data":{  
               "description":"NAFlex CONTACTS (Distance Contact Matrices) analyses output plots",
               "tool":"NAFlex",
               "visible":true
            }
         }
      }
   ]
}{  
   "_id":"tadbit_map_parse_filter",
   "name":"TADbit map, parse and filter (PMES)",
   "title":"TADbit Hi-C mapping, parsing mapped reads and filtering of artifactual reads",
   "short_description":"TADbit Hi-C mapping, parsing mapped reads and filtering of artifactual reads.",
   "long_description":"TADbit is a complete Python library to deal with all steps to analyze, model and explore 3C-based data. With TADbit the user can map FASTQ files to obtain raw interaction binned matrices (Hi-C like matrices), normalize and correct interaction matrices, identify adn compare the so-called Topologically Associating Domains (TADs), build 3D models from the interaction matrices, and finally, extract structural properties from the models. TADbit is complemented by TADkit for visualizing 3D models.",
   "owner":{  
      "institution":"CNAG",
      "author":"Francois Serra & David Castillo",
      "contact":"david.castillo@cnag.crg.eu",
      "url":"http://sgt.cnag.cat/3dg/tadbit/"
   },
   "status":1,
   "external":true,
   "keywords":[  
      "chromatin",
      "dna",
      "hi-c",
      "interaction",
      "sequence"
   ],
   "keywords_tool":[  
      "mapping",
      "alignment",
      "filter"
   ],
   "infrastructure":{  
      "memory":32,
      "cpus":4,
      "executable":"/home/pmes/code/mg-process-fastq/tadbit_map_parse_filter_wrapper.py",
      "interpreter_old":"/usr/bin/env python",
      "clouds":{  
         "mug-irb":{  
            "launcher":"PMES",
            "workflowType":"Single",
            "initialVMs":1,
            "minimumVMs":1,
            "maximumVMs":1,
            "imageName":"uuid_tadbitmgtoolapi_47",
            "default_cloud":false
         }
      }
   },
   "input_files":[  
      {  
         "name":"read1",
         "description":"Hi-C Reads (pair 1)",
         "help":"from paired-end sequencing. This FASTQ should contain only one of the ends",
         "file_type":[  
            "FASTQ"
         ],
         "data_type":[  
            "hic_reads"
         ],
         "required":true,
         "allow_multiple":false
      },
      {  
         "name":"read2",
         "description":"Hi-C Reads (pair 2)",
         "help":"from paired-end sequencing. This FASTQ should contain only one of the ends",
         "file_type":[  
            "FASTQ"
         ],
         "data_type":[  
            "hic_reads"
         ],
         "required":true,
         "allow_multiple":false
      },
      {  
         "name":"ref_genome",
         "description":"Reference genome",
         "help":"Reference genome.",
         "file_type":[  
            "FASTA"
         ],
         "data_type":[  
            "sequence_genomic"
         ],
         "required":true,
         "allow_multiple":false
      },
      {  
         "name":"ref_genome_gem",
         "description":"Indexed reference genome",
         "help":"Reference genome, indexed with gem-indexer, on which reads will be mapped.",
         "file_type":[  
            "GEM"
         ],
         "data_type":[  
            "sequence_mapping_index_gem"
         ],
         "required":true,
         "allow_multiple":false
      }
   ],
   "input_files_combinations":[  
      {  
         "description":"Map, parse and filter Hi-C Reads for a custom reference genome",
         "input_files":[  
            "read1",
            "read2",
            "ref_genome",
            "ref_genome_gem"
         ]
      },
      {  
         "description":"Map, parse and filter Hi-C Reads",
         "input_files":[  
            "read1",
            "read2"
         ]
      }
   ],
   "input_files_combinations_internal":[  
      [  
         {  
            "hic_reads":1
         },
         {  
            "hic_reads":1
         },
         {  
            "sequence_genomic":1
         },
         {  
            "sequence_mapping_index_gem":1
         }
      ],
      [  
         {  
            "hic_reads":1
         },
         {  
            "hic_reads":1
         },
         {  
            "sequence_genomic":1
         }
      ],
      [  
         {  
            "hic_reads":1
         },
         {  
            "hic_reads":1
         },
         {  
            "sequence_mapping_index_gem":1
         }
      ],
      [  
         {  
            "hic_reads":1
         },
         {  
            "hic_reads":1
         }
      ]
   ],
   "input_files_public_dir":[  
      {  
         "name":"mapping:refGenome",
         "description":"Reference genome",
         "help":"Reference genome",
         "type":"enum",
         "enum_items":{  
            "name":[  
               "refGenomes/hg19/GEM/hg19.gem",
               "refGenomes/hg38/GEM/hg38.gem",
               "refGenomes/R64-1-1/GEM/R64-1-1.gem",
               "refGenomes/r5.01/GEM/r5.01.gem",
               "refGenomes/mm9/GEM/mm9.gem",
               "refGenomes/spombe/GEM/spombe.gem"
            ],
            "description":[  
               "Homo Sapiens (hg19 / GRCh37)",
               "Homo Sapiens (hg38 / GRCh38)",
               "Saccharomyces Cerevisiae (R64.1.1)",
               "Drosophila Melanogaster (r5.01)",
               "Mouse (NCBI37 / mm9)",
               "Schizosaccharomyces pombe (ASM294v2)"
            ]
         },
         "file_type":[  
            "GEM"
         ],
         "data_type":[  
            "sequence_mapping_index_gem"
         ],
         "required":false,
         "allow_multiple":false
      },
      {  
         "name":"parsing:refGenome",
         "description":"Reference genome",
         "help":"Reference genome",
         "type":"enum",
         "in_public_directory":true,
         "enum_items":{  
            "name":[  
               "refGenomes/hg19/hg19.fa",
               "refGenomes/hg38/hg38.fa",
               "refGenomes/R64-1-1/R64-1-1.fa",
               "refGenomes/r5.01/r5.01.fa",
               "refGenomes/mm9/mm9.fa",
               "refGenomes/spombe/spombe.fa"
            ],
            "description":[  
               "Homo Sapiens (hg19 / GRCh37)",
               "Homo Sapiens (hg38 / GRCh38)",
               "Saccharomyces Cerevisiae (R64.1.1)",
               "Drosophila Melanogaster (r5.01)",
               "Mouse (NCBI37 / mm9)",
               "Schizosaccharomyces pombe (ASM294v2)"
            ]
         },
         "file_type":[  
            "FASTA"
         ],
         "data_type":[  
            "sequence_genomic"
         ],
         "required":false,
         "allow_multiple":false
      }
   ],
   "arguments":[  
      {  
         "name":"mapping:rest_enzyme",
         "description":"Restriction enzyme",
         "help":"For fragment-based mapping. Name of the restriction enzyme used to do the Hi-C experiment",
         "type":"enum",
         "enum_items":{  
            "name":[  
               "SpoDI",
               "BssHII",
               "EciI",
               "BssMI",
               "AsuNHI",
               "BsrFI",
               "AgsI",
               "AxyI",
               "DpnII",
               "BstSFI",
               "SgrBI",
               "AlwI",
               "SelI",
               "MluI",
               "CseI",
               "NgoMIV",
               "SanDI",
               "CciI",
               "BmeDI",
               "BstHHI",
               "BspLU11I",
               "HpaII",
               "Cfr9I",
               "TspMI",
               "MreI",
               "BclI",
               "MlyI",
               "BspT107I",
               "AhlI",
               "BsaWI",
               "SacI",
               "XspI",
               "KroI",
               "MwoI",
               "BfaI",
               "DrdI",
               "EcoT38I",
               "Cgl13032I",
               "BmgBI",
               "PspN4I",
               "PauI",
               "BglI",
               "SalI",
               "Asp718I",
               "BstOI",
               "PspEI",
               "MspI",
               "UbaF14I",
               "VneI",
               "PspPI",
               "BstH2I",
               "BisI",
               "BstPI",
               "Cdi630V",
               "BanII",
               "MslI",
               "Bsu15I",
               "SgrTI",
               "Nli3877I",
               "EsaSSI",
               "Mva1269I",
               "BmtI",
               "Bsp68I",
               "PspXI",
               "LweI",
               "DsaI",
               "PmaCI",
               "AsiGI",
               "BsaBI",
               "SnaBI",
               "CciNI",
               "Sfr274I",
               "StsI",
               "SmiI",
               "PteI",
               "Ksp22I",
               "BshTI",
               "PabI",
               "BstEII",
               "BmgT120I",
               "TspRI",
               "TstI",
               "BssT1I",
               "TscAI",
               "NcoI",
               "MspA1I",
               "CjeP659IV",
               "PsyI",
               "BtgI",
               "BseJI",
               "BshFI",
               "ClaI",
               "Bsp19I",
               "MauBI",
               "Bse1I",
               "RflFIII",
               "CviJI",
               "AspS9I",
               "BsaI",
               "BmcAI",
               "R2_BceSIV",
               "AbsI",
               "AsuII",
               "FauNDI",
               "BsrBI",
               "DraII",
               "BstMWI",
               "CdiI",
               "Eco24I",
               "AlwNI",
               "Bce83I",
               "XmnI",
               "Eco47III",
               "AclWI",
               "Eco91I",
               "UbaPI",
               "DraI",
               "RpaBI",
               "DraRI",
               "Hpy166II",
               "BthCI",
               "Bst2UI",
               "BseXI",
               "XmaIII",
               "AluBI",
               "Cgl13032II",
               "Vha464I",
               "SdeAI",
               "PsrI",
               "Hpy99I",
               "StyD4I",
               "BstACI",
               "BstXI",
               "PspGI",
               "Psp03I",
               "AcvI",
               "BstDEI",
               "BsiHKAI",
               "GluI",
               "CjuII",
               "BsoBI",
               "Sth132I",
               "AcoI",
               "RruI",
               "BlpI",
               "Esp3I",
               "PshAI",
               "XmaI",
               "BstF5I",
               "CjeFV",
               "BpvUI",
               "BseSI",
               "AdeI",
               "RceI",
               "BtsIMutI",
               "BstENI",
               "BssECI",
               "CjePI",
               "FalI",
               "BssAI",
               "EgeI",
               "Ama87I",
               "BstDSI",
               "SauI",
               "BstV2I",
               "SwaI",
               "AarI",
               "AjnI",
               "RseI",
               "AvaI",
               "PvuI",
               "BspOI",
               "BseAI",
               "DpnI",
               "CspCI",
               "AspLEI",
               "PflFI",
               "BpuEI",
               "Hin6I",
               "PalAI",
               "WviI",
               "Van91I",
               "Zsp2I",
               "AssI",
               "DseDI",
               "Bst1107I",
               "Bme1390I",
               "BveI",
               "BstAUI",
               "UnbI",
               "Psp5II",
               "Bpu14I",
               "NgoAVIII",
               "FaeI",
               "TaqI",
               "BsiYI",
               "BscGI",
               "EaeI",
               "SexAI",
               "Eco52I",
               "BsrI",
               "BspT104I",
               "AseI",
               "BfiI",
               "BbvII",
               "KpnI",
               "Sau96I",
               "SimI",
               "BstNI",
               "FnuDII",
               "HaeII",
               "SspDI",
               "BstSNI",
               "SsiI",
               "AclI",
               "EcoO65I",
               "ApoI",
               "ApaBI",
               "AlwFI",
               "HpyCH4IV",
               "MlsI",
               "NdeI",
               "HapII",
               "PpiI",
               "PinAI",
               "Cfr13I",
               "MboII",
               "AflII",
               "BmrFI",
               "BspGI",
               "SdaI",
               "EcoT14I",
               "TseI",
               "BmsI",
               "TspEI",
               "BglII",
               "TasI",
               "AjuI",
               "AloI",
               "PspPPI",
               "SetI",
               "Tsp4CI",
               "AcsI",
               "BstNSI",
               "BmeRI",
               "BseX3I",
               "FspBI",
               "SchI",
               "RsaNI",
               "VpaK11AI",
               "SmlI",
               "NaeI",
               "BseBI",
               "PfoI",
               "Bpu10I",
               "AccII",
               "BshNI",
               "Hin4II",
               "Rsr2I",
               "SacII",
               "Acc65I",
               "BspQI",
               "CjuI",
               "BmeT110I",
               "BtuMI",
               "MseI",
               "AvrII",
               "MaeI",
               "XapI",
               "TaaI",
               "Aor51HI",
               "PscI",
               "Bsp1407I",
               "Bst2BI",
               "NruI",
               "MvaI",
               "BaeI",
               "RdeGBIII",
               "Sno506I",
               "MjaIV",
               "Hpy99XIV",
               "BtsCI",
               "ChaI",
               "PasI",
               "Ple19I",
               "TseFI",
               "SmiMI",
               "Hin1II",
               "BssKI",
               "Sse8387I",
               "PciI",
               "Bsh1236I",
               "MalI",
               "Pfl1108I",
               "Bse118I",
               "MssI",
               "Asi256I",
               "AvaIII",
               "CpoI",
               "Eco130I",
               "SlaI",
               "BcgI",
               "CspI",
               "BdaI",
               "BsaHI",
               "TaiI",
               "BsnI",
               "CstMI",
               "UbaF13I",
               "SfoI",
               "FspAI",
               "MspJI",
               "BfmI",
               "BsuI",
               "NarI",
               "BmiI",
               "BsePI",
               "Eco47I",
               "BstMCI",
               "TaqII",
               "Bsu36I",
               "NspBII",
               "Bme18I",
               "BoxI",
               "RsaI",
               "MaeII",
               "HincII",
               "BssNAI",
               "BstV1I",
               "AflIII",
               "HpyF10VI",
               "Bsp13I",
               "Bst4CI",
               "MabI",
               "BsiSI",
               "AsuHPI",
               "BtrI",
               "BspCNI",
               "BinI",
               "BsgI",
               "XbaI",
               "RdeGBI",
               "ArsI",
               "Lsp1109I",
               "BsrSI",
               "Sau3AI",
               "StrI",
               "Cfr10I",
               "BstC8I",
               "BfuAI",
               "TfiI",
               "Hpy99XIII",
               "TspGWI",
               "AjiI",
               "PmlI",
               "RlaI",
               "CjeFIII",
               "BbvI",
               "Psp124BI",
               "Bsp119I",
               "MboI",
               "GauT27I",
               "GlaI",
               "Bsp24I",
               "TssI",
               "HgaI",
               "MvnI",
               "BanI",
               "PspOMII",
               "BstX2I",
               "AluI",
               "BaeGI",
               "SduI",
               "NmeDI",
               "ZraI",
               "SgsI",
               "BseGI",
               "Hpy188III",
               "PenI",
               "Eco72I",
               "Bse21I",
               "RsrII",
               "Sfr303I",
               "BspMI",
               "BcnI",
               "BstSCI",
               "MluCI",
               "UbaF12I",
               "BpuMI",
               "SgeI",
               "AciI",
               "Mph1103I",
               "ScrFI",
               "EcoRII",
               "Alw21I",
               "MscI",
               "HaeI",
               "BseYI",
               "CfoI",
               "CchII",
               "Hpy8I",
               "HgiCI",
               "DrdII",
               "Bse3DI",
               "PsuI",
               "Bso31I",
               "CviQI",
               "AccB7I",
               "PaeI",
               "BstKTI",
               "BmrI",
               "SseBI",
               "Hpy188I",
               "AccBSI",
               "SmaI",
               "PleI",
               "BasI",
               "EcoNI",
               "NheI",
               "UcoMSI",
               "BplI",
               "BccI",
               "Ppu21I",
               "SstI",
               "SmoI",
               "FaqI",
               "FspEI",
               "BsiEI",
               "BspACI",
               "StuI",
               "AspA2I",
               "BcoDI",
               "Bsp1720I",
               "BcuI",
               "AspBHI",
               "BspTI",
               "Bbr7I",
               "Bsc4I",
               "BbrPI",
               "BsiWI",
               "SphI",
               "HpyAV",
               "Mly113I",
               "GsuI",
               "NciI",
               "PlaDI",
               "SfeI",
               "Ppu10I",
               "BseLI",
               "FriOI",
               "MaeIII",
               "AasI",
               "FspI",
               "CviAII",
               "PvuII",
               "Eco53kI",
               "EheI",
               "MfeI",
               "MflI",
               "EsaBC3I",
               "BsrDI",
               "CauII",
               "BssSI",
               "NhaXI",
               "ErhI",
               "SspD5I",
               "XagI",
               "BshVI",
               "FokI",
               "Sse232I",
               "Hin1I",
               "RpaTI",
               "ApaLI",
               "Alw26I",
               "AsuC2I",
               "ApeKI",
               "AbaSI",
               "SpeI",
               "SgrDI",
               "GsaI",
               "Eco31I",
               "SciI",
               "HinfI",
               "BciVI",
               "HinP1I",
               "Eam1105I",
               "BsuRI",
               "TsoI",
               "MvrI",
               "BspNCI",
               "BscAI",
               "PpsI",
               "BstPAI",
               "BsiHKCI",
               "XmiI",
               "Eam1104I",
               "BceAI",
               "Ecl136II",
               "XmaJI",
               "SfaAI",
               "MspCI",
               "HspAI",
               "RgaI",
               "HphI",
               "Psp1406I",
               "Fsp4HI",
               "Kzo9I",
               "Acc36I",
               "Csp6I",
               "BsmAI",
               "DraIII",
               "EcoO109I",
               "Hpy178III",
               "Acc16I",
               "BetI",
               "BseMII",
               "MluNI",
               "MspR9I",
               "BtsI",
               "SapI",
               "PpuMI",
               "SgfI",
               "EcoRV",
               "PsiI",
               "AatII",
               "BfuI",
               "MroXI",
               "EcoRI",
               "BsmFI",
               "TauI",
               "XhoI",
               "ZrmI",
               "VpaK11BI",
               "BspD6I",
               "BseCI",
               "DinI",
               "FmuI",
               "Bsp143I",
               "Bsp1286I",
               "BspPI",
               "SstE37I",
               "BstFNI",
               "AfiI",
               "RpaB5I",
               "BcefI",
               "SplI",
               "PluTI",
               "BslFI",
               "Bsa29I",
               "CfrI",
               "MnlI",
               "McrI",
               "PfeI",
               "AccIII",
               "CaiI",
               "Bpu1102I",
               "MunI",
               "Tru1I",
               "EagI",
               "Aor13HI",
               "BspLI",
               "AscI",
               "AhdI",
               "NlaIII",
               "SbfI",
               "EclXI",
               "Eco105I",
               "NsbI",
               "MkaDII",
               "PstI",
               "LpnI",
               "Bse8I",
               "Jma19592I",
               "FauI",
               "SfcI",
               "BspEI",
               "LguI",
               "VspI",
               "BsmI",
               "BstZI",
               "AceIII",
               "PciSI",
               "Alw44I",
               "MaqI",
               "SfiI",
               "CdpI",
               "Bst6I",
               "Hsp92I",
               "BpiI",
               "BstUI",
               "XceI",
               "CchIII",
               "PspLI",
               "BlnI",
               "Tth111II",
               "BspFNI",
               "TsuI",
               "CjeNIII",
               "BstZ17I",
               "HgiJII",
               "Msp20I",
               "KasI",
               "UbaF9I",
               "Bbv12I",
               "BseMI",
               "Eco57MI",
               "SdeOSI",
               "HaeIII",
               "BsmBI",
               "Kpn2I",
               "Cfr42I",
               "McaTI",
               "XcmI",
               "SatI",
               "BsbI",
               "BciT130I",
               "LpnPI",
               "BstAPI",
               "NdeII",
               "NlaCI",
               "Ksp632I",
               "AccI",
               "Hin4I",
               "SspI",
               "HpyCH4III",
               "BsrGI",
               "FinI",
               "AfeI",
               "SrfI",
               "Tth111I",
               "CspAI",
               "FbaI",
               "AsuI",
               "Eco32I",
               "KflI",
               "SgrAI",
               "SecI",
               "UbaF11I",
               "CjeNII",
               "NsiI",
               "AquII",
               "BseDI",
               "AquIV",
               "KspAI",
               "BstMBI",
               "GdiII",
               "YkrI",
               "Eco81I",
               "BspHI",
               "BstYI",
               "PspOMI",
               "BauI",
               "AanI",
               "EcoHI",
               "PmeI",
               "ApyPI",
               "FseI",
               "BstMAI",
               "BstSLI",
               "ApaI",
               "BlsI",
               "SaqAI",
               "PshBI",
               "EcoT22I",
               "SfuI",
               "Eco88I",
               "BseRI",
               "FblI",
               "MmeI",
               "BmgI",
               "ScaI",
               "CviRI",
               "TspDTI",
               "AlfI",
               "BmuI",
               "PcsI",
               "RpaI",
               "Eco57I",
               "AgeI",
               "BtgZI",
               "BarI",
               "AhaIII",
               "PctI",
               "FaiI",
               "Eco147I",
               "BpmI",
               "NspV",
               "EarI",
               "PspPRI",
               "CviKI_1",
               "CjeI",
               "PstNI",
               "BsiI",
               "AcuI",
               "OliI",
               "BfuCI",
               "BfrI",
               "NspI",
               "PacI",
               "PdmI",
               "AccB1I",
               "BstBI",
               "BalI",
               "BssNI",
               "HpyCH4V",
               "CsiI",
               "PceI",
               "NlaIV",
               "AquIII",
               "HpySE526I",
               "XhoII",
               "Sse9I",
               "KspI",
               "HauII",
               "Tru9I",
               "Sth302II",
               "Hsp92II",
               "MhlI",
               "BbsI",
               "MstI",
               "BstBAI",
               "DdeI",
               "PssI",
               "AfaI",
               "Bsp120I",
               "NotI",
               "BsaXI",
               "MroI",
               "DriI",
               "MroNI",
               "AoxI",
               "HgiAI",
               "MbiI",
               "Asp700I",
               "HindIII",
               "AcyI",
               "EcoICRI",
               "FatI",
               "BamHI",
               "BslI",
               "AvaII",
               "BspDI",
               "PaeR7I",
               "Psp6I",
               "BstAFI",
               "BfoI",
               "SnaI",
               "SfaNI",
               "RigI",
               "TatI",
               "HpaI",
               "BsaJI",
               "BbvCI",
               "RdeGBII",
               "PspCI",
               "Fnu4HI",
               "Cac8I",
               "HpyF3I",
               "Tsp45I",
               "EspI",
               "Pfl23II",
               "Bsh1285I",
               "Sse8647I",
               "RleAI",
               "BspMII",
               "StyI",
               "PflMI",
               "HhaI",
               "HindII",
               "AsiSI",
               "NmuCI",
               "HgiEII",
               "BseNI",
               "PagI",
               "PdiI",
               "AleI",
               "NmeAIII",
               "BsaAI"
            ]
         },
         "required":false
      },
      {  
         "name":"mapping:iterative_mapping",
         "description":"Iterative mapping",
         "help":"Use iterative mapping instead of fragment-based mapping",
         "type":"boolean",
         "required":false,
         "default":"false"
      },
      {  
         "name":"mapping:windows",
         "description":"Windows",
         "help":"For iterative mapping, or to refine fragment-based mapping. Should be like 1:20 1:25 1:30 1:35 1:40 1:45 1:50",
         "type":"string",
         "required":false
      },
      {  
         "name":"parsing:chromosomes",
         "description":"Filter chromosomes",
         "help":"Only chromosome names to parse. Ex: chrX, 1, 2B, chrMito, Mito, chrXIV.",
         "type":"string",
         "required":false
      },
      {  
         "name":"filtering:filters",
         "description":"Reference genome filters",
         "help":"Reference genome",
         "type":"enum_multiple",
         "enum_items":{  
            "name":[  
               "1",
               "2",
               "3",
               "4",
               "5",
               "6",
               "7",
               "8",
               "9",
               "10"
            ],
            "description":[  
               "self-circle",
               "dangling-end",
               "error",
               "dangling-end too",
               "too close from RES",
               "too short",
               "too large",
               "over-represented",
               "duplicated",
               "random breaks"
            ]
         },
         "required":true,
         "default":[  
            "1",
            "2",
            "3",
            "4",
            "9",
            "10"
         ]
      },
      {  
         "name":"filtering:min_dist_RE",
         "description":"Minimum distance to RE site",
         "help":"Used to exclude reads starting too close from a RE site. Such reads are called pseudo-dangling-ends.",
         "type":"integer",
         "required":false,
         "default":"5"
      },
      {  
         "name":"filtering:min_fragment_size",
         "description":"Minimum fragment size",
         "help":"To exclude small genomic RE fragments (smaller than sequenced reads)",
         "type":"integer",
         "required":false,
         "default":"50"
      },
      {  
         "name":"filtering:max_fragment_size",
         "description":"Maximum fragment size",
         "help":"To exclude large genomic RE fragments (probably resulting from gaps in the reference genome)",
         "type":"integer",
         "required":false,
         "default":"100000"
      }
   ],
   "output_files":[  
      {  
         "name":"paired_reads",
         "required":true,
         "allow_multiple":false,
         "file":{  
            "file_type":"BAM",
            "data_type":"hic_sequences",
            "compressed":"null",
            "meta_data":{  
               "tool":"tadbit_map_parse_filter",
               "description":"Paired end reads",
               "visible":true
            }
         }
      },
      {  
         "name":"paired_reads_bai",
         "required":true,
         "allow_multiple":false,
         "file":{  
            "file_type":"BAI",
            "data_type":"hic_sequences",
            "compressed":"null",
            "meta_data":{  
               "tool":"tadbit_map_parse_filter",
               "description":"Paired end reads",
               "visible":false
            }
         }
      },
      {  
         "name":"map_parse_filter_stats",
         "required":true,
         "allow_multiple":false,
         "file":{  
            "file_type":"TAR",
            "data_type":"tool_statistics",
            "compressed":"gzip",
            "meta_data":{  
               "description":"TADbit mapping, parsing and filtering statistics",
               "tool":"tadbit_map_parse_filter",
               "visible":true
            }
         }
      }
   ]
}{  
   "_id":"tadbit_bin",
   "name":"TADbit bin",
   "title":"TADbit Hi-C binning",
   "short_description":"TADbit Hi-C binning.",
   "long_description":"TADbit is a complete Python library to deal with all steps to analyze, model and explore 3C-based data. With TADbit the user can map FASTQ files to obtain raw interaction binned matrices (Hi-C like matrices), normalize and correct interaction matrices, identify adn compare the so-called Topologically Associating Domains (TADs), build 3D models from the interaction matrices, and finally, extract structural properties from the models. TADbit is complemented by TADkit for visualizing 3D models.",
   "owner":{  
      "institution":"CNAG",
      "author":"Francois Serra",
      "contact":"serra.francois@gmail.com",
      "url":"http://sgt.cnag.cat/3dg/tadbit/"
   },
   "status":1,
   "external":true,
   "keywords":[  
      "dna",
      "chromatin",
      "hi-c",
      "interaction",
      "sequence"
   ],
   "keywords_tool":[  
      "interaction matrix"
   ],
   "infrastructure":{  
      "memory":4,
      "cpus":12,
      "executable":"/home/pmes/code/mg-process-fastq/tadbit_bin_wrapper.py",
      "clouds":{  
         "mug-irb":{  
            "launcher":"PMES",
            "workflowType":"Single",
            "initialVMs":1,
            "minimumVMs":1,
            "maximumVMs":1,
            "imageName":"uuid_tadbitmgtoolapi_47",
            "default_cloud":false
         }
      }
   },
   "input_files":[  
      {  
         "name":"bamin",
         "description":"TADbit-generated BAM file",
         "help":"path to a TADbit-generated BAM file with filtered reads",
         "file_type":[  
            "BAM"
         ],
         "data_type":[  
            "hic_sequences"
         ],
         "required":true,
         "allow_multiple":false
      },
      {  
         "name":"hic_biases",
         "description":"TADbit-generated PICKLE file",
         "help":"path to a TADbit-generated PICKLE file with HiC biases",
         "file_type":[  
            "PICKLE"
         ],
         "data_type":[  
            "hic_biases"
         ],
         "required":false,
         "allow_multiple":false
      }
   ],
   "input_files_combinations":[  
      {  
         "description":"Produce binned matrix from Hi-C paired Reads ",
         "input_files":[  
            "bamin",
            "hic_biases"
         ]
      }
   ],
   "input_files_combinations_internal":[  
      [  
         {  
            "hic_sequences":1
         },
         {  
            "hic_biases":1
         }
      ]
   ],
   "arguments":[  
      {  
         "name":"resolution",
         "description":"Resolution of the normalization",
         "help":"Resolution of the normalization.",
         "type":"string",
         "required":true,
         "default":"100000"
      },
      {  
         "name":"coord1",
         "description":"Coordinate of the region to retrieve.",
         "help":"Coordinate of the region to retrieve. By default all genome, arguments can be either one chromosome name, or the coordinate in the form: chr3:110000000-120000000",
         "type":"string",
         "required":false,
         "default":""
      }
   ],
   "output_files":[  
      {  
         "name":"hic_contacts_matrix_raw",
         "required":true,
         "allow_multiple":false,
         "file":{  
            "file_type":"TXT",
            "file_path":"hic_contacts_matrix.txt",
            "data_type":"hic_contacts_matrix",
            "compressed":"null",
            "meta_data":{  
               "tool":"tadbit_bin",
               "description":"HiC contact matrix raw",
               "visible":true
            }
         }
      },
      {  
         "name":"hic_contacts_matrix_norm",
         "required":false,
         "allow_multiple":false,
         "file":{  
            "file_type":"TXT",
            "file_path":"hic_contacts_matrix_norm.txt",
            "data_type":"hic_contacts_matrix",
            "compressed":"null",
            "meta_data":{  
               "tool":"tadbit_bin",
               "description":"HiC contact matrix normalized",
               "visible":true
            }
         }
      },
      {  
         "name":"tadkit_matrix",
         "required":false,
         "allow_multiple":false,
         "file":{  
            "file_type":"JSON",
            "file_path":"tadkit_matrix.json",
            "data_type":"chromatin_3dmodel_ensemble",
            "compressed":"null",
            "meta_data":{  
               "tool":"tadbit_bin",
               "description":"HiC matrix for TADkit",
               "visible":true
            }
         }
      },
      {  
         "name":"bin_stats",
         "required":true,
         "allow_multiple":false,
         "file":{  
            "file_type":"TAR",
            "file_path":"bin_stats.tar.gz",
            "data_type":"tool_statistics",
            "compressed":"gzip",
            "meta_data":{  
               "description":"TADbit HiC matrices in png format",
               "tool":"tadbit_bin",
               "visible":true
            }
         }
      }
   ]
}{  
   "_id":"process_rnaseq",
   "name":"Process RNA-seq",
   "title":"RNA-seq Analysis",
   "short_description":"Align RNA-seq data, gene expression calling with Kallisto",
   "long_description":"Pipeline to calculate the level of gene expression for an RNA-seq experiment. This uses Kallisto for the quantification of the experiment. The FASTQ reads are aligned to transcripts, from which the level of expression is called.",
   "owner":{  
      "institution":"EMBL-EBI",
      "author":"Mark McDowall",
      "contact":"mcdowall@ebi.ac.uk",
      "url":"https://github.com/Multiscale-Genomics/mg-process-fastq"
   },
   "status":1,
   "external":true,
   "has_custom_viewer":false,
   "keywords":[  
      "next gen seq",
      "dna",
      "rna",
      "sequence",
      "epigenetics"
   ],
   "keywords_tool":[  
      "gene expression"
   ],
   "infrastructure":{  
      "memory":12,
      "cpus":4,
      "executable":"/usr/local/code/mg-process-fastq/process_rnaseq.py",
      "clouds":{  
         "mug-irb":{  
            "launcher":"PMES",
            "workflowType":"COMPSs",
            "minimumVMs":1,
            "initialVMs":1,
            "imageName":"uuid_vmgenericmgtoolapi_24",
            "default_cloud":false
         }
      }
   },
   "input_files":[  
      {  
         "name":"fastq1",
         "description":"RNA-seq read file",
         "help":"path to a FASTQ sequence read file",
         "file_type":[  
            "FASTQ"
         ],
         "data_type":[  
            "data_rna_seq"
         ],
         "required":true,
         "allow_multiple":false
      },
      {  
         "name":"fastq2",
         "description":"RNA-seq read file (paired)",
         "help":"path to a FASTQ sequence read file",
         "file_type":[  
            "FASTQ"
         ],
         "data_type":[  
            "data_rna_seq"
         ],
         "required":false,
         "allow_multiple":false
      },
      {  
         "name":"cdna",
         "description":"Genome cDNA for custom assembly",
         "help":"FASTA file with the cDNA sequences for the genome assembly mapping the given RNA-seq reads.",
         "file_type":[  
            "FASTA"
         ],
         "data_type":[  
            "sequence_cdna"
         ],
         "required":true,
         "allow_multiple":false
      },
      {  
         "name":"gff",
         "description":"Gene annotations for custom assembly",
         "help":"GFF file with the gene and transcript annotations for the given cDNA assembly",
         "file_type":[  
            "GFF"
         ],
         "data_type":[  
            "sequence_annotation"
         ],
         "required":true,
         "allow_multiple":false
      }
   ],
   "input_files_public_dir":[  
      {  
         "name":"cdna_public",
         "description":"Genome cDNA for VRE assemblies",
         "help":"FASTA file with the cDNA sequences for one of the genome assemblies integrated into VRE.",
         "type":"enum",
         "enum_items":{  
            "name":[  
               "refGenomes/hg19/refMrna.fa",
               "refGenomes/hg38/refMrna.fa",
               "refGenomes/r5.01/refMrna.fa",
               "refGenomes/dm6/refMrna.fa",
               "refGenomes/mm10/refMrna.fa",
               "refGenomes/mm9/refMrna.fa",
               "refGenomes/R64-1-1/refMrna.fa",
               "refGenomes/spombe/refMrna.fa"
            ],
            "description":[  
               "Homo Sapiens (hg19 / GRCh37)",
               "Homo Sapiens (hg38 / GRCh38)",
               "Drosophila Melanogaster (r5.01 / dm3)",
               "Drosophila Melanogaster (BDGP r6 + ISO1 MT / dm6)",
               "Mouse (GRCm38 / mm10)",
               "Mouse (NCBI37 / mm9)",
               "Saccharomyces cerevisiae (R64-1-1)",
               "Schizosaccharomyces pombe (ASM294v2)"
            ]
         },
         "file_type":[  
            "FASTA"
         ],
         "data_type":[  
            "sequence_cdna"
         ],
         "required":false,
         "allow_multiple":false
      },
      {  
         "name":"gff_public",
         "description":"Gene annotations for VRE assemblies",
         "help":"GFF file with the gene and transcript annotations for one of the assemblies integrated into VRE.",
         "type":"enum",
         "enum_items":{  
            "name":[  
               "refGenomes/hg19/genes.gff",
               "refGenomes/hg38/genes.gff",
               "refGenomes/r5.01/genes.gff",
               "refGenomes/dm6/genes.gff",
               "refGenomes/mm10/genes.gff",
               "refGenomes/mm9/genes.gff",
               "refGenomes/R64-1-1/genes.gff",
               "refGenomes/spombe/genes.gff"
            ],
            "description":[  
               "Homo Sapiens (hg19 / GRCh37)",
               "Homo Sapiens (hg38 / GRCh38)",
               "Drosophila Melanogaster (r5.01 / dm3)",
               "Drosophila Melanogaster (BDGP r6 + ISO1 MT / dm6)",
               "Mouse (GRCm38 / mm10)",
               "Mouse (NCBI37 / mm9)",
               "Saccharomyces cerevisiae (R64-1-1)",
               "Schizosaccharomyces pombe (ASM294v2)"
            ]
         },
         "file_type":[  
            "GFF"
         ],
         "data_type":[  
            "sequence_annotation"
         ],
         "required":false,
         "allow_multiple":false
      }
   ],
   "input_files_combinations":[  
      {  
         "description":"Process RNA-seq reads",
         "input_files":[  
            "fastq1",
            "fastq2"
         ],
         "input_files_public_dir":[  
            "cdna_public",
            "gff_public"
         ]
      },
      {  
         "description":"Process RNA-seq reads for a custom assembly",
         "input_files":[  
            "fastq1",
            "fastq2",
            "cdna",
            "gff"
         ]
      }
   ],
   "input_files_combinations_internal":[  
      [  
         {  
            "data_rna_seq":1
         },
         {  
            "data_rna_seq":1
         },
         {  
            "sequence_cdna":1
         },
         {  
            "sequence_annotation":1
         }
      ],
      [  
         {  
            "data_rna_seq":1
         },
         {  
            "sequence_cdna":1
         },
         {  
            "sequence_annotation":1
         }
      ],
      [  
         {  
            "data_rna_seq":1
         },
         {  
            "data_rna_seq":1
         }
      ],
      [  
         {  
            "data_rna_seq":1
         }
      ]
   ],
   "arguments":[  

   ],
   "output_files":[  
      {  
         "name":"index",
         "required":true,
         "allow_multiple":false,
         "file":{  
            "file_type":"IDX",
            "data_type":"data_rna_seq",
            "meta_data":{  
               "visible":true,
               "tool":"process_rnaseq",
               "description":"Index the transcripts"
            },
            "file_path":"kallisto.idx",
            "compressed":"null"
         }
      },
      {  
         "name":"abundance_h5_file",
         "required":true,
         "allow_multiple":false,
         "file":{  
            "file_type":"HDF5",
            "meta_data":{  
               "visible":true,
               "tool":"process_rnaseq",
               "description":"Filtered aligned sequences"
            },
            "file_path":"kallisto.abundance.h5",
            "data_type":"data_rna_seq",
            "compressed":"null"
         }
      },
      {  
         "name":"abundance_tsv_file",
         "required":false,
         "allow_multiple":false,
         "file":{  
            "file_type":"TSV",
            "meta_data":{  
               "visible":true,
               "tool":"process_rnaseq",
               "description":"Background aligned sequences"
            },
            "file_path":"kallisto.abundance.tsv",
            "data_type":"data_rna_seq",
            "compressed":"null"
         }
      },
      {  
         "name":"run_info_file",
         "required":false,
         "allow_multiple":false,
         "file":{  
            "file_type":"JSON",
            "meta_data":{  
               "visible":true,
               "tool":"process_rnaseq",
               "description":"Kallisto run information file"
            },
            "file_path":"kallisto.run_info.json",
            "data_type":"data_rna_seq",
            "compressed":"null"
         }
      },
      {  
         "name":"abundance_gff_file",
         "required":false,
         "allow_multiple":false,
         "file":{  
            "file_type":"GFF3",
            "meta_data":{  
               "visible":true,
               "tool":"process_rnaseq",
               "description":"Background aligned sequences"
            },
            "file_path":"kallisto.abundance.gff",
            "data_type":"configuration_file",
            "compressed":"null"
         }
      }
   ]
}{  
   "_id":"process_wgbs",
   "name":"Process WGBS",
   "title":"WGBS Analysis",
   "short_description":"Align WGBS data, uses BS Seeker2 and Bowtie2",
   "long_description":"Pipeline for the determination of DNA methylation patterns. Uses BS Seeker 2 to align and analyses the sequence reads of high throughput bisulfite studies.",
   "owner":{  
      "institution":"EMBL-EBI",
      "author":"Mark McDowall",
      "contact":"mcdowall@ebi.ac.uk",
      "user":"",
      "url":"https://github.com/Multiscale-Genomics/mg-process-fastq"
   },
   "status":1,
   "external":true,
   "has_custom_viewer":false,
   "keywords":[  
      "dna",
      "epigenetics",
      "next gen seq",
      "sequence"
   ],
   "keywords_tool":[  
      "methylation"
   ],
   "infrastructure":{  
      "memory":12,
      "cpus":4,
      "executable":"/usr/local/code/mg-process-fastq/process_wgbs.py",
      "clouds":{  
         "mug-irb":{  
            "launcher":"PMES",
            "workflowType":"COMPSs",
            "minimumVMs":1,
            "initialVMs":1,
            "imageName":"uuid_vmgenericmgtoolapi_24",
            "imageType":"extra_large",
            "default_cloud":false
         }
      }
   },
   "input_files":[  
      {  
         "name":"fastq1",
         "description":"Sequence read file",
         "help":"path to a FASTQ sequence read file",
         "file_type":[  
            "FASTQ"
         ],
         "data_type":[  
            "data_wgbs"
         ],
         "required":true,
         "allow_multiple":false
      },
      {  
         "name":"fastq2",
         "description":"Sequence read file",
         "help":"path to a FASTQ sequence read file",
         "file_type":[  
            "FASTQ"
         ],
         "data_type":[  
            "data_wgbs"
         ],
         "required":false,
         "allow_multiple":false
      },
      {  
         "name":"genome",
         "description":"Genome sequence file",
         "help":"path to a assembly sequence file",
         "file_type":[  
            "FASTA"
         ],
         "data_type":[  
            "sequence_genomic"
         ],
         "required":true,
         "allow_multiple":false
      }
   ],
   "input_files_public_dir":[  
      {  
         "name":"genome_public",
         "description":"Reference sequence of the genome assembly",
         "help":"FASTA file  of the genome assembly mapping the given Chip-seq reads. If your assembly is not listed, you can use your own genome here by building its indexes with the 'Process Genome' tool.",
         "type":"enum",
         "enum_items":{  
            "name":[  
               "refGenomes/R64-1-1/R64-1-1.fa",
               "refGenomes/hg19/hg19.fa",
               "refGenomes/hg38/hg38.fa",
               "refGenomes/r5.01/r5.01.fa",
               "refGenomes/dm6/dm6.fa",
               "refGenomes/danRer11/danRer11.fa",
               "refGenomes/mm10/mm10.fa",
               "refGenomes/mm9/mm9.fa",
               "refGenomes/xenTro9/xenTro9.fa",
               "refGenomes/spombe/spombe.fa"
            ],
            "description":[  
               "Saccharomyces cerevisiae (R64-1-1)",
               "Homo Sapiens (hg19 / GRCh37)",
               "Homo Sapiens (hg38 / GRCh38)",
               "Drosophila Melanogaster (r5.01 / dm3)",
               "Drosophila Melanogaster (BDGP r6 + ISO1 MT / dm6)",
               "Zebra Fish (GRCz11 / danRer11)",
               "Mouse (GRCm38 / mm10)",
               "Mouse (NCBI37 / mm9)",
               "Xenopus tropicalis (v9.1 / xenTro9)",
               "Schizosaccharomyces pombe (ASM294v2)"
            ]
         },
         "file_type":[  
            "FASTA"
         ],
         "data_type":[  
            "sequence_genomic"
         ],
         "required":false,
         "allow_multiple":false
      }
   ],
   "input_files_combinations":[  
      {  
         "description":"Process paired/single end reads to identify methylation regions",
         "input_files":[  
            "fastq1",
            "fastq2"
         ],
         "input_files_public":[  
            "genome_public"
         ]
      },
      {  
         "description":"Process paired/single end reads to identify methylation regions (user-defined assembly)",
         "input_files":[  
            "fastq1",
            "fastq2",
            "genome"
         ]
      }
   ],
   "input_files_combinations_internal":[  
      [  
         {  
            "data_wgbs":1
         },
         {  
            "data_wgbs":1
         },
         {  
            "sequence_genomic":1
         }
      ],
      [  
         {  
            "data_wgbs":1
         },
         {  
            "sequence_genomic":1
         }
      ],
      [  
         {  
            "data_wgbs":1
         },
         {  
            "data_wgbs":1
         }
      ],
      [  
         {  
            "data_wgbs":1
         }
      ]
   ],
   "arguments":[  
      {  
         "name":"aligner",
         "description":"Name of the aligner",
         "help":"Name of the aligner",
         "type":"hidden",
         "required":true,
         "value":"bowtie2"
      },
      {  
         "name":"aligner_path",
         "description":"Location of the aligner libraries",
         "help":"Location of the aligner libraries",
         "type":"hidden",
         "required":true,
         "value":"/usr/local/lib/bowtie2-2.3.4"
      },
      {  
         "name":"bss_path",
         "description":"Location of the BS Seeker2 code libraries",
         "help":"Location of the BS Seeker2 code libraries",
         "type":"hidden",
         "required":true,
         "value":"/usr/local/lib/BSseeker2"
      }
   ],
   "output_files":[  
      {  
         "name":"index",
         "required":true,
         "allow_multiple":false,
         "file":{  
            "file_type":"TAR",
            "meta_data":{  
               "visible":true,
               "tool":"process_wgbs",
               "description":"Output"
            },
            "file_path":"bt2.tar.gz",
            "data_type":"sequence_mapping_index_bowtie",
            "compressed":"gzip"
         }
      },
      {  
         "name":"fastq1_filtered",
         "required":true,
         "allow_multiple":false,
         "file":{  
            "file_type":"FASTQ",
            "meta_data":{  
               "visible":true,
               "tool":"process_wgbs",
               "description":"Filtered reads"
            },
            "file_path":"fastq1_filtered.fastq",
            "data_type":"data_wgbs",
            "compressed":"null"
         }
      },
      {  
         "name":"fastq2_filtered",
         "required":false,
         "allow_multiple":false,
         "file":{  
            "file_type":"FASTQ",
            "meta_data":{  
               "visible":true,
               "tool":"process_wgbs",
               "description":"Filtered reads"
            },
            "file_path":"fastq2_filtered.fastq",
            "data_type":"data_wgbs",
            "compressed":"null"
         }
      },
      {  
         "name":"bam",
         "required":true,
         "allow_multiple":false,
         "file":{  
            "file_type":"BAM",
            "meta_data":{  
               "visible":true,
               "tool":"process_wgbs",
               "description":"Aligned sequences"
            },
            "file_path":"wgbs.bam",
            "data_type":"data_wgbs",
            "compressed":"null"
         }
      },
      {  
         "name":"bai",
         "required":false,
         "allow_multiple":false,
         "file":{  
            "file_type":"BAI",
            "meta_data":{  
               "visible":false,
               "tool":"process_wgbs",
               "description":"Bam index file"
            },
            "file_path":"wgbs.bam.bai",
            "data_type":"data_wgbs",
            "compressed":"null"
         }
      },
      {  
         "required":false,
         "allow_multiple":false,
         "name":"wig_file",
         "file":{  
            "file_type":"BW",
            "meta_data":{  
               "visible":true,
               "tool":"process_wgbs",
               "description":"WGBS peaks"
            },
            "file_path":"wgbs.bw",
            "data_type":"data_wgbs",
            "compressed":"null"
         }
      },
      {  
         "required":false,
         "allow_multiple":false,
         "name":"cgmap_file",
         "file":{  
            "file_type":"TSV",
            "meta_data":{  
               "visible":true,
               "tool":"process_wgbs",
               "description":"CGmap file"
            },
            "file_path":"cgmap.tsv",
            "data_type":"data_wgbs",
            "compressed":"null"
         }
      },
      {  
         "required":false,
         "allow_multiple":false,
         "name":"atcgmap_file",
         "file":{  
            "file_type":"TSV",
            "meta_data":{  
               "visible":true,
               "tool":"process_wgbs",
               "description":"ATCGmap file"
            },
            "file_path":"atcgmap.tsv",
            "data_type":"data_wgbs",
            "compressed":"null"
         }
      }
   ]
}{  
   "_id":"chAs",
   "title":"COMING SOON",
   "name":"Chromatin Assortativity",
   "short_description":"Chromatin Assortativity",
   "owner":{  
      "institution":"Centre de Recherches en Cancérologie de Toulouse",
      "author":"Miguel Madrid Mencia",
      "contact":"mimadrid@ucm.es",
      "url":"https://github.com/mimadrid/Chromatin_Assortativity",
      "user":"mimadrid@ucm.es"
   },
   "status":0,
   "external":true,
   "has_custom_viewer":true,
   "keywords":[  
      "chromatin",
      "interaction"
   ],
   "keywords_tool":[  
      "capture HiC"
   ],
   "infrastructure":{  
      "memory":16,
      "cpus":4,
      "executable":"/home/user/chAs/chAs",
      "clouds":{  
         "mug-bsc":{  
            "launcher":"PMES",
            "workflowType":"Single",
            "minimumVMs":1,
            "initialVMs":1,
            "imageName":"uuid"
         },
         "mug-irb":{  
            "launcher":"SGE",
            "queue":"chAs.q",
            "default_cloud":true
         }
      }
   },
   "input_files":[  
      {  
         "name":"features",
         "description":"Features description",
         "help":"Features help",
         "file_type":[  
            "TXT"
         ],
         "data_type":[  
            "ch_features"
         ],
         "required":true,
         "allow_multiple":false
      },
      {  
         "name":"network",
         "description":"Network description",
         "help":"Network help",
         "file_type":[  
            "TXT"
         ],
         "data_type":[  
            "ch_network"
         ],
         "required":false,
         "allow_multiple":false
      },
      {  
         "name":"matrix",
         "description":"Matrix description",
         "help":"Matrix help",
         "file_type":[  
            "TXT"
         ],
         "data_type":[  
            "ch_matrix"
         ],
         "required":false,
         "allow_multiple":false
      }
   ],
   "input_files_combinations":[  
      {  
         "description":"Analyse chromatin features from matrix",
         "input_files":[  
            "features",
            "matrix"
         ]
      },
      {  
         "description":"Analyse chromatin features from network",
         "input_files":[  
            "features",
            "network"
         ]
      }
   ],
   "input_files_combinations_internal":[  
      [  
         {  
            "ch_features":1
         },
         {  
            "ch_matrix":1
         }
      ],
      [  
         {  
            "ch_features":1
         },
         {  
            "ch_network":1
         }
      ]
   ],
   "arguments":[  
      {  
         "name":"threshold",
         "description":"Threshold description",
         "help":"Here goes the threshold help",
         "type":"integer",
         "required":true,
         "default":[  
            "55"
         ]
      }
   ],
   "output_files":[  
      {  
         "name":"scored_features",
         "required":true,
         "allow_multiple":false,
         "file":{  
            "file_type":"CSV",
            "data_type":"ch_features_scored",
            "compressed":"null",
            "meta_data":{  
               "description":"Chromatin features with scores",
               "tool":"chAs",
               "visible":true
            }
         }
      },
      {  
         "name":"network",
         "required":false,
         "allow_multiple":false,
         "file":{  
            "file_type":"TXT",
            "data_type":"ch_network",
            "compressed":"null",
            "meta_data":{  
               "description":"Here goes a short description for this output",
               "tool":"chAs",
               "visible":true
            }
         }
      },
      {  
         "name":"statistics",
         "required":true,
         "allow_multiple":false,
         "file":{  
            "file_type":"TAR",
            "data_type":"tool_statistics",
            "compressed":"gzip",
            "meta_data":{  
               "description":"Compressed results of the tool",
               "tool":"chAs",
               "visible":false
            }
         }
      }
   ]
}{  
   "_id":"macs2",
   "name":"MACS2",
   "title":"MACS2 peak caller",
   "short_description":"MACS identifies statistically significantly enriched genomic regions in ChIP- and DNase-seq data",
   "long_description":"MACS2 (Model-based Analysis of ChIP-Seq) identifies transcript factor binding sites. MACS captures the influence of genome complexity to evaluate the significance of enriched ChIP regions, and MACS improves the spatial resolution of binding sites through combining the information of both sequencing tag position and orientation. MACS can be easily used for ChIP-Seq data alone, or with control sample with the increase of specificity. ",
   "url":"https://github.com/taoliu/MACS",
   "publication":"10.1186/gb-2008-9-9-r137",
   "owner":{  
      "author":"Mark McDowall",
      "institution":"EBI",
      "contact":"mcdowall@ebi.ac.uk"
   },
   "status":1,
   "external":true,
   "keywords":[  
      "next gen seq",
      "dna"
   ],
   "keywords_tool":[  
      "ChIP-seq",
      "peak caller"
   ],
   "infrastructure":{  
      "memory":12,
      "cpus":4,
      "executable_old":"/usr/local/code/mg-process-macs2/mg_process_macs2/tool/macs2.py",
      "executable":"/usr/local/code/mg-process-macs2/process_macs2.py",
      "clouds":{  
         "mug-irb":{  
            "launcher":"PMES",
            "workflowType":"COMPSs",
            "minimumVMs":1,
            "initialVMs":1,
            "imageName_old":"uuid_Macs2WorkshopMgToolApi_49",
            "imageName":"uuid_macs2workshopmgtoolapi_49",
            "default_cloud":true
         }
      }
   },
   "input_files":[  
      {  
         "name":"bam",
         "description":"ChIP-seq reads",
         "help":"Aligned and filtered ChIP-seq reads (bam)",
         "file_type":[  
            "BAM"
         ],
         "data_type":[  
            "data_chip_seq"
         ],
         "required":true,
         "allow_multiple":false
      }
   ],
   "input_files_combinations":[  
      {  
         "description":"Call peaks on ChIP-Seq reads",
         "input_files":[  
            "bam"
         ]
      }
   ],
   "input_files_combinations_internal":[  
      [  
         {  
            "data_chip_seq":1
         }
      ]
   ],
   "arguments":[  
      {  
         "name":"macs_nomodel_param",
         "description":"No model",
         "help":"Set it to TRUE if you don't want to output the model",
         "type":"boolean",
         "default":"false"
      }
   ],
   "has_custom_viewer":false,
   "output_files":[  
      {  
         "name":"narrow_peak",
         "required":false,
         "allow_multiple":false,
         "file":{  
            "file_type":"BED",
            "data_type":"data_chip_seq",
            "meta_data":{  
               "visible":true,
               "description":"MACS2 output: narrow peak"
            }
         }
      },
      {  
         "name":"summits",
         "required":false,
         "allow_multiple":false,
         "file":{  
            "file_type":"BED",
            "data_type":"data_chip_seq",
            "meta_data":{  
               "visible":true,
               "description":"MACS2 output: summits"
            }
         }
      },
      {  
         "name":"broad_peak",
         "required":false,
         "allow_multiple":false,
         "file":{  
            "file_type":"BED",
            "data_type":"data_chip_seq",
            "meta_data":{  
               "visible":true,
               "description":"MACS2 output: broad peak"
            }
         }
      },
      {  
         "name":"gapped_peak",
         "required":false,
         "allow_multiple":false,
         "file":{  
            "file_type":"BED",
            "data_type":"data_chip_seq",
            "meta_data":{  
               "visible":true,
               "description":"MACS2 output: gapped Peak"
            }
         }
      }
   ]
}{  
   "_id":"bowtie",
   "name":"Bowtie2",
   "title":"Bowtie2 Alignment",
   "short_description":"Align FASTQ data using Bowtie2",
   "long_description":"Align single and paired end data using the Bowtie2 alignment tool",
   "url":"https://github.com/Multiscale-Genomics/mg-process-fastq",
   "publication":"http://www.nature.com/nmeth/journal/v9/n4/full/nmeth.1923.html",
   "owner":{  
      "institution":"EMBL-EBI",
      "author":"Mark McDowall",
      "contact":"mcdowall@ebi.ac.uk",
      "url":"https://github.com/Multiscale-Genomics/mg-process-fastq"
   },
   "status":1,
   "external":true,
   "keywords":[  
      "next gen seq",
      "dna"
   ],
   "keywords_tool":[  
      "Bowtie",
      "Aligner",
      "BAM"
   ],
   "infrastructure":{  
      "memory":12,
      "cpus":4,
      "executable":"/usr/local/code/mg-process-fastq/process_align_bowtie.py",
      "clouds":{  
         "mug-irb":{  
            "launcher":"PMES",
            "imageName":"uuid_vmgenericmgtoolapi_24",
            "workflowType":"COMPSs",
            "minimumVMs":1,
            "initialVMs":1,
            "default_cloud":true
         }
      }
   },
   "input_files":[  
      {  
         "name":"loc",
         "description":"Sequence read file",
         "help":"path to a FASTQ sequence read file",
         "file_type":[  
            "FASTQ"
         ],
         "data_type":[  
            "data_chip_seq",
            "data_mnase_seq",
            "data_rna_seq",
            "data_wgbs"
         ],
         "required":true,
         "allow_multiple":false
      },
      {  
         "name":"fastq2",
         "description":"Sequence read file",
         "help":"path to a FASTQ sequence read file",
         "file_type":[  
            "FASTQ"
         ],
         "data_type":[  
            "data_chip_seq",
            "data_mnase_seq",
            "data_rna_seq",
            "data_wgbs"
         ],
         "required":false,
         "allow_multiple":false
      },
      {  
         "name":"genome",
         "description":"Genome sequence file",
         "help":"path to a assembly sequence file",
         "file_type":[  
            "FASTA"
         ],
         "data_type":[  
            "sequence_genomic",
            "sequence_dna"
         ],
         "required":true,
         "allow_multiple":false
      },
      {  
         "name":"index",
         "description":"Bowtie2 index for matching species",
         "help":"path to matching Bowtie2 index file",
         "file_type":[  
            "TAR"
         ],
         "data_type":[  
            "sequence_mapping_index_bowtie"
         ],
         "required":true,
         "allow_multiple":false
      }
   ],
   "input_files_public_dir":[  
      {  
         "name":"genome_public",
         "description":"Reference sequence of the genome assembly",
         "help":"FASTA file  of the genome assembly mapping the given Chip-seq reads. If your assembly is not listed, you can use your own genome here by building its indexes with the 'Process Genome' tool.",
         "type":"enum",
         "enum_items":{  
            "name":[  
               "refGenomes/R64-1-1/R64-1-1.fa",
               "refGenomes/hg19/hg19.fa",
               "refGenomes/hg38/hg38.fa",
               "refGenomes/r5.01/r5.01.fa",
               "refGenomes/dm6/dm6.fa",
               "refGenomes/danRer11/danRer11.fa",
               "refGenomes/mm10/mm10.fa",
               "refGenomes/mm9/mm9.fa",
               "refGenomes/xenTro9/xenTro9.fa",
               "refGenomes/spombe/spombe.fa"
            ],
            "description":[  
               "Saccharomyces cerevisiae (R64-1-1)",
               "Homo Sapiens (hg19 / GRCh37)",
               "Homo Sapiens (hg38 / GRCh38)",
               "Drosophila Melanogaster (r5.01 / dm3)",
               "Drosophila Melanogaster (BDGP r6 + ISO1 MT / dm6)",
               "Zebra Fish (GRCz11 / danRer11)",
               "Mouse (GRCm38 / mm10)",
               "Mouse (NCBI37 / mm9)",
               "Xenopus tropicalis (v9.1 / xenTro9)",
               "Schizosaccharomyces pombe (ASM294v2)"
            ]
         },
         "file_type":[  
            "FASTA"
         ],
         "data_type":[  
            "sequence_genomic",
            "sequence_dna"
         ],
         "required":true,
         "allow_multiple":false
      },
      {  
         "name":"index_public",
         "description":"Bowtie indexes of the genome assembly",
         "help":"Bowtie index files of the genome assembly.",
         "type":"enum",
         "enum_items":{  
            "name":[  
               "refGenomes/R64-1-1/BOWTIE2/bt2.tar.gz",
               "refGenomes/hg19/BOWTIE2/bt2.tar.gz",
               "refGenomes/hg38/BOWTIE2/bt2.tar.gz",
               "refGenomes/r5.01/BOWTIE2/bt2.tar.gz",
               "refGenomes/dm6/BWA/BOWTIE2/bt2.tar.gz",
               "refGenomes/danRer11/BOWTIE2/bt2.tar.gz",
               "refGenomes/mm10/BWA/BOWTIE2/bt2.tar.gz",
               "refGenomes/mm9/BWA/BOWTIE2/bt2.tar.gz",
               "refGenomes/xenTro9/BOWTIE2/bt2.tar.gz",
               "refGenomes/spombe/BOWTIE2/bt2.tar.gz"
            ],
            "description":[  
               "Saccharomyces cerevisiae (R64-1-1)",
               "Homo Sapiens (hg19 / GRCh37)",
               "Homo Sapiens (hg38 / GRCh38)",
               "Drosophila Melanogaster (r5.01 / dm3)",
               "Drosophila Melanogaster (BDGP r6 + ISO1 MT / dm6)",
               "Zebra Fish (GRCz11 / danRer11)",
               "Mouse (GRCm38 / mm10)",
               "Mouse (NCBI37 / mm9)",
               "Xenopus tropicalis (v9.1 / xenTro9)",
               "Schizosaccharomyces pombe (ASM294v2)"
            ]
         },
         "file_type":[  
            "TAR"
         ],
         "data_type":[  
            "sequence_mapping_index_bwa"
         ],
         "required":true,
         "allow_multiple":false
      }
   ],
   "input_files_combinations":[  
      {  
         "description":"Align single/paired end reads",
         "input_files":[  
            "loc",
            "fastq2",
            "genome",
            "index"
         ]
      },
      {  
         "description":"Align single/paired end reads custom assembly",
         "input_files":[  
            "loc",
            "fastq2"
         ],
         "input_files_public_dir":[  
            "genome_public",
            "index_public"
         ]
      }
   ],
   "input_files_combinations_internal":[  
      [  
         {  
            "data_chip_seq":"-"
         },
         {  
            "data_mnase_seq":"-"
         },
         {  
            "data_rna_seq":"-"
         },
         {  
            "data_wgbs":"-"
         },
         {  
            "sequence_genomic":"-"
         },
         {  
            "sequence_dna":"-"
         },
         {  
            "sequence_mapping_index_bwa":"-"
         }
      ]
   ],
   "arguments":[  
      {  
         "name":"bowtie2_interleaved_param",
         "description":"Interleaved reads, where the first 2 reads represent a paired end",
         "help":"Interleaved reads, where the first 2 reads represent a paired end",
         "type":"boolean",
         "required":false,
         "default":[  
            false
         ]
      },
      {  
         "name":"bowtie2_tab5_param",
         "description":"All reads, or pairs of reads, are a single line",
         "help":"",
         "type":"boolean",
         "required":false,
         "default":[  
            false
         ]
      },
      {  
         "name":"bowtie2_tab6_param",
         "description":"Same as tab5 except the the second paired-end read can have a different name",
         "help":"",
         "type":"boolean",
         "required":false,
         "default":[  
            false
         ]
      },
      {  
         "name":"bowtie2_skip_1st_n_reads_param",
         "description":"Skip the first N reads in a FastQ file",
         "help":"",
         "type":"string",
         "required":false,
         "default":""
      },
      {  
         "name":"bowtie2_aln_1st_n_reads_param",
         "description":"Align only the first N reads from a FastQ file",
         "help":"",
         "type":"string",
         "required":false,
         "default":""
      },
      {  
         "name":"bowtie2_trim5_param",
         "description":"Trim the 5' end of all reads before alignment",
         "help":"Trim the 5' end of all reads before alignment",
         "type":"string",
         "required":false,
         "default":""
      },
      {  
         "name":"bowtie2_trim3_param",
         "description":"Trim the 3' end of all reads before alignment",
         "help":"Trim the 3' end of all reads before alignment",
         "type":"string",
         "required":false,
         "default":""
      },
      {  
         "name":"bowtie2_phred33_param",
         "description":"Input score are equivalent to Phred+33",
         "help":"Input score are equivalent to Phred+33",
         "type":"boolean",
         "required":false,
         "default":[  
            false
         ]
      },
      {  
         "name":"bowtie2_phre64_param",
         "description":"Input score are equivalent to Phred+64",
         "help":"Input score are equivalent to Phred+64",
         "type":"boolean",
         "required":false,
         "default":[  
            false
         ]
      },
      {  
         "name":"bowtie2_num_mismatch_param",
         "description":"Number of mismatches allowed in the seed in multiseed alignments",
         "help":"Number of mismatches allowed in the seed in multiseed alignments",
         "type":"string",
         "required":false,
         "default":""
      },
      {  
         "name":"bowtie2_seed_len_param",
         "description":"Length of seed substring used in mutliseed alignments",
         "help":"Length of seed substring used in mutliseed alignments",
         "type":"string",
         "required":false,
         "default":""
      },
      {  
         "name":"bowtie2_dpads_param",
         "description":"Padding used in dynamic programming to allow for gaps",
         "help":"Padding used in dynamic programming to allow for gaps",
         "type":"string",
         "required":false,
         "default":""
      },
      {  
         "name":"bowtie2_gbar_param",
         "description":"Don't allow gaps within N bases of an aligned read",
         "help":"Don't allow gaps within N bases of an aligned read",
         "type":"string",
         "required":false,
         "default":""
      },
      {  
         "name":"bowtie2_ignore_quals_param",
         "description":"Use a high read quality in cases of gaps instead of the quality score",
         "help":"Use a high read quality in cases of gaps instead of the quality score",
         "type":"boolean",
         "required":false,
         "default":[  
            false
         ]
      },
      {  
         "name":"bowtie2_nofw_param",
         "description":"Do not align unpaired reads to the forward strand",
         "help":"Do not align unpaired reads to the forward strand",
         "type":"boolean",
         "required":false,
         "default":[  
            false
         ]
      },
      {  
         "name":"bowtie2_norc_param",
         "description":"Do not align unpaired reads to the reverse strand",
         "help":"Do not align unpaired reads to the reverse strand",
         "type":"boolean",
         "required":false,
         "default":[  
            false
         ]
      },
      {  
         "name":"bowtie2_no_1mm_upfront_param",
         "description":"Prevent Bowtie2 searching for alignments with 1 mismatch before using a multiseed approach to alignment",
         "help":"Prevent Bowtie2 searching for alignments with 1 mismatch before using a multiseed approach to alignment",
         "type":"boolean",
         "required":false,
         "default":[  
            false
         ]
      },
      {  
         "name":"bowtie2_end_to_end_param",
         "description":"The read should completely align to the reference genome",
         "help":"The read should completely align to the reference genome",
         "type":"boolean",
         "required":false,
         "default":[  
            false
         ]
      },
      {  
         "name":"bowtie2_local_param",
         "description":"Allow soft-clipping to get an alignment",
         "help":"Allow soft-clipping to get an alignment",
         "type":"boolean",
         "required":false,
         "default":[  
            false
         ]
      },
      {  
         "name":"bowtie2_seed_extension_attempts_param",
         "description":"Number of seed extension attempts allowed before moving on",
         "help":"Number of seed extension attempts allowed before moving on",
         "type":"string",
         "required":false,
         "default":""
      },
      {  
         "name":"bowtie2_reseed_param",
         "description":"Max number of re-seeds if a read has repetitive seeds",
         "help":"Max number of re-seeds if a read has repetitive seeds",
         "type":"string",
         "required":false,
         "default":""
      },
      {  
         "name":"bowtie2_min_frag_len_param",
         "description":"Minimum fragment length for a valid pair alignment",
         "help":"Minimum fragment length for a valid pair alignment",
         "type":"string",
         "required":false,
         "default":""
      },
      {  
         "name":"bowtie2_max_frag_len_param",
         "description":"Max fragment length for a valid pair alignment",
         "help":"Max fragment length for a valid pair alignment",
         "type":"string",
         "required":false,
         "default":""
      },
      {  
         "name":"bowtie2_frrfff_param",
         "description":"Upstream/Downstream paired-end mate orientations:\n--fr : Mate 1 upstream of reversed mate 2\n--rf : Reversed mate 1 is upstream of mate 2\n--ff : Mate 1 upstream and mate 2 downstream bothin forward direction",
         "help":"Upstream/Downstream paired-end mate orientations:\n--fr : Mate 1 upstream of reversed mate 2\n--rf : Reversed mate 1 is upstream of mate 2\n--ff : Mate 1 upstream and mate 2 downstream bothin forward direction",
         "type":"enum",
         "enum_items":{  
            "description":[  
               "",
               "--fr",
               "--rf",
               "--ff"
            ],
            "name":[  
               "",
               "--fr",
               "--rf",
               "--ff"
            ]
         },
         "required":false,
         "default":""
      },
      {  
         "name":"bowtie2_no_mixed_param",
         "description":"Find only concordant/discordant alignments for pairs",
         "help":"Find only concordant/discordant alignments for pairs",
         "type":"boolean",
         "required":false,
         "default":[  
            false
         ]
      },
      {  
         "name":"bowtie2_no_discordant_param",
         "description":"If there are no concordant pair alignments, do not search for discordant pairs",
         "help":"If there are no concordant pair alignments, do not search for discordant pairs",
         "type":"boolean",
         "required":false,
         "default":[  
            false
         ]
      },
      {  
         "name":"bowtie2_dovetail_param",
         "description":"Allow mates to dovetail each other. For further details see http://bowtie-bio.sourceforge.net/bowtie2/manual.shtml#mates-can-overlap-contain-or-dovetail-each-other",
         "help":"Allow mates to dovetail each other. For further details see http://bowtie-bio.sourceforge.net/bowtie2/manual.shtml#mates-can-overlap-contain-or-dovetail-each-other",
         "type":"boolean",
         "required":false,
         "default":[  
            false
         ]
      },
      {  
         "name":"bowtie2_no_contain_param",
         "description":"Don't allow mates to contain its paired mate. For further details see http://bowtie-bio.sourceforge.net/bowtie2/manual.shtml#mates-can-overlap-contain-or-dovetail-each-other",
         "help":"Don't allow mates to contain its paired mate. For further details see http://bowtie-bio.sourceforge.net/bowtie2/manual.shtml#mates-can-overlap-contain-or-dovetail-each-other",
         "type":"boolean",
         "required":false,
         "default":[  
            false
         ]
      },
      {  
         "name":"bowtie2_no_overlap_param",
         "description":"Don't allow mates to overlap each other. For further details see http://bowtie-bio.sourceforge.net/bowtie2/manual.shtml#mates-can-overlap-contain-or-dovetail-each-other",
         "help":"Don't allow mates to overlap each other. For further details see http://bowtie-bio.sourceforge.net/bowtie2/manual.shtml#mates-can-overlap-contain-or-dovetail-each-other",
         "type":"boolean",
         "required":false,
         "default":[  
            false
         ]
      },
      {  
         "name":"bowtie2_no_unal_param",
         "description":"No SAM records for unaligned reads",
         "help":"No SAM records for unaligned reads",
         "type":"boolean",
         "required":false,
         "default":[  
            false
         ]
      },
      {  
         "name":"bowtie2_no_hd_param",
         "description":"No SAM header lines",
         "help":"No SAM header lines",
         "type":"boolean",
         "required":false,
         "default":[  
            false
         ]
      },
      {  
         "name":"bowtie2_no_sq_param",
         "description":"No @SQ SAM header lines",
         "help":"No @SQ SAM header lines",
         "type":"boolean",
         "required":false,
         "default":[  
            false
         ]
      },
      {  
         "name":"bowtie2_rg_id_param",
         "description":"Read group ID",
         "help":"Read group ID",
         "type":"string",
         "required":false,
         "default":""
      },
      {  
         "name":"bowtie2_rg_param",
         "description":"Extra text for @RG header line",
         "help":"Extra text for @RG header line",
         "type":"string",
         "required":false,
         "default":""
      },
      {  
         "name":"bowtie2_omit_sec_seq_param",
         "description":"Do not include sequence and quality lines when printing secondary alignments",
         "help":"Do not include sequence and quality lines when printing secondary alignments",
         "type":"boolean",
         "required":false,
         "default":[  
            false
         ]
      },
      {  
         "name":"bowtie2_soft_clipped_unmapped_tlen_param",
         "description":"Soft-clipped bases are assigned as unmapped when calculating TLEN",
         "help":"Soft-clipped bases are assigned as unmapped when calculating TLEN",
         "type":"boolean",
         "required":false,
         "default":[  
            false
         ]
      },
      {  
         "name":"bowtie2_sam_no_qname_trunc_param",
         "description":"Use full read name (including whitespace). This will generate non-standard format SAM files",
         "help":"Use full read name (including whitespace). This will generate non-standard format SAM files",
         "type":"boolean",
         "required":false,
         "default":[  
            false
         ]
      },
      {  
         "name":"bowtie2_xeq_param",
         "description":"To indicate matches/mis-matches use '='/'X' instead of 'M'",
         "help":"To indicate matches/mis-matches use '='/'X' instead of 'M'",
         "type":"boolean",
         "required":false,
         "default":[  
            false
         ]
      },
      {  
         "name":"bowtie2_ma_param",
         "description":"Match bonus",
         "help":"Match bonus",
         "type":"string",
         "required":false,
         "default":""
      },
      {  
         "name":"bowtie2_mp_mx_param",
         "description":"Max mismatch penalty [Requires Min mismatch penalty to also be set]",
         "help":"Max mismatch penalty [Requires Min mismatch penalty to also be set]",
         "type":"string",
         "required":false,
         "default":""
      },
      {  
         "name":"bowtie2_mp_mn_param",
         "description":"Min mismatch penalty [Requires Max mismatch penalty to also be set]",
         "help":"Min mismatch penalty [Requires Max mismatch penalty to also be set]",
         "type":"string",
         "required":false,
         "default":""
      },
      {  
         "name":"bowtie2_np_param",
         "description":"Penalty for positions where the read or reference are ambiguous",
         "help":"Penalty for positions where the read or reference are ambiguous",
         "type":"string",
         "required":false,
         "default":""
      },
      {  
         "name":"bowtie2_rdg_o_param",
         "description":"Read gap open penalty [Requires read gap extension penalty to also be set]",
         "help":"Read gap open penalty [Requires read gap extension penalty to also be set]",
         "type":"string",
         "required":false,
         "default":""
      },
      {  
         "name":"bowtie2_rdg_e_param",
         "description":"Read gap extension penalty [Requires read gap open penalty to also be set]",
         "help":"Read gap extension penalty [Requires read gap open penalty to also be set]",
         "type":"string",
         "required":false,
         "default":""
      },
      {  
         "name":"bowtie2_rfg_o_param",
         "description":"Reference gap open penalty [Requires reference gap extension penalty to also be set]",
         "help":"Reference gap open penalty [Requires reference gap extension penalty to also be set]",
         "type":"string",
         "required":false,
         "default":""
      },
      {  
         "name":"bowtie2_rfg_e_param",
         "description":"Reference gap extension penalty [Requires reference gap open penalty to also be set]",
         "help":"Reference gap extension penalty [Requires reference gap open penalty to also be set]",
         "type":"string",
         "required":false,
         "default":""
      }
   ],
   "has_custom_viewer":false,
   "output_files":[  
      {  
         "required":true,
         "allow_multiple":false,
         "name":"bam",
         "file":{  
            "file_type":"BAM",
            "meta_data":{  
               "visible":true,
               "tool":"process_bowtie",
               "description":"Aligned sequences"
            },
            "file_path":"bt2.bam",
            "compressed":"null"
         }
      },
      {  
         "name":"bai",
         "required":true,
         "allow_multiple":false,
         "file":{  
            "file_type":"BAI",
            "meta_data":{  
               "visible":false,
               "tool":"process_bowtie",
               "description":"Aligned sequences index"
            },
            "file_path":"bt2.bam.bai",
            "compressed":"null"
         }
      }
   ]
}{  
   "_id":"bowtie_BK",
   "name":"Bowtie2",
   "title":"Bowtie2 Alignment",
   "short_description":"Align FASTQ data using Bowtie2",
   "long_description":"Align single and paired end data using the Bowtie2 alignment tool",
   "url":"https://github.com/Multiscale-Genomics/mg-process-fastq",
   "publication":"http://www.nature.com/nmeth/journal/v9/n4/full/nmeth.1923.html",
   "owner":{  
      "institution":"EMBL-EBI",
      "author":"Mark McDowall",
      "contact":"mcdowall@ebi.ac.uk",
      "url":"https://github.com/Multiscale-Genomics/mg-process-fastq"
   },
   "status":2,
   "external":true,
   "keywords":[  
      "Next Gen Sequencing",
      "DNA"
   ],
   "keywords_tool":[  
      "Bowtie",
      "Aligner",
      "BAM"
   ],
   "infrastructure":{  
      "memory":12,
      "cpus":4,
      "executable":"/usr/local/code/mg-process-fastq/process_align_bowtie.py",
      "clouds":{  
         "mug-irb":{  
            "launcher":"PMES",
            "imageName":"uuid_vmgenericmgtoolapi_24",
            "workflowType":"COMPSs",
            "minimumVMs":1,
            "initialVMs":1,
            "default_cloud":true
         }
      }
   },
   "input_files":[  
      {  
         "name":"loc",
         "description":"Sequence read file",
         "help":"path to a FASTQ sequence read file",
         "file_type":[  
            "FASTQ"
         ],
         "data_type":[  
            "data_chip_seq",
            "data_mnase_seq",
            "data_rna_seq",
            "data_wgbs"
         ],
         "required":true,
         "allow_multiple":false
      },
      {  
         "name":"fastq2",
         "description":"Sequence read file",
         "help":"path to a FASTQ sequence read file",
         "file_type":[  
            "FASTQ"
         ],
         "data_type":[  
            "data_chip_seq",
            "data_mnase_seq",
            "data_rna_seq",
            "data_wgbs"
         ],
         "required":false,
         "allow_multiple":false
      },
      {  
         "name":"genome",
         "description":"Genome sequence file",
         "help":"path to a assembly sequence file",
         "file_type":[  
            "FASTA"
         ],
         "data_type":[  
            "sequence_genomic",
            "sequence_dna"
         ],
         "required":true,
         "allow_multiple":false
      },
      {  
         "name":"index",
         "description":"Bowtie2 index for matching species",
         "help":"path to matching Bowtie2 index file",
         "file_type":[  
            "TAR"
         ],
         "data_type":[  
            "sequence_mapping_index_bwa"
         ],
         "required":true,
         "allow_multiple":false
      }
   ],
   "input_files_public_dir":[  
      {  
         "name":"genome_public",
         "description":"Reference sequence of the genome assembly",
         "help":"FASTA file  of the genome assembly mapping the given Chip-seq reads. If your assembly is not listed, you can use your own genome here by building its indexes with the 'Process Genome' tool.",
         "type":"enum",
         "enum_items":{  
            "name":[  
               "refGenomes/R64-1-1/R64-1-1.fa",
               "refGenomes/hg19/hg19.fa",
               "refGenomes/hg38/hg38.fa",
               "refGenomes/r5.01/r5.01.fa",
               "refGenomes/dm6/dm6.fa",
               "refGenomes/danRer11/danRer11.fa",
               "refGenomes/mm10/mm10.fa",
               "refGenomes/mm9/mm9.fa",
               "refGenomes/xenTro9/xenTro9.fa",
               "refGenomes/spombe/spombe.fa"
            ],
            "description":[  
               "Saccharomyces cerevisiae (R64-1-1)",
               "Homo Sapiens (hg19 / GRCh37)",
               "Homo Sapiens (hg38 / GRCh38)",
               "Drosophila Melanogaster (r5.01 / dm3)",
               "Drosophila Melanogaster (BDGP r6 + ISO1 MT / dm6)",
               "Zebra Fish (GRCz11 / danRer11)",
               "Mouse (GRCm38 / mm10)",
               "Mouse (NCBI37 / mm9)",
               "Xenopus tropicalis (v9.1 / xenTro9)",
               "Schizosaccharomyces pombe (ASM294v2)"
            ]
         },
         "file_type":[  
            "FASTA"
         ],
         "data_type":[  
            "sequence_genomic",
            "sequence_dna"
         ],
         "required":true,
         "allow_multiple":false
      },
      {  
         "name":"index_public",
         "description":"BWA indexes of the genome assembly",
         "help":"BWA index files of the genome assembly.",
         "type":"enum",
         "enum_items":{  
            "name":[  
               "refGenomes/R64-1-1/BWA/bwa.tar.gz",
               "refGenomes/hg19/BWA/bwa.tar.gz",
               "refGenomes/hg38/BWA/bwa.tar.gz",
               "refGenomes/r5.01/BWA/bwa.tar.gz",
               "refGenomes/dm6/BWA/bwa.tar.gz",
               "refGenomes/danRer11/BWA/bwa.tar.gz",
               "refGenomes/mm10/BWA/bwa.tar.gz",
               "refGenomes/mm9/BWA/bwa.tar.gz",
               "refGenomes/xenTro9/BWA/bwa.tar.gz",
               "refGenomes/spombe/BWA/bwa.tar.gz"
            ],
            "description":[  
               "Saccharomyces cerevisiae (R64-1-1)",
               "Homo Sapiens (hg19 / GRCh37)",
               "Homo Sapiens (hg38 / GRCh38)",
               "Drosophila Melanogaster (r5.01 / dm3)",
               "Drosophila Melanogaster (BDGP r6 + ISO1 MT / dm6)",
               "Zebra Fish (GRCz11 / danRer11)",
               "Mouse (GRCm38 / mm10)",
               "Mouse (NCBI37 / mm9)",
               "Xenopus tropicalis (v9.1 / xenTro9)",
               "Schizosaccharomyces pombe (ASM294v2)"
            ]
         },
         "file_type":[  
            "TAR"
         ],
         "data_type":[  
            "sequence_mapping_index_bwa"
         ],
         "required":true,
         "allow_multiple":false
      }
   ],
   "input_files_combinations":[  
      {  
         "description":"Align single/paired end reads",
         "input_files":[  
            "loc",
            "fastq2",
            "genome",
            "index"
         ]
      },
      {  
         "description":"Align single/paired end reads custom assembly",
         "input_files":[  
            "loc",
            "fastq2"
         ],
         "input_files_public_dir":[  
            "genome_public",
            "index_public"
         ]
      }
   ],
   "input_files_combinations_internal":[  

   ],
   "arguments":[  
      {  
         "name":"bowtie2_interleaved_param",
         "description":"Interleaved reads, where the first 2 reads represent a paired end",
         "help":"Interleaved reads, where the first 2 reads represent a paired end",
         "type":"boolean",
         "required":false,
         "default":[  
            false
         ]
      },
      {  
         "name":"bowtie2_tab5_param",
         "description":"All reads, or pairs of reads, are a single line",
         "help":"",
         "type":"boolean",
         "required":false,
         "default":[  
            false
         ]
      },
      {  
         "name":"bowtie2_tab6_param",
         "description":"Same as tab5 except the the second paired-end read can have a different name",
         "help":"",
         "type":"boolean",
         "required":false,
         "default":[  
            false
         ]
      },
      {  
         "name":"bowtie2_skip_1st_n_reads_param",
         "description":"Skip the first N reads in a FastQ file",
         "help":"",
         "type":"string",
         "required":false,
         "default":""
      },
      {  
         "name":"bowtie2_aln_1st_n_reads_param",
         "description":"Align only the first N reads from a FastQ file",
         "help":"",
         "type":"string",
         "required":false,
         "default":""
      },
      {  
         "name":"bowtie2_trim5_param",
         "description":"Trim the 5' end of all reads before alignment",
         "help":"Trim the 5' end of all reads before alignment",
         "type":"string",
         "required":false,
         "default":"0"
      },
      {  
         "name":"bowtie2_trim3_param",
         "description":"Trim the 3' end of all reads before alignment",
         "help":"Trim the 3' end of all reads before alignment",
         "type":"string",
         "required":false,
         "default":"0"
      },
      {  
         "name":"bowtie2_phred33_param",
         "description":"Input score are equivalent to Phred+33",
         "help":"Input score are equivalent to Phred+33",
         "type":"boolean",
         "required":false,
         "default":[  
            false
         ]
      },
      {  
         "name":"bowtie2_phre64_param",
         "description":"Input score are equivalent to Phred+64",
         "help":"Input score are equivalent to Phred+64",
         "type":"boolean",
         "required":false,
         "default":[  
            false
         ]
      },
      {  
         "name":"bowtie2_num_mismatch_param",
         "description":"Number of mismatches allowed in the seed in multiseed alignments",
         "help":"Number of mismatches allowed in the seed in multiseed alignments",
         "type":"string",
         "required":false,
         "default":"0"
      },
      {  
         "name":"bowtie2_seed_len_param",
         "description":"Length of seed substring used in mutliseed alignments",
         "help":"Length of seed substring used in mutliseed alignments",
         "type":"string",
         "required":false,
         "default":""
      },
      {  
         "name":"bowtie2_dpads_param",
         "description":"Padding used in dynamic programming to allow for gaps",
         "help":"Padding used in dynamic programming to allow for gaps",
         "type":"string",
         "required":false,
         "default":"15"
      },
      {  
         "name":"bowtie2_gbar_param",
         "description":"Don't allow gaps within N bases of an aligned read",
         "help":"Don't allow gaps within N bases of an aligned read",
         "type":"string",
         "required":false,
         "default":"4"
      },
      {  
         "name":"bowtie2_ignore_quals_param",
         "description":"Use a high read quality in cases of gaps instead of the quality score",
         "help":"Use a high read quality in cases of gaps instead of the quality score",
         "type":"boolean",
         "required":false,
         "default":[  
            false
         ]
      },
      {  
         "name":"bowtie2_nofw_param",
         "description":"Do not align unpaired reads to the forward strand",
         "help":"Do not align unpaired reads to the forward strand",
         "type":"boolean",
         "required":false,
         "default":[  
            false
         ]
      },
      {  
         "name":"bowtie2_norc_param",
         "description":"Do not align unpaired reads to the reverse strand",
         "help":"Do not align unpaired reads to the reverse strand",
         "type":"boolean",
         "required":false,
         "default":[  
            false
         ]
      },
      {  
         "name":"bowtie2_no_1mm_upfront_param",
         "description":"Prevent Bowtie2 searching for alignments with 1 mismatch before using a multiseed approach to alignment",
         "help":"Prevent Bowtie2 searching for alignments with 1 mismatch before using a multiseed approach to alignment",
         "type":"boolean",
         "required":false,
         "default":[  
            false
         ]
      },
      {  
         "name":"bowtie2_end_to_end_param",
         "description":"The read should completely align to the reference genome",
         "help":"The read should completely align to the reference genome",
         "type":"boolean",
         "required":false,
         "default":[  
            false
         ]
      },
      {  
         "name":"bowtie2_local_param",
         "description":"Allow soft-clipping to get an alignment",
         "help":"Allow soft-clipping to get an alignment",
         "type":"boolean",
         "required":false,
         "default":[  
            false
         ]
      },
      {  
         "name":"bowtie2_seed_extension_attempts_param",
         "description":"Number of seed extension attempts allowed before moving on",
         "help":"Number of seed extension attempts allowed before moving on",
         "type":"string",
         "required":false,
         "default":"15"
      },
      {  
         "name":"bowtie2_reseed_param",
         "description":"Max number of re-seeds if a read has repetitive seeds",
         "help":"Max number of re-seeds if a read has repetitive seeds",
         "type":"string",
         "required":false,
         "default":"2"
      },
      {  
         "name":"bowtie2_min_frag_len_param",
         "description":"Minimum fragment length for a valid pair alignment",
         "help":"Minimum fragment length for a valid pair alignment",
         "type":"string",
         "required":false,
         "default":"0"
      },
      {  
         "name":"bowtie2_max_frag_len_param",
         "description":"Max fragment length for a valid pair alignment",
         "help":"Max fragment length for a valid pair alignment",
         "type":"string",
         "required":false,
         "default":"500"
      },
      {  
         "name":"bowtie2_frrfff_param",
         "description":"Upstream/Downstream paired-end mate orientations:\n--fr : Mate 1 upstream of reversed mate 2\n--rf : Reversed mate 1 is upstream of mate 2\n--ff : Mate 1 upstream and mate 2 downstream bothin forward direction",
         "help":"Upstream/Downstream paired-end mate orientations:\n--fr : Mate 1 upstream of reversed mate 2\n--rf : Reversed mate 1 is upstream of mate 2\n--ff : Mate 1 upstream and mate 2 downstream bothin forward direction",
         "type":"enum",
         "enum_items":{  
            "description":[  
               "--fr",
               "--rf",
               "--ff"
            ],
            "name":[  
               "--fr",
               "--rf",
               "--ff"
            ]
         },
         "required":false,
         "default":[  
            "--fr"
         ]
      },
      {  
         "name":"bowtie2_no_mixed_param",
         "description":"Find only concordant/discordant alignments for pairs",
         "help":"Find only concordant/discordant alignments for pairs",
         "type":"boolean",
         "required":false,
         "default":[  
            false
         ]
      },
      {  
         "name":"bowtie2_no_discordant_param",
         "description":"If there are no concordant pair alignments, do not search for discordant pairs",
         "help":"If there are no concordant pair alignments, do not search for discordant pairs",
         "type":"boolean",
         "required":false,
         "default":[  
            false
         ]
      },
      {  
         "name":"bowtie2_dovetail_param",
         "description":"Allow mates to dovetail each other. For further details see http://bowtie-bio.sourceforge.net/bowtie2/manual.shtml#mates-can-overlap-contain-or-dovetail-each-other",
         "help":"Allow mates to dovetail each other. For further details see http://bowtie-bio.sourceforge.net/bowtie2/manual.shtml#mates-can-overlap-contain-or-dovetail-each-other",
         "type":"boolean",
         "required":false,
         "default":[  
            false
         ]
      },
      {  
         "name":"bowtie2_no_contain_param",
         "description":"Don't allow mates to contain its paired mate. For further details see http://bowtie-bio.sourceforge.net/bowtie2/manual.shtml#mates-can-overlap-contain-or-dovetail-each-other",
         "help":"Don't allow mates to contain its paired mate. For further details see http://bowtie-bio.sourceforge.net/bowtie2/manual.shtml#mates-can-overlap-contain-or-dovetail-each-other",
         "type":"boolean",
         "required":false,
         "default":[  
            false
         ]
      },
      {  
         "name":"bowtie2_no_overlap_param",
         "description":"Don't allow mates to overlap each other. For further details see http://bowtie-bio.sourceforge.net/bowtie2/manual.shtml#mates-can-overlap-contain-or-dovetail-each-other",
         "help":"Don't allow mates to overlap each other. For further details see http://bowtie-bio.sourceforge.net/bowtie2/manual.shtml#mates-can-overlap-contain-or-dovetail-each-other",
         "type":"boolean",
         "required":false,
         "default":[  
            false
         ]
      },
      {  
         "name":"bowtie2_no_unal_param",
         "description":"No SAM records for unaligned reads",
         "help":"No SAM records for unaligned reads",
         "type":"boolean",
         "required":false,
         "default":[  
            false
         ]
      },
      {  
         "name":"bowtie2_no_hd_param",
         "description":"No SAM header lines",
         "help":"No SAM header lines",
         "type":"boolean",
         "required":false,
         "default":[  
            false
         ]
      },
      {  
         "name":"bowtie2_no_sq_param",
         "description":"No @SQ SAM header lines",
         "help":"No @SQ SAM header lines",
         "type":"boolean",
         "required":false,
         "default":[  
            false
         ]
      },
      {  
         "name":"bowtie2_rg_id_param",
         "description":"Read group ID",
         "help":"Read group ID",
         "type":"string",
         "required":false,
         "default":""
      },
      {  
         "name":"bowtie2_rg_param",
         "description":"Extra text for @RG header line",
         "help":"Extra text for @RG header line",
         "type":"string",
         "required":false,
         "default":""
      },
      {  
         "name":"bowtie2_omit_sec_seq_param",
         "description":"Do not include sequence and quality lines when printing secondary alignments",
         "help":"Do not include sequence and quality lines when printing secondary alignments",
         "type":"boolean",
         "required":false,
         "default":[  
            false
         ]
      },
      {  
         "name":"bowtie2_soft_clipped_unmapped_tlen_param",
         "description":"Soft-clipped bases are assigned as unmapped when calculating TLEN",
         "help":"Soft-clipped bases are assigned as unmapped when calculating TLEN",
         "type":"boolean",
         "required":false,
         "default":[  
            false
         ]
      },
      {  
         "name":"bowtie2_sam_no_qname_trunc_param",
         "description":"Use full read name (including whitespace). This will generate non-standard format SAM files",
         "help":"Use full read name (including whitespace). This will generate non-standard format SAM files",
         "type":"boolean",
         "required":false,
         "default":[  
            false
         ]
      },
      {  
         "name":"bowtie2_xeq_param",
         "description":"To indicate matches/mis-matches use '='/'X' instead of 'M'",
         "help":"To indicate matches/mis-matches use '='/'X' instead of 'M'",
         "type":"boolean",
         "required":false,
         "default":[  
            false
         ]
      },
      {  
         "name":"bowtie2_ma_param",
         "description":"Match bonus",
         "help":"Match bonus",
         "type":"string",
         "required":false,
         "default":"2"
      },
      {  
         "name":"bowtie2_mp_mx_param",
         "description":"Max mismatch penalty [Requires Min mismatch penalty to also be set]",
         "help":"Max mismatch penalty [Requires Min mismatch penalty to also be set]",
         "type":"string",
         "required":false,
         "default":"6"
      },
      {  
         "name":"bowtie2_mp_mn_param",
         "description":"Min mismatch penalty [Requires Max mismatch penalty to also be set]",
         "help":"Min mismatch penalty [Requires Max mismatch penalty to also be set]",
         "type":"string",
         "required":false,
         "default":"2"
      },
      {  
         "name":"bowtie2_np_param",
         "description":"Penalty for positions where the read or reference are ambiguous",
         "help":"Penalty for positions where the read or reference are ambiguous",
         "type":"string",
         "required":false,
         "default":"1"
      },
      {  
         "name":"bowtie2_rdg_o_param",
         "description":"Read gap open penalty [Requires read gap extension penalty to also be set]",
         "help":"Read gap open penalty [Requires read gap extension penalty to also be set]",
         "type":"string",
         "required":false,
         "default":"5"
      },
      {  
         "name":"bowtie2_rdg_e_param",
         "description":"Read gap extension penalty [Requires read gap open penalty to also be set]",
         "help":"Read gap extension penalty [Requires read gap open penalty to also be set]",
         "type":"string",
         "required":false,
         "default":"3"
      },
      {  
         "name":"bowtie2_rfg_o_param",
         "description":"Reference gap open penalty [Requires reference gap extension penalty to also be set]",
         "help":"Reference gap open penalty [Requires reference gap extension penalty to also be set]",
         "type":"string",
         "required":false,
         "default":"5"
      },
      {  
         "name":"bowtie2_rfg_e_param",
         "description":"Reference gap extension penalty [Requires reference gap open penalty to also be set]",
         "help":"Reference gap extension penalty [Requires reference gap open penalty to also be set]",
         "type":"string",
         "required":false,
         "default":"3"
      }
   ],
   "has_custom_viewer":true,
   "output_files":[  
      {  
         "required":true,
         "allow_multiple":false,
         "name":"bam",
         "file":{  
            "file_type":"BAM",
            "meta_data":{  
               "visible":true,
               "tool":"process_bowtie",
               "description":"Aligned sequences"
            },
            "file_path":"bt2.bam",
            "data_type":"data_chip_seq",
            "compressed":"null"
         }
      }
   ]
}{  
   "_id":"bwa_mem",
   "name":"BWA MEM",
   "title":"BWA MEM Alignment",
   "short_description":"Align FASTQ data using BWA mem",
   "long_description":"The alignment of single and paired end data using the BWA MEM aligner",
   "url":"https://github.com/Multiscale-Genomics/mg-process-fastq",
   "publication":"http://www.ncbi.nlm.nih.gov/pubmed/19451168",
   "owner":{  
      "institution":"EMBL-EBI",
      "author":"Mark McDowall",
      "contact":"mcdowall@ebi.ac.uk",
      "url":"https://github.com/Multiscale-Genomics/mg-process-fastq"
   },
   "status":1,
   "external":true,
   "keywords":[  
      "next gen seq",
      "dna"
   ],
   "keywords_tool":[  
      "BWA MEM",
      "Aligner",
      "BAM"
   ],
   "infrastructure":{  
      "memory":12,
      "cpus":4,
      "executable":"/usr/local/code/mg-process-fastq/process_align_bwa_mem.py",
      "clouds":{  
         "mug-irb":{  
            "launcher":"PMES",
            "workflowType":"COMPSs",
            "imageName":"uuid_vmgenericmgtoolapi_24",
            "minimumVMs":1,
            "initialVMs":1,
            "default_cloud":true
         }
      }
   },
   "input_files":[  
      {  
         "name":"loc",
         "description":"Sequence read file",
         "help":"path to a FASTQ sequence read file",
         "file_type":[  
            "FASTQ"
         ],
         "data_type":[  
            "data_chip_seq",
            "data_mnase_seq",
            "data_rna_seq",
            "data_wgbs"
         ],
         "required":true,
         "allow_multiple":false
      },
      {  
         "name":"fastq2",
         "description":"Sequence read file",
         "help":"path to a FASTQ sequence read file",
         "file_type":[  
            "FASTQ"
         ],
         "data_type":[  
            "data_chip_seq",
            "data_mnase_seq",
            "data_rna_seq",
            "data_wgbs"
         ],
         "required":false,
         "allow_multiple":false
      },
      {  
         "name":"genome",
         "description":"Genome sequence file",
         "help":"path to a assembly sequence file",
         "file_type":[  
            "FASTA"
         ],
         "data_type":[  
            "sequence_genomic"
         ],
         "required":true,
         "allow_multiple":false
      },
      {  
         "name":"index",
         "description":"BWA index for matching species",
         "help":"path to matching BWA index file",
         "file_type":[  
            "TAR"
         ],
         "data_type":[  
            "sequence_mapping_index_bwa"
         ],
         "required":true,
         "allow_multiple":false
      }
   ],
   "input_files_public_dir":[  
      {  
         "name":"genome_public",
         "description":"Reference sequence of the genome assembly",
         "help":"FASTA file  of the genome assembly mapping the given Chip-seq reads. If your assembly is not listed, you can use your own genome here by building its indexes with the 'Process Genome' tool.",
         "type":"enum",
         "enum_items":{  
            "name":[  
               "refGenomes/R64-1-1/R64-1-1.fa",
               "refGenomes/hg19/hg19.fa",
               "refGenomes/hg38/hg38.fa",
               "refGenomes/r5.01/r5.01.fa",
               "refGenomes/dm6/dm6.fa",
               "refGenomes/danRer11/danRer11.fa",
               "refGenomes/mm10/mm10.fa",
               "refGenomes/mm9/mm9.fa",
               "refGenomes/xenTro9/xenTro9.fa",
               "refGenomes/spombe/spombe.fa"
            ],
            "description":[  
               "Saccharomyces cerevisiae (R64-1-1)",
               "Homo Sapiens (hg19 / GRCh37)",
               "Homo Sapiens (hg38 / GRCh38)",
               "Drosophila Melanogaster (r5.01 / dm3)",
               "Drosophila Melanogaster (BDGP r6 + ISO1 MT / dm6)",
               "Zebra Fish (GRCz11 / danRer11)",
               "Mouse (GRCm38 / mm10)",
               "Mouse (NCBI37 / mm9)",
               "Xenopus tropicalis (v9.1 / xenTro9)",
               "Schizosaccharomyces pombe (ASM294v2)"
            ]
         },
         "file_type":[  
            "FASTA"
         ],
         "data_type":[  
            "sequence_genomic"
         ],
         "required":true,
         "allow_multiple":false
      },
      {  
         "name":"index_public",
         "description":"BWA indexes of the genome assembly",
         "help":"BWA index files of the genome assembly.",
         "type":"enum",
         "enum_items":{  
            "name":[  
               "refGenomes/R64-1-1/BWA/bwa.tar.gz",
               "refGenomes/hg19/BWA/bwa.tar.gz",
               "refGenomes/hg38/BWA/bwa.tar.gz",
               "refGenomes/r5.01/BWA/bwa.tar.gz",
               "refGenomes/dm6/BWA/BWA/bwa.tar.gz",
               "refGenomes/danRer11/BWA/bwa.tar.gz",
               "refGenomes/mm10/BWA/BWA/bwa.tar.gz",
               "refGenomes/mm9/BWA/BWA/bwa.tar.gz",
               "refGenomes/xenTro9/BWA/bwa.tar.gz",
               "refGenomes/spombe/BWA/bwa.tar.gz"
            ],
            "description":[  
               "Saccharomyces cerevisiae (R64-1-1)",
               "Homo Sapiens (hg19 / GRCh37)",
               "Homo Sapiens (hg38 / GRCh38)",
               "Drosophila Melanogaster (r5.01 / dm3)",
               "Drosophila Melanogaster (BDGP r6 + ISO1 MT / dm6)",
               "Zebra Fish (GRCz11 / danRer11)",
               "Mouse (GRCm38 / mm10)",
               "Mouse (NCBI37 / mm9)",
               "Xenopus tropicalis (v9.1 / xenTro9)",
               "Schizosaccharomyces pombe (ASM294v2)"
            ]
         },
         "file_type":[  
            "TAR"
         ],
         "data_type":[  
            "sequence_mapping_index_bwa"
         ],
         "required":true,
         "allow_multiple":false
      }
   ],
   "input_files_combinations":[  
      {  
         "description":"Align single/paired end reads",
         "input_files":[  
            "loc",
            "fastq2",
            "genome",
            "index"
         ]
      },
      {  
         "description":"Align single/paired end reads custom assembly",
         "input_files":[  
            "loc",
            "fastq2"
         ],
         "input_files_public_dir":[  
            "genome_public",
            "index_public"
         ]
      }
   ],
   "input_files_combinations_internal":[  
      [  
         {  
            "data_chip_seq":"-"
         },
         {  
            "data_mnase_seq":"-"
         },
         {  
            "data_rna_seq":"-"
         },
         {  
            "data_wgbs":"-"
         },
         {  
            "sequence_genomic":"-"
         },
         {  
            "sequence_dna":"-"
         },
         {  
            "sequence_mapping_index_bwa":"-"
         }
      ]
   ],
   "arguments":[  
      {  
         "name":"bwa_mem_min_seed_len_param",
         "description":"Minimum seed length [19]",
         "help":"Minimum seed length",
         "type":"string",
         "required":false,
         "default":""
      },
      {  
         "name":"bwa_mem_band_width_param",
         "description":"Band width",
         "help":"Band width",
         "type":"string",
         "required":false,
         "default":""
      },
      {  
         "name":"bwa_mem_zdropoff_param",
         "description":"Off-diagonal X-dropoff (Z-dropoff)",
         "help":"Off-diagonal X-dropoff (Z-dropoff)",
         "type":"string",
         "required":false,
         "default":""
      },
      {  
         "name":"bwa_mem_reseeding_param",
         "description":"Trigger re-seeding for a MEM longer than minSeedLen*FLOAT",
         "help":"",
         "type":"string",
         "required":false,
         "default":""
      },
      {  
         "name":"bwa_mem_insensitive_param",
         "description":"Discard a MEM if it has more than N occurence in the genome",
         "help":"Discard a MEM if it has more than N occurence in the genome",
         "type":"string",
         "required":false,
         "default":""
      },
      {  
         "name":"bwa_mem_paried_rescue_mode_param",
         "description":"In the paired-end mode, perform SW to rescue missing hits only but do not try to find hits that fit a proper pair",
         "help":"In the paired-end mode, perform SW to rescue missing hits only but do not try to find hits that fit a proper pair",
         "type":"boolean",
         "required":false,
         "default":[  
            false
         ]
      },
      {  
         "name":"bwa_mem_matching_score_param",
         "description":"Matching score",
         "help":"Matching score",
         "type":"string",
         "required":false,
         "default":""
      },
      {  
         "name":"bwa_mem_mismatch_penalty_param",
         "description":"Mismatch penalty",
         "help":"Mismatch penalty",
         "type":"string",
         "required":false,
         "default":""
      },
      {  
         "name":"bwa_mem_gap_open_penalty_param",
         "description":"Gap open penalty",
         "help":"Gap open penalty",
         "type":"string",
         "required":false,
         "default":""
      },
      {  
         "name":"bwa_mem_gap_ext_penalty_param",
         "description":"Gap extension penalty",
         "help":"Gap extension penalty",
         "type":"string",
         "required":false,
         "default":""
      },
      {  
         "name":"bwa_mem_clipping_penalty_param",
         "description":"Clipping penalty",
         "help":"Clipping penalty",
         "type":"string",
         "required":false,
         "default":""
      },
      {  
         "name":"bwa_mem_unpaired_penalty_param",
         "description":"Penalty for an unpaired read pair",
         "help":"Penalty for an unpaired read pair",
         "type":"string",
         "required":false,
         "default":""
      },
      {  
         "name":"bwa_mem_reads_interleaved_param",
         "description":"Assume the first input query file is interleaved paired-end FASTA/Q",
         "help":"Assume the first input query file is interleaved paired-end FASTA/Q",
         "type":"boolean",
         "required":false,
         "default":[  
            false
         ]
      },
      {  
         "name":"bwa_mem_complete_read_head_param",
         "description":"Complete read group header line",
         "help":"Complete read group header line",
         "type":"string",
         "required":false,
         "default":""
      },
      {  
         "name":"bwa_mem_alignment_threshold_param",
         "description":"Don’t output alignment with score lower than N. This option only affects output",
         "help":"Don’t output alignment with score lower than N. This option only affects output",
         "type":"string",
         "required":false,
         "default":""
      },
      {  
         "name":"bwa_mem_hard_clipping_param",
         "description":"Use hard clipping ’H’ in the SAM output",
         "help":"Use hard clipping ’H’ in the SAM output",
         "type":"boolean",
         "required":false,
         "default":[  
            false
         ]
      },
      {  
         "name":"bwa_mem_short_split_secondary_param",
         "description":"Mark shorter split hits as secondary (for Picard compatibility)",
         "help":"Mark shorter split hits as secondary (for Picard compatibility)",
         "type":"boolean",
         "required":false,
         "default":[  
            false
         ]
      }
   ],
   "has_custom_viewer":false,
   "output_files":[  
      {  
         "name":"bam",
         "required":true,
         "allow_multiple":false,
         "file":{  
            "file_type":"BAM",
            "meta_data":{  
               "visible":true,
               "tool":"process_bwa_mem",
               "description":"Aligned sequences"
            },
            "file_path":"bwa_mem.bam",
            "compressed":"null"
         }
      },
      {  
         "name":"bai",
         "required":true,
         "allow_multiple":false,
         "file":{  
            "file_type":"BAI",
            "meta_data":{  
               "visible":false,
               "tool":"process_bwa_mem",
               "description":"Aligned sequences index"
            },
            "file_path":"bwa_mem.bam.bai",
            "compressed":"null"
         }
      }
   ]
}{  
   "_id":"nucldynwf_pmes",
   "name":"Nucleosome Dynamics PMES",
   "title":"Nucleosome Dynamics Worflow PMES",
   "short_description":"Nucleosome Dynamics Tools for performing  nucleosome-related analysis based on MNase-seq experimental data",
   "long_description":"The nucleosome dynamics worflow offers different tools to analyze nucleosome positioning from MNase-seq experimental data and to compare experiments to account for the transient and dynamic nature of nucleosome positioning under different cellular states. The main analyses included are nucleR, that performs Fourier transform filtering and peak calling to define nucleosome location, and NucleosomeDynamics, that compares different MNase-seq experiments at read level to identify variations in nucleosomes fuzzines and location (shifts, evictions, inclusions). Additionally, other nucleosome related features are studied, like nucleosome-free regions, prediction of nucleosome phasing at gene level, classification of transcription start sites based on the surrounding nucleosomes and nucleosome stiffness.",
   "url":"http://mmb.pcb.ub.es/NucleosomeDynamics/",
   "owner":{  
      "institution":"IRB",
      "author":"Illa Ricard, Buitrago Diana, Brun Isabelle",
      "contact":"ricard.illa@irbbarcelona.org",
      "url":"http://mmb.pcb.ub.es/www/",
      "user":"ricard.illa@irbbarcelona.org"
   },
   "status":1,
   "sampleData":"nucldynwf",
   "external":true,
   "keywords":[  
      "dna",
      "chromatin",
      "nucleosome",
      "next gen seq",
      "sequence"
   ],
   "keywords_tool":[  
      "mnase-seq",
      "nucleosome caller",
      "nucleR",
      "accessibility",
      "periodicity",
      "stiffness",
      "nucleosome free region",
      "NFR",
      "nucleosome change",
      "fuzziness"
   ],
   "infrastructure":{  
      "memory":50,
      "cpus":2,
      "executable":"/home/pmes/nucleServ/nucleosome_dynamics.py",
      "interpreter":"python3",
      "clouds":{  
         "mug-irb":{  
            "launcher":"PMES",
            "workflowType":"Single",
            "imageName":"uuid_nucldynmgtoolapi_48",
            "default_cloud":true
         }
      }
   },
   "input_files":[  
      {  
         "name":"MNaseSeq",
         "description":"MNase-seq reads",
         "help":"MNase aligned reads in which nucleosome analyses are to be carried out. Multiple files can be given here, and for each, the selected analyses are going to be performed.",
         "file_type":[  
            "BAM"
         ],
         "data_type":[  
            "data_mnase_seq"
         ],
         "required":true,
         "allow_multiple":true
      },
      {  
         "name":"condition1",
         "description":"MNase-seq reference state (condition C1)",
         "help":"MNase data used to define the initial state  when comparing nucleosome positioning",
         "file_type":[  
            "BAM"
         ],
         "data_type":[  
            "data_mnase_seq"
         ],
         "required":false,
         "allow_multiple":false
      },
      {  
         "name":"condition2",
         "description":"MNAse-seq final state (condition C2)",
         "help":"MNase data used to define the final state  when comparing nucleosome positioning",
         "file_type":[  
            "BAM"
         ],
         "data_type":[  
            "data_mnase_seq"
         ],
         "required":false,
         "allow_multiple":false
      }
   ],
   "input_files_combinations":[  
      {  
         "description":"Analyse MNase-seq data",
         "input_files":[  
            "MNaseSeq"
         ]
      }
   ],
   "input_files_combinations_internal":[  
      [  
         {  
            "data_mnase_seq":"+"
         }
      ]
   ],
   "input_files_public_dir":[  
      {  
         "name":"refGenome_chromSizes",
         "description":"Folder where the information about the chromosome sizes of the reference genome is found",
         "help":"Reference genome Folder",
         "type":"hidden",
         "value":"refGenomes/",
         "file_type":[  
            "TXT"
         ],
         "data_type":[  
            "configuration_file"
         ],
         "required":true,
         "allow_multiple":false
      }
   ],
   "arguments":[  
      {  
         "name":"nucleR",
         "description":"NucleR",
         "help":"NucleR finds nucleosome positions from MNase experiments using Fourier transform filtering and classifies nucleosomes according to their fuzziness",
         "type":"boolean",
         "required":true,
         "allow_multiple":false,
         "default":"true"
      },
      {  
         "name":"nucleR:width",
         "description":"Width",
         "help":"Size of each nucleosome, in bp, to be considered by NucleR",
         "type":"integer",
         "required":true,
         "allow_multiple":false,
         "default":"147",
         "maximum":150,
         "minimum":1
      },
      {  
         "name":"nucleR:minoverlap",
         "description":"Minimum Overlap",
         "help":"Minimum overlap between two nucleosomes for merging them.",
         "type":"integer",
         "required":true,
         "allow_multiple":false,
         "default":"80"
      },
      {  
         "name":"nucleR:dyad_length",
         "description":"Dyad Length",
         "help":"Length of the reads that should be used for nucleosome calling to define the dyad of the nucleosomes keeping the given number of bases around the center of the read.",
         "type":"integer",
         "required":true,
         "allow_multiple":false,
         "default":"50"
      },
      {  
         "name":"nucleR:threshold",
         "description":"Background Level",
         "type":"boolean",
         "help":"Minimum number of reads (Coverage) to call a nucleosome. Can be given as a percentage (i.e., '25%' means that the peaks with coverage in the 1st quartile of data won't be considered); or as an absolute coverage value (i.e., '20' means that the peaks with less than 20 reads per million of mapped reads won't be considered). Default = 35%.",
         "required":true,
         "allow_multiple":false
      },
      {  
         "name":"nucleR:thresholdPercentage",
         "description":"Percentage",
         "help":"Minimum number of reads (Coverage) to call a nucleosome given as percentage (i.e., '25%' means that the peaks with coverage in the 1st quartile of data won't be considered).",
         "type":"number",
         "required":true,
         "allow_multiple":false,
         "default":"35",
         "maximum":100,
         "minimum":0
      },
      {  
         "name":"nucleR:thresholdValue",
         "description":"Absolute value",
         "help":"Minimum number of reads (Coverage) to call a nucleosome (i.e., '20' means that the peaks with less than 20 reads per million of mapped reads won't be considered).",
         "type":"integer",
         "required":true,
         "allow_multiple":false,
         "default":""
      },
      {  
         "name":"nucleR:hthresh",
         "description":"Height Threshold",
         "help":"Height threshold (between 0 and 1) to classify a nucleosome as fuzzy (class=F) or well-positioned ( class=W) according to the number of reads at the dyad. Nucleosomes below this value will be defined as fuzzy. Default = 0.4.",
         "type":"number",
         "required":true,
         "allow_multiple":false,
         "default":"0.4"
      },
      {  
         "name":"nucleR:wthresh",
         "description":"Width Threshold",
         "help":"Width threshold (between 0 and 1) to classify a nucleosome as fuzzy (class=F) or well-positioned (class=W) according to the dispersion of the reads around the dyad. ",
         "type":"number",
         "required":true,
         "allow_multiple":false,
         "default":"0.6"
      },
      {  
         "name":"nucleR:pcKeepComp",
         "description":"Coverage Smoothing",
         "help":"Parameter used in the smoothing when Fourier transformation is applied. Number of components to select with respect to the total size of the sample. llowed values are numeric (in range 0:1) for manual setting, or auto for automatic detection.",
         "type":"number",
         "required":true,
         "allow_multiple":false,
         "default":"0.02"
      },
      {  
         "name":"nucDyn",
         "description":"Nucleosome Dynamics",
         "help":"Detection of local changes in the position of nucleosomes at the single read level observed between two reference nucleosome maps",
         "type":"boolean",
         "required":true,
         "allow_multiple":false,
         "default":"true"
      },
      {  
         "name":"nucDyn:range",
         "description":"Range",
         "help":"Genomic region to be analyzed: whole genome ('all'), entire chromosome (chromosome name i.e. 'chrX'), or region of a chromosome ('chromosomeName:start-end).",
         "type":"string",
         "required":true,
         "allow_multiple":false,
         "default":"All"
      },
      {  
         "name":"nucDyn:maxDiff",
         "description":"Maximum Diff",
         "help":"Maximum distance between the dyads of two reads that allows them to still be considered a <i>shift</i>. If unspecified but <i>readSize</i> is specified, it will be set to the half of readSize. If neither of them is specified, it will be set to 70",
         "type":"integer",
         "required":true,
         "allow_multiple":false,
         "default":"70"
      },
      {  
         "name":"nucDyn:maxLen",
         "description":"Maximum Length",
         "help":"Used in the preliminar filtering. Reads longer than this number will be filtered out",
         "type":"integer",
         "required":true,
         "allow_multiple":false,
         "default":"140"
      },
      {  
         "name":"nucDyn:shift_min_nreads",
         "type":"integer",
         "description":"Shift minimum num. reads",
         "help":"Minimum number of reads in a 'SHIFT +' or a 'SHIFT -' hotspot",
         "required":true,
         "allow_multiple":false,
         "default":"3"
      },
      {  
         "name":"nucDyn:shift_threshold",
         "type":"number",
         "description":"Shifts threshold",
         "help":"Minimum score for a 'SHIFT +' or a 'SHIFT -' hotspot",
         "required":true,
         "allow_multiple":false,
         "default":"0.1"
      },
      {  
         "name":"nucDyn:indel_min_nreads",
         "type":"integer",
         "description":"Indels minimum num. reads",
         "help":"Minimum number of reads in an 'INCLUSION +' or a 'DELETION -' hotspot",
         "required":true,
         "allow_multiple":false,
         "default":"3"
      },
      {  
         "name":"nucDyn:indel_threshold",
         "type":"number",
         "description":"Indels threshold",
         "help":"Minimum score for an 'INCLUSION' or a 'DELETION' hotspot",
         "required":true,
         "allow_multiple":false,
         "default":"0.05"
      },
      {  
         "name":"nucDyn:equal_size",
         "description":"Equal Size",
         "help":"If set to TRUE, all sets will be set to the same length, conserving their original dyad position",
         "type":"boolean",
         "required":true,
         "allow_multiple":false
      },
      {  
         "name":"nucDyn:readSize",
         "type":"integer",
         "description":"Read Size",
         "help":"Length to which all reads will be set in case 'equalSize' is TRUE",
         "required":true,
         "allow_multiple":false,
         "default":"140"
      },
      {  
         "name":"NFR",
         "description":"Nucleosome Free Regions",
         "help":"Nucleosome-free regions (NFR) are regions depleted of nucleosomes and larger than an average linker fragment.",
         "type":"boolean",
         "required":true,
         "allow_multiple":false,
         "default":"true"
      },
      {  
         "name":"NFR:minwidth",
         "type":"integer",
         "description":"Minimum Width",
         "help":"Minimum width for a linker fragment to be considered a nucleosome-free region",
         "required":true,
         "allow_multiple":false,
         "default":"110"
      },
      {  
         "name":"NFR:threshold",
         "type":"integer",
         "description":"Maximum width",
         "help":"Maximum width for a linker fragment to be considered a nucleosome-free region",
         "required":true,
         "allow_multiple":false,
         "default":"140"
      },
      {  
         "name":"periodicity",
         "description":"Nucleosome Gene Phasing",
         "help":"Nucleosome phasing along a given gene between the first and last nucleosome",
         "type":"boolean",
         "required":true,
         "allow_multiple":false,
         "default":"true"
      },
      {  
         "name":"periodicity:periodicity",
         "type":"integer",
         "description":"Period",
         "help":"Average distance between two consecutive nucleosomes (repeat length).",
         "required":true,
         "allow_multiple":false,
         "default":"165"
      },
      {  
         "name":"txstart",
         "description":"TSS classification",
         "help":"Classification of the Transcription Start Sites (TSS) according to the nucleosome architecture.",
         "type":"boolean",
         "required":true,
         "allow_multiple":false,
         "default":"true"
      },
      {  
         "name":"txstart:window",
         "type":"integer",
         "description":"Window",
         "help":"Number of nucleotides on each side of the TSS where -1 and +1 nucleosome are search for.",
         "required":true,
         "allow_multiple":false,
         "default":"300"
      },
      {  
         "name":"txstart:open_thresh",
         "type":"integer",
         "description":"Open threshold",
         "help":"Distance between nucleosomes -1 and +1 to discriminate between 'open' and 'close' classes.",
         "required":true,
         "allow_multiple":false,
         "default":"215"
      },
      {  
         "name":"gausfitting",
         "description":"Stiffness",
         "help":"Measure of the resistance of a given nucleosome to be displaced, derived from the properties of the nucleosome calls fitted into a Gaussian distribution.",
         "type":"boolean",
         "required":true,
         "allow_multiple":false,
         "default":"true"
      },
      {  
         "name":"gausfitting:range",
         "type":"string",
         "description":"Genomic range",
         "help":"Genomic region to be analyzed: whole genome ('all'), entire chromosome (chromosome name i.e. 'chrX'), or region of a chromosome ('chromosomeName:start-end).",
         "required":true,
         "allow_multiple":false,
         "default":"All"
      }
   ],
   "control_file":".summary.json",
   "output_files":[  
      {  
         "name":"NR_gff",
         "required":false,
         "allow_multiple":true,
         "file":{  
            "file_type":"GFF3",
            "data_type":"nucleosome_positioning",
            "compressed":"null",
            "meta_data":{  
               "description":"Nuclesome positions predicted by NucleR from MNase-seq data",
               "tool":"nucldynwf",
               "visible":true
            }
         }
      },
      {  
         "name":"ND_gff",
         "required":false,
         "allow_multiple":true,
         "file":{  
            "file_type":"GFF3",
            "data_type":"nucleosome_dynamics",
            "compressed":"null",
            "meta_data":{  
               "description":"Nucleosome positioning differences given two MNAse-seq states",
               "tool":"nucldynwf",
               "visible":true
            }
         }
      },
      {  
         "name":"ND_bw",
         "required":false,
         "allow_multiple":true,
         "file":{  
            "file_type":"BW",
            "data_type":"nucleosome_dynamics",
            "compressed":"null",
            "meta_data":{  
               "description":"Nucleosome positioning differences given two MNAse-seq states",
               "tool":"nucldynwf",
               "visible":true
            }
         }
      },
      {  
         "name":"NFR_gff",
         "required":false,
         "allow_multiple":true,
         "file":{  
            "file_type":"GFF3",
            "data_type":"nucleosome_free_regions",
            "compressed":"null",
            "meta_data":{  
               "description":"Nucleosome Free Regions computed from MNase-seq data",
               "tool":"nucldynwf",
               "visible":true
            }
         }
      },
      {  
         "name":"TSS_gff",
         "required":false,
         "allow_multiple":true,
         "file":{  
            "file_type":"GFF3",
            "data_type":"tss_classification_by_nucleosomes",
            "compressed":"null",
            "meta_data":{  
               "description":"Transcriptions Start Site classification based on nucleosome architecture",
               "tool":"nucldynwf",
               "visible":true
            }
         }
      },
      {  
         "name":"STF_gff",
         "required":false,
         "allow_multiple":true,
         "file":{  
            "file_type":"GFF3",
            "data_type":"nucleosome_stiffness",
            "compressed":"null",
            "meta_data":{  
               "description":"Nucleosome stiffness computed from MNase-seq data",
               "tool":"nucldynwf",
               "visible":true
            }
         }
      },
      {  
         "name":"P_gff",
         "required":false,
         "allow_multiple":true,
         "file":{  
            "file_type":"GFF3",
            "data_type":"nucleosome_gene_phasing",
            "compressed":"null",
            "meta_data":{  
               "description":"Nucleosome phasing along a given gene computed from MNase-seq data",
               "tool":"nucldynwf",
               "visible":true
            }
         }
      },
      {  
         "name":"P_bw",
         "required":false,
         "allow_multiple":true,
         "file":{  
            "file_type":"BW",
            "data_type":"nucleosome_gene_phasing",
            "compressed":"null",
            "meta_data":{  
               "description":"Nucleosome phasing along a given gene computed from MNase-seq data",
               "tool":"nucldynwf",
               "visible":true
            }
         }
      },
      {  
         "name":"statistics",
         "required":true,
         "allow_multiple":false,
         "file":{  
            "file_type":"TAR",
            "data_type":"tool_statistics",
            "compressed":"gzip",
            "meta_data":{  
               "description":"Statistical data from nucleosome analysis workflow",
               "tool":"nucldynwf",
               "visible":false
            }
         }
      }
   ]
}
