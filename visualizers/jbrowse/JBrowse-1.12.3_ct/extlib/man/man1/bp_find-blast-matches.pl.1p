.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.29)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "BP_FIND-BLAST-MATCHES 1"
.TH BP_FIND-BLAST-MATCHES 1 "2018-10-02" "perl v5.22.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
bp_find\-blast\-matches.pl \- extract DNA sequences based on BLAST hits
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
bp_find\-blast\-matches.pl [\-h \-e \-p \-5 \-n \-o \-3 \-header] \-blast <\s-1BLAST_FILE\s0> \-fasta <\s-1FASTA_FILE\s0>
.SH "OPTIONS"
.IX Header "OPTIONS"
.SS "Mandatory:"
.IX Subsection "Mandatory:"
.IP "\fB\-blast\fR" 4
.IX Item "-blast"
\&\s-1BLAST\s0 output file to read from. The alignment should use the file specified by
\&'\-fasta' option ideally
.IP "\fB\-fasta\fR" 4
.IX Item "-fasta"
\&\s-1FASTA\s0 file to read from. This is where the sequence will be extracted from
.SS "Optional:"
.IX Subsection "Optional:"
.IP "\fB\-h\fR" 4
.IX Item "-h"
Displays this help message
.IP "\fB\-e\fR" 4
.IX Item "-e"
Maximum e\-value for matches (0.01 by default)
.IP "\fB\-p\fR" 4
.IX Item "-p"
Number of base pairs of 5' region to be included with the sequence
.IP "\fB\-5\fR" 4
.IX Item "-5"
Number of base pairs of 5' region only, excluding the regular sequence
.IP "\fB\-3\fR" 4
.IX Item "-3"
Number of base pairs of 3' region only, excluding the regular sequence
.IP "\fB\-n\fR" 4
.IX Item "-n"
Number of top hits to display, starting with the best hit
.IP "\fB\-o\fR" 4
.IX Item "-o"
Exact match to display (this option can't be used in conjunction with '\-n'
.IP "\fB\-header\fR" 4
.IX Item "-header"
The \s-1FASTA\s0 header to display instead of the default
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This script takes a \s-1BLAST\s0 output file and a \s-1FASTA\s0 file as arguments, 
given after the '\-blast' and '\-fasta' options respectively. The \s-1BLAST\s0 output 
file should have been generated with your sequence of interest and the 
\&\s-1FASTA\s0 file supplied as an argument.
Example: find\-blast\-matches.pl \-blast \s-1BLAST_FILE\s0 \-fasta \s-1FASTA_FILE\s0
.PP
It parses through the \s-1BLAST\s0 file to check for high quality matches, 
which are then searched for in the \s-1FASTA\s0 file.  The sequence may vary 
from you candidate sequence, hence the \s-1BLAST\s0 search prior.
.PP
The sequence from the \s-1FASTA\s0 file is then displayed to \s-1STDOUT.\s0
Optional arguments can be used, such as to extract the 5' or 3' region.
.SH "AUTHOR"
.IX Header "AUTHOR"
Gabriel Abud \- <gabriel.jabud\-at\-gmail.com>
.SH "FEEDBACK"
.IX Header "FEEDBACK"
.SS "Mailing Lists"
.IX Subsection "Mailing Lists"
User feedback is an integral part of the evolution of this and other
Bioperl modules.  Send your comments and suggestions preferably to
the Bioperl mailing list.  Your participation is much appreciated
.PP
.Vb 2
\&  bioperl\-l@bioperl.org                  \- General discussion
\&  http://bioperl.org/wiki/Mailing_lists  \- About the mailing lists
.Ve
.SS "Reporting Bugs"
.IX Subsection "Reporting Bugs"
Report bugs to the Bioperl bug tracking system to help us keep track
of the bugs and their resolution. Bug reports can be submitted via 
email or the web:
.PP
.Vb 1
\&  https://github.com/bioperl/bioperl\-live/issues
.Ve
.SH "EDIT HISTORY"
.IX Header "EDIT HISTORY"
2014\-08\-04 \- Gabriel Abud
    First features added
.SH "DEPENDANCIES"
.IX Header "DEPENDANCIES"
Getopt::long, Pod::Usage, Bio::SearchIO, Bio::Seq, Bio::SeqIO, Bio::Perl,
File::Basename
