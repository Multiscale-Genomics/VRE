# I am a comment. I should not cause the code to explode.
[TRACK DEFAULTS]
glyph       = generic
height      = 8
bgcolor     = #fefefe
fgcolor     = black
label density = 25
bump density  = 25
fogbat =


#this = comment

[Markers:region]
feature         = match:ITAG_sgn_markers
ignore_sub_part = match_part
key             = Markers
fgcolor         = black
bgcolor         = yellow
glyph           = generic
label density   = 100
bump density    = 100
link            = /search/quick?term=$name
citation        = GenomeThreader alignments of SGN marker sequences.

#Chunks removed from original that should have been tested in first 2 sections
[DM_BAC]
feature =
  "BAC_clone:DBolser_Dundee_BES_SSAHA_dm_bes_sg"
  "BAC_clone:DBolser_Dundee_BES_SSAHA_dm_bes_sb"
  "BAC_clone:DBolser_Dundee_BES_SSAHA_dm_bes_lg"
  "BAC_clone:DBolser_Dundee_BES_SSAHA_dm_bes_lb"
  "BAC_clone:DBolser_Dundee_BES_SSAHA_dm_bes_hg"
  "BAC_clone:DBolser_Dundee_BES_SSAHA_dm_bes_hb"
citation    = 
  BAC ends from the 'POTATO-B-01-100-110KB' library aligned using SSAHA2.
  The clone ends pair correctly (solid connector) or not (dashed connector),
  and are color coded by insert-size.  Provided by Dan Bolser, <a
  href="http://www.compbio.dundee.ac.uk/">University of Dundee</a>.

# Test subsections
[ sub . section ]
giant word = Antidisestablishmentarianism
multiline =
  herp
  derp
fancyMultiline = Le
                 herp
                 derp

# test last-resort json embedding
[ em.bedded.json ]
myjson = json:[{"foo":1,"zee":"hallo"},53]

[ sub.section]
array = 1

[GENERAL]
threshold = -1234,221e-02
plugins = foobar
plugins += zeegan

[sub.section]
array += 2
array +=3
inline.subsection.deeply = hihi
inline . con  . spaces = hoho

[function_testing]
meaningOfLife =
  function() {
      /* javascript comment */
      var x = 42; /* DID YOU ORDER THE CODE RED? */
      return x;
  };


alertTest = function() {
      alert('This is an example of a user-configurable'
        + ' JavaScript callback written in the configuration file.'
        + '  You have clicked on feature \"'+this.feature.get('name')
        + '\".'
      );
  }

randomNumberTitle = function(track,feature,div) {
    return 'Title from a JS callback (random number: '+Math.random()+')';
  }




[array_of_objects]
foo = json:{"nog":1}
foo += json:{"egg":2}

bar += overwrite me
bar =
 + one
 + two
 + three
   and a half
 + four

