.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.29)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Bio::Ontology::GOterm 3"
.TH Bio::Ontology::GOterm 3 "2018-10-02" "perl v5.22.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Bio::Ontology::GOterm \- representation of GO terms
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 6
\&  $term = Bio::Ontology::GOterm\->new
\&    ( \-go_id       => "GO:0016847",
\&      \-name        => "1\-aminocyclopropane\-1\-carboxylate synthase",
\&      \-definition  => "Catalysis of ...",
\&      \-is_obsolete => 0,
\&      \-comment     => "" );
\&
\&  $term\->add_definition_references( @refs );
\&  $term\->add_secondary_GO_ids( @ids );
\&  $term\->add_aliases( @aliases );
\&
\&  foreach my $dr ( $term\->each_definition_reference() ) {
\&      print $dr, "\en";
\&  }
\&
\&  # etc.
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This is \*(L"dumb\*(R" class for \s-1GO\s0 terms (it provides no functionality 
related to graphs). Implements Bio::Ontology::TermI.
.SH "FEEDBACK"
.IX Header "FEEDBACK"
.SS "Mailing Lists"
.IX Subsection "Mailing Lists"
User feedback is an integral part of the evolution of this and other
Bioperl modules. Send your comments and suggestions preferably to one
of the Bioperl mailing lists.  Your participation is much appreciated.
.PP
.Vb 2
\&  bioperl\-l@bioperl.org                  \- General discussion
\&  http://bioperl.org/wiki/Mailing_lists  \- About the mailing lists
.Ve
.SS "Support"
.IX Subsection "Support"
Please direct usage questions or support issues to the mailing list:
.PP
\&\fIbioperl\-l@bioperl.org\fR
.PP
rather than to the module maintainer directly. Many experienced and 
reponsive experts will be able look at the problem and quickly 
address it. Please include a thorough description of the problem 
with code and data examples if at all possible.
.SS "Reporting Bugs"
.IX Subsection "Reporting Bugs"
Report bugs to the Bioperl bug tracking system to help us keep track
the bugs and their resolution.  Bug reports can be submitted via the web:
.PP
.Vb 1
\&  https://github.com/bioperl/bioperl\-live/issues
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Christian M. Zmasek
.PP
Email: czmasek\-at\-burnham.org  or  cmzmasek@yahoo.com
.PP
\&\s-1WWW:  \s0 http://monochrome\-effect.net/
.PP
Address:
.PP
.Vb 3
\&  Genomics Institute of the Novartis Research Foundation
\&  10675 John Jay Hopkins Drive
\&  San Diego, CA 92121
.Ve
.SH "APPENDIX"
.IX Header "APPENDIX"
The rest of the documentation details each of the object
methods.
.SS "new"
.IX Subsection "new"
.Vb 10
\& Title   : new
\& Usage   : $term = Bio::Ontology::GOterm\->new( 
\&       \-go_id       => "GO:0016847",
\&       \-name        => "1\-aminocyclopropane\-1\-carboxylate synthase",
\&       \-definition  => "Catalysis of ...",
\&       \-is_obsolete => 0,
\&       \-comment     => "" );                   
\& Function: Creates a new Bio::Ontology::GOterm.
\& Returns : A new Bio::Ontology::GOterm object.
\& Args    : \-go_id         => the goid of this GO term [GO:nnnnnnn] 
\&                             or [nnnnnnn] (nnnnnnn is a zero\-padded
\&                             integer of seven digits)
\&           \-name          => the name of this GO term [scalar]
\&           \-definition    => the definition of this GO term [scalar]  
\&           \-ontology      => the ontology for this term (a
\&                             Bio::Ontology::OntologyI compliant object)
\&           \-version       => version information [scalar]
\&           \-is_obsolete   => the obsoleteness of this GO term [0 or 1]   
\&           \-comment       => a comment [scalar]
.Ve
.SS "init"
.IX Subsection "init"
.Vb 5
\& Title   : init()
\& Usage   : $term\->init();   
\& Function: Initializes this GOterm to all "" and empty lists.
\& Returns : 
\& Args    :
.Ve
.SS "GO_id"
.IX Subsection "GO_id"
.Vb 5
\& Title   : GO_id
\& Usage   : $term\->GO_id( "GO:0003947" );
\&           or
\&           print $term\->GO_id();
\& Function: Set/get for the goid of this GO term.
\&
\&           This is essentially an alias to identifier(), with added
\&           format checking.
\&
\& Returns : The goid [GO:nnnnnnn].
\& Args    : The goid [GO:nnnnnnn] or [nnnnnnn] (nnnnnnn is a
\&           zero\-padded integer of seven digits) (optional).
.Ve
.SS "get_secondary_GO_ids"
.IX Subsection "get_secondary_GO_ids"
.Vb 3
\& Title   : get_secondary_GO_ids
\& Usage   : @ids = $term\->get_secondary_GO_ids();
\& Function: Returns a list of secondary goids of this Term.
\&
\&           This is aliased to remove_secondary_ids().
\&
\& Returns : A list of secondary goids [array of [GO:nnnnnnn]]
\&           (nnnnnnn is a zero\-padded integer of seven digits).
\& Args    :
.Ve
.SS "add_secondary_GO_id"
.IX Subsection "add_secondary_GO_id"
.Vb 6
\& Title   : add_secondary_GO_id
\& Usage   : $term\->add_secondary_GO_id( @ids );
\&           or
\&           $term\->add_secondary_GO_id( $id );                  
\& Function: Pushes one or more secondary goids into
\&           the list of secondary goids.
\&
\&           This is aliased to remove_secondary_ids().
\&
\& Returns : 
\& Args    : One secondary goid [GO:nnnnnnn or nnnnnnn] or a list
\&           of secondary goids [array of [GO:nnnnnnn or nnnnnnn]]
\&           (nnnnnnn is a zero\-padded integer of seven digits).
.Ve
.SS "remove_secondary_GO_ids"
.IX Subsection "remove_secondary_GO_ids"
.Vb 3
\& Title   : remove_secondary_GO_ids()
\& Usage   : $term\->remove_secondary_GO_ids();
\& Function: Deletes (and returns) the secondary goids of this Term.
\&
\&           This is aliased to remove_secondary_ids().
\&
\& Returns : A list of secondary goids [array of [GO:nnnnnnn]]
\&           (nnnnnnn is a zero\-padded integer of seven digits).
\& Args    :
.Ve
.SS "to_string"
.IX Subsection "to_string"
.Vb 5
\& Title   : to_string()
\& Usage   : print $term\->to_string();
\& Function: to_string method for GO terms.
\& Returns : A string representation of this GOterm.
\& Args    :
.Ve
