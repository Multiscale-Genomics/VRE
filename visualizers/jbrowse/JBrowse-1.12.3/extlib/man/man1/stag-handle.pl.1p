.\" Automatically generated by Pod::Man 2.28 (Pod::Simple 3.29)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{
.    if \nF \{
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "STAG-HANDLE 1p"
.TH STAG-HANDLE 1p "2009-12-14" "perl v5.22.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
stag\-handle \- streams a stag file through a handler into a writer
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&  stag\-handle \-w itext \-c my\-handler.pl myfile.xml > processed.itext
\&  stag\-handle \-w itext \-p My::Parser \-m My::Handler myfile.xml > processed.itext
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
will take a Stag compatible format (xml, sxpr or itext), turn the data
into an event stream passing it through my\-handler.pl
.IP "\-help|h" 4
.IX Item "-help|h"
shows this document
.IP "\-module|m \s-1PERLMODULE\s0" 4
.IX Item "-module|m PERLMODULE"
A module that is used to transform the input events
the module should inherit from Data::Stag::BaseHandler
.IP "\-unit|u \s-1NODE_NAME\s0" 4
.IX Item "-unit|u NODE_NAME"
(you should always use this option if you specify \-m)
.Sp
this is the unit that gets passed to the handler/transformer. this
will get set automatically if you use the the \-c, \-s or \-t options
.Sp
multiple units can be set
.Sp
.Vb 1
\&  \-u foo \-u bar \-u boz
.Ve
.IP "\-writer|w \s-1WRITER\s0" 4
.IX Item "-writer|w WRITER"
writer for final transformed tree; can be xml, sxpr or itext
.IP "\-module|m \s-1MODULE\s0" 4
.IX Item "-module|m MODULE"
perl modules for handling events
.IP "\-codefile|c \s-1FILE\s0" 4
.IX Item "-codefile|c FILE"
a file containing a perlhashref containing event handlers \- see below
.IP "\-sub|s \s-1PERL\s0" 4
.IX Item "-sub|s PERL"
a perl hashref containing handlers
.IP "\-trap|t ELEMENT=SUB" 4
.IX Item "-trap|t ELEMENT=SUB"
.SH "EXAMPLES"
.IX Header "EXAMPLES"
.Vb 10
\&  unix> cat my\-handler.pl
\&  {
\&    person => sub {
\&        my ($self, $person) = @_;
\&        $person\->set_fullname($person\->get_firstname . \*(Aq \*(Aq .
\&                           $person\->get_lastname);
\&        $person;
\&    },
\&    address => sub {
\&        my ($self, $address) = @_;
\&        # remove addresses altogether from processed file
\&        return;
\&    },
\&  }
.Ve
.SH "POD ERRORS"
.IX Header "POD ERRORS"
Hey! \fBThe above document had some coding errors, which are explained below:\fR
.IP "Around line 138:" 4
.IX Item "Around line 138:"
=over should be: '=over' or '=over positive_number'
